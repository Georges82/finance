{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Table = React.forwardRef<\r\n  HTMLTableElement,\r\n  React.HTMLAttributes<HTMLTableElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div className=\"relative w-full overflow-auto\">\r\n    <table\r\n      ref={ref}\r\n      className={cn(\"w-full caption-bottom text-sm\", className)}\r\n      {...props}\r\n    />\r\n  </div>\r\n))\r\nTable.displayName = \"Table\"\r\n\r\nconst TableHeader = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\r\n))\r\nTableHeader.displayName = \"TableHeader\"\r\n\r\nconst TableBody = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tbody\r\n    ref={ref}\r\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableBody.displayName = \"TableBody\"\r\n\r\nconst TableFooter = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tfoot\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableFooter.displayName = \"TableFooter\"\r\n\r\nconst TableRow = React.forwardRef<\r\n  HTMLTableRowElement,\r\n  React.HTMLAttributes<HTMLTableRowElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tr\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableRow.displayName = \"TableRow\"\r\n\r\nconst TableHead = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.ThHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <th\r\n    ref={ref}\r\n    className={cn(\r\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableHead.displayName = \"TableHead\"\r\n\r\nconst TableCell = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.TdHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <td\r\n    ref={ref}\r\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCell.displayName = \"TableCell\"\r\n\r\nconst TableCaption = React.forwardRef<\r\n  HTMLTableCaptionElement,\r\n  React.HTMLAttributes<HTMLTableCaptionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <caption\r\n    ref={ref}\r\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCaption.displayName = \"TableCaption\"\r\n\r\nexport {\r\n  Table,\r\n  TableHeader,\r\n  TableBody,\r\n  TableFooter,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableCaption,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\r\n        outline: \"text-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface BadgeProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof badgeVariants> {}\r\n\r\nfunction Badge({ className, variant, ...props }: BadgeProps) {\r\n  return (\r\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\r\n  )\r\n}\r\n\r\nexport { Badge, badgeVariants }\r\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst labelVariants = cva(\r\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n)\r\n\r\nconst Label = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\r\n    VariantProps<typeof labelVariants>\r\n>(({ className, ...props }, ref) => (\r\n  <LabelPrimitive.Root\r\n    ref={ref}\r\n    className={cn(labelVariants(), className)}\r\n    {...props}\r\n  />\r\n))\r\nLabel.displayName = LabelPrimitive.Root.displayName\r\n\r\nexport { Label }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport {\r\n  Controller,\r\n  FormProvider,\r\n  useFormContext,\r\n  type ControllerProps,\r\n  type FieldPath,\r\n  type FieldValues,\r\n} from \"react-hook-form\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Label } from \"@/components/ui/label\"\r\n\r\nconst Form = FormProvider\r\n\r\ntype FormFieldContextValue<\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\r\n> = {\r\n  name: TName\r\n}\r\n\r\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\r\n  {} as FormFieldContextValue\r\n)\r\n\r\nconst FormField = <\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\r\n>({\r\n  ...props\r\n}: ControllerProps<TFieldValues, TName>) => {\r\n  return (\r\n    <FormFieldContext.Provider value={{ name: props.name }}>\r\n      <Controller {...props} />\r\n    </FormFieldContext.Provider>\r\n  )\r\n}\r\n\r\nconst useFormField = () => {\r\n  const fieldContext = React.useContext(FormFieldContext)\r\n  const itemContext = React.useContext(FormItemContext)\r\n  const { getFieldState, formState } = useFormContext()\r\n\r\n  const fieldState = getFieldState(fieldContext.name, formState)\r\n\r\n  if (!fieldContext) {\r\n    throw new Error(\"useFormField should be used within <FormField>\")\r\n  }\r\n\r\n  const { id } = itemContext\r\n\r\n  return {\r\n    id,\r\n    name: fieldContext.name,\r\n    formItemId: `${id}-form-item`,\r\n    formDescriptionId: `${id}-form-item-description`,\r\n    formMessageId: `${id}-form-item-message`,\r\n    ...fieldState,\r\n  }\r\n}\r\n\r\ntype FormItemContextValue = {\r\n  id: string\r\n}\r\n\r\nconst FormItemContext = React.createContext<FormItemContextValue>(\r\n  {} as FormItemContextValue\r\n)\r\n\r\nconst FormItem = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => {\r\n  const id = React.useId()\r\n\r\n  return (\r\n    <FormItemContext.Provider value={{ id }}>\r\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\r\n    </FormItemContext.Provider>\r\n  )\r\n})\r\nFormItem.displayName = \"FormItem\"\r\n\r\nconst FormLabel = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\r\n>(({ className, ...props }, ref) => {\r\n  const { error, formItemId } = useFormField()\r\n\r\n  return (\r\n    <Label\r\n      ref={ref}\r\n      className={cn(error && \"text-destructive\", className)}\r\n      htmlFor={formItemId}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nFormLabel.displayName = \"FormLabel\"\r\n\r\nconst FormControl = React.forwardRef<\r\n  React.ElementRef<typeof Slot>,\r\n  React.ComponentPropsWithoutRef<typeof Slot>\r\n>(({ ...props }, ref) => {\r\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\r\n\r\n  return (\r\n    <Slot\r\n      ref={ref}\r\n      id={formItemId}\r\n      aria-describedby={\r\n        !error\r\n          ? `${formDescriptionId}`\r\n          : `${formDescriptionId} ${formMessageId}`\r\n      }\r\n      aria-invalid={!!error}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nFormControl.displayName = \"FormControl\"\r\n\r\nconst FormDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => {\r\n  const { formDescriptionId } = useFormField()\r\n\r\n  return (\r\n    <p\r\n      ref={ref}\r\n      id={formDescriptionId}\r\n      className={cn(\"text-sm text-muted-foreground\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nFormDescription.displayName = \"FormDescription\"\r\n\r\nconst FormMessage = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, children, ...props }, ref) => {\r\n  const { error, formMessageId } = useFormField()\r\n  const body = error ? String(error?.message ?? \"\") : children\r\n\r\n  if (!body) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <p\r\n      ref={ref}\r\n      id={formMessageId}\r\n      className={cn(\"text-sm font-medium text-destructive\", className)}\r\n      {...props}\r\n    >\r\n      {body}\r\n    </p>\r\n  )\r\n})\r\nFormMessage.displayName = \"FormMessage\"\r\n\r\nexport {\r\n  useFormField,\r\n  Form,\r\n  FormItem,\r\n  FormLabel,\r\n  FormControl,\r\n  FormDescription,\r\n  FormMessage,\r\n  FormField,\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 450, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 486, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\r\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Select = SelectPrimitive.Root\r\n\r\nconst SelectGroup = SelectPrimitive.Group\r\n\r\nconst SelectValue = SelectPrimitive.Value\r\n\r\nconst SelectTrigger = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <SelectPrimitive.Icon asChild>\r\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\r\n    </SelectPrimitive.Icon>\r\n  </SelectPrimitive.Trigger>\r\n))\r\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\r\n\r\nconst SelectScrollUpButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollUpButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronUp className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollUpButton>\r\n))\r\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\r\n\r\nconst SelectScrollDownButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollDownButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronDown className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollDownButton>\r\n))\r\nSelectScrollDownButton.displayName =\r\n  SelectPrimitive.ScrollDownButton.displayName\r\n\r\nconst SelectContent = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\r\n>(({ className, children, position = \"popper\", ...props }, ref) => (\r\n  <SelectPrimitive.Portal>\r\n    <SelectPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        position === \"popper\" &&\r\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\r\n        className\r\n      )}\r\n      position={position}\r\n      {...props}\r\n    >\r\n      <SelectScrollUpButton />\r\n      <SelectPrimitive.Viewport\r\n        className={cn(\r\n          \"p-1\",\r\n          position === \"popper\" &&\r\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\r\n        )}\r\n      >\r\n        {children}\r\n      </SelectPrimitive.Viewport>\r\n      <SelectScrollDownButton />\r\n    </SelectPrimitive.Content>\r\n  </SelectPrimitive.Portal>\r\n))\r\nSelectContent.displayName = SelectPrimitive.Content.displayName\r\n\r\nconst SelectLabel = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectLabel.displayName = SelectPrimitive.Label.displayName\r\n\r\nconst SelectItem = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <SelectPrimitive.ItemIndicator>\r\n        <Check className=\"h-4 w-4\" />\r\n      </SelectPrimitive.ItemIndicator>\r\n    </span>\r\n\r\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n  </SelectPrimitive.Item>\r\n))\r\nSelectItem.displayName = SelectPrimitive.Item.displayName\r\n\r\nconst SelectSeparator = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\r\n\r\nexport {\r\n  Select,\r\n  SelectGroup,\r\n  SelectValue,\r\n  SelectTrigger,\r\n  SelectContent,\r\n  SelectLabel,\r\n  SelectItem,\r\n  SelectSeparator,\r\n  SelectScrollUpButton,\r\n  SelectScrollDownButton,\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 701, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\r\n\r\nimport {cn} from '@/lib/utils';\r\n\r\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\r\n  ({className, ...props}, ref) => {\r\n    return (\r\n      <textarea\r\n        className={cn(\r\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\nTextarea.displayName = 'Textarea';\r\n\r\nexport {Textarea};\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 736, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Separator = React.forwardRef<\r\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\r\n>(\r\n  (\r\n    { className, orientation = \"horizontal\", decorative = true, ...props },\r\n    ref\r\n  ) => (\r\n    <SeparatorPrimitive.Root\r\n      ref={ref}\r\n      decorative={decorative}\r\n      orientation={orientation}\r\n      className={cn(\r\n        \"shrink-0 bg-border\",\r\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n)\r\nSeparator.displayName = SeparatorPrimitive.Root.displayName\r\n\r\nexport { Separator }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI/B,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO,EACtE,oBAEA,6LAAC,wKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;;AAIf,UAAU,WAAW,GAAG,wKAAA,CAAA,OAAuB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 774, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/components/ui/radio-group.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\r\nimport { Circle } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst RadioGroup = React.forwardRef<\r\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\r\n>(({ className, ...props }, ref) => {\r\n  return (\r\n    <RadioGroupPrimitive.Root\r\n      className={cn(\"grid gap-2\", className)}\r\n      {...props}\r\n      ref={ref}\r\n    />\r\n  )\r\n})\r\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\r\n\r\nconst RadioGroupItem = React.forwardRef<\r\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\r\n>(({ className, ...props }, ref) => {\r\n  return (\r\n    <RadioGroupPrimitive.Item\r\n      ref={ref}\r\n      className={cn(\r\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\r\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\r\n      </RadioGroupPrimitive.Indicator>\r\n    </RadioGroupPrimitive.Item>\r\n  )\r\n})\r\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\r\n\r\nexport { RadioGroup, RadioGroupItem }\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,6LAAC,6KAAA,CAAA,OAAwB;QACvB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;QAC3B,GAAG,KAAK;QACT,KAAK;;;;;;AAGX;;AACA,WAAW,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,6LAAC,6KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4OACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,YAA6B;YAAC,WAAU;sBACvC,cAAA,6LAAC,yMAAA,CAAA,SAAM;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI1B;;AACA,eAAe,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 844, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Switch = React.forwardRef<\r\n  React.ElementRef<typeof SwitchPrimitives.Root>,\r\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\r\n>(({ className, ...props }, ref) => (\r\n  <SwitchPrimitives.Root\r\n    className={cn(\r\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\r\n      className\r\n    )}\r\n    {...props}\r\n    ref={ref}\r\n  >\r\n    <SwitchPrimitives.Thumb\r\n      className={cn(\r\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\r\n      )}\r\n    />\r\n  </SwitchPrimitives.Root>\r\n))\r\nSwitch.displayName = SwitchPrimitives.Root.displayName\r\n\r\nexport { Switch }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,OAAqB;QACpB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sXACA;QAED,GAAG,KAAK;QACT,KAAK;kBAEL,cAAA,6LAAC,qKAAA,CAAA,QAAsB;YACrB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;;AAKR,OAAO,WAAW,GAAG,qKAAA,CAAA,OAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 887, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\r\nimport { X } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Dialog = DialogPrimitive.Root\r\n\r\nconst DialogTrigger = DialogPrimitive.Trigger\r\n\r\nconst DialogPortal = DialogPrimitive.Portal\r\n\r\nconst DialogClose = DialogPrimitive.Close\r\n\r\nconst DialogOverlay = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Overlay\r\n    ref={ref}\r\n    className={cn(\r\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\r\n\r\nconst DialogContent = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\r\n>(({ className, children, ...props }, ref) => (\r\n  <DialogPortal>\r\n    <DialogOverlay />\r\n    <DialogPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\r\n        <X className=\"h-4 w-4\" />\r\n        <span className=\"sr-only\">Close</span>\r\n      </DialogPrimitive.Close>\r\n    </DialogPrimitive.Content>\r\n  </DialogPortal>\r\n))\r\nDialogContent.displayName = DialogPrimitive.Content.displayName\r\n\r\nconst DialogHeader = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nDialogHeader.displayName = \"DialogHeader\"\r\n\r\nconst DialogFooter = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nDialogFooter.displayName = \"DialogFooter\"\r\n\r\nconst DialogTitle = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Title>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Title\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-lg font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDialogTitle.displayName = DialogPrimitive.Title.displayName\r\n\r\nconst DialogDescription = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Description>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nDialogDescription.displayName = DialogPrimitive.Description.displayName\r\n\r\nexport {\r\n  Dialog,\r\n  DialogPortal,\r\n  DialogOverlay,\r\n  DialogClose,\r\n  DialogTrigger,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogFooter,\r\n  DialogTitle,\r\n  DialogDescription,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,qKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,qKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,qKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1038, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/components/ui/command.tsx"],"sourcesContent":["\r\n\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { DialogProps } from \"@radix-ui/react-dialog\"\r\nimport { Command as CommandPrimitive } from \"cmdk\"\r\nimport { Search } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\r\n\r\nconst Command = React.forwardRef<\r\n  React.ElementRef<typeof CommandPrimitive>,\r\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\r\n>(({ className, ...props }, ref) => (\r\n  <CommandPrimitive\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCommand.displayName = CommandPrimitive.displayName\r\n\r\ninterface CommandDialogProps extends DialogProps {}\r\n\r\nconst CommandDialog = ({ children, ...props }: CommandDialogProps) => {\r\n  return (\r\n    <Dialog {...props}>\r\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\r\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\r\n          {children}\r\n        </Command>\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nconst CommandInput = React.forwardRef<\r\n  React.ElementRef<typeof CommandPrimitive.Input>,\r\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\r\n>(({ className, ...props }, ref) => (\r\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\r\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\r\n    <CommandPrimitive.Input\r\n      ref={ref}\r\n      className={cn(\r\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  </div>\r\n))\r\n\r\nCommandInput.displayName = CommandPrimitive.Input.displayName\r\n\r\nconst CommandList = React.forwardRef<\r\n  React.ElementRef<typeof CommandPrimitive.List>,\r\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\r\n>(({ className, ...props }, ref) => (\r\n  <CommandPrimitive.List\r\n    ref={ref}\r\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\r\n    {...props}\r\n  />\r\n))\r\n\r\nCommandList.displayName = CommandPrimitive.List.displayName\r\n\r\nconst CommandEmpty = React.forwardRef<\r\n  React.ElementRef<typeof CommandPrimitive.Empty>,\r\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\r\n>((props, ref) => (\r\n  <CommandPrimitive.Empty\r\n    ref={ref}\r\n    className=\"py-6 text-center text-sm\"\r\n    {...props}\r\n  />\r\n))\r\n\r\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\r\n\r\nconst CommandGroup = React.forwardRef<\r\n  React.ElementRef<typeof CommandPrimitive.Group>,\r\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\r\n>(({ className, ...props }, ref) => (\r\n  <CommandPrimitive.Group\r\n    ref={ref}\r\n    className={cn(\r\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\n\r\nCommandGroup.displayName = CommandPrimitive.Group.displayName\r\n\r\nconst CommandSeparator = React.forwardRef<\r\n  React.ElementRef<typeof CommandPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <CommandPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 h-px bg-border\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\r\n\r\nconst CommandItem = React.forwardRef<\r\n  React.ElementRef<typeof CommandPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\r\n>(({ className, ...props }, ref) => (\r\n  <CommandPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none aria-selected:bg-accent aria-selected:text-accent-foreground data-[disabled=true]:pointer-events-none data-[disabled=true]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\n\r\nCommandItem.displayName = CommandPrimitive.Item.displayName\r\n\r\nconst CommandShortcut = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLSpanElement>) => {\r\n  return (\r\n    <span\r\n      className={cn(\r\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\nCommandShortcut.displayName = \"CommandShortcut\"\r\n\r\nexport {\r\n  Command,\r\n  CommandDialog,\r\n  CommandInput,\r\n  CommandList,\r\n  CommandEmpty,\r\n  CommandGroup,\r\n  CommandItem,\r\n  CommandShortcut,\r\n  CommandSeparator,\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1219, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Popover = PopoverPrimitive.Root\r\n\r\nconst PopoverTrigger = PopoverPrimitive.Trigger\r\n\r\nconst PopoverContent = React.forwardRef<\r\n  React.ElementRef<typeof PopoverPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\r\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\r\n  <PopoverPrimitive.Portal>\r\n    <PopoverPrimitive.Content\r\n      ref={ref}\r\n      align={align}\r\n      sideOffset={sideOffset}\r\n      className={cn(\r\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  </PopoverPrimitive.Portal>\r\n))\r\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\r\n\r\nexport { Popover, PopoverTrigger, PopoverContent }\r\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,UAAU,sKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,sKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,6LAAC,sKAAA,CAAA,SAAuB;kBACtB,cAAA,6LAAC,sKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,sKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1267, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/components/dashboard/models/model-form-sheet.tsx"],"sourcesContent":["\n'use client';\nimport React from 'react';\nimport { z } from 'zod';\nimport { useForm, useWatch } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\n\nimport { Button } from '@/components/ui/button';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n  FormDescription\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport { NumberInput } from '@/components/ui/number-input';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport {\n  Sheet,\n  SheetContent,\n  SheetHeader,\n  SheetTitle,\n  SheetDescription,\n  SheetFooter,\n  SheetClose,\n} from '@/components/ui/sheet';\nimport { Textarea } from '@/components/ui/textarea';\nimport type { Model } from '@/app/dashboard/models/page';\nimport { Separator } from '@/components/ui/separator';\nimport { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';\nimport { Switch } from '@/components/ui/switch';\nimport { cn } from '@/lib/utils';\nimport { Command, CommandEmpty, CommandGroup, CommandInput, CommandItem } from '@/components/ui/command';\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport { Badge } from '@/components/ui/badge';\nimport { X } from 'lucide-react';\nimport { apiService, Manager, TeamLeader } from '@/lib/api';\n\n\nconst optionalCoercedNumber = z.preprocess(\n  (val) => {\n    if (val === '' || val === null || typeof val === 'undefined') return undefined;\n    const num = Number(val);\n    return isNaN(num) ? val : num;\n  },\n  z.number().min(0).optional()\n);\nconst optionalBooleanFalse = z.preprocess((val) => (val === '' || val === null || val === undefined ? false : val), z.boolean()).optional();\n\nconst formSchema = z.object({\n    modelName: z.string().min(2, \"Model name is required.\"),\n    clientAgencyName: z.string().min(2, \"Client agency name is required.\"),\n    managerName: z.string().optional(),\n    teamLeader: z.string().optional(),\n    teamLeaderId: z.string().optional(),\n    referencedModels: z.array(z.string()).optional(),\n    status: z.enum(['Active', 'Inactive']),\n    paymentStatus: z.enum(['Paid', 'Not Paid']).optional(),\n    notes: z.string().optional(),\n    earningsType: z.enum(['Type 1', 'Type 2']),\n    cutLogic: z.object({\n        percentage1: z.coerce.number().optional(),\n        threshold: z.coerce.number().optional(),\n        fixedAmount: z.coerce.number().optional(),\n        percentage2: z.coerce.number().optional(),\n    }),\n    commissionRules: z.object({\n        baseCommission: z.coerce.number().min(0),\n        bonusEnabled: optionalBooleanFalse,\n        bonusThreshold: optionalCoercedNumber,\n        bonusCommission: optionalCoercedNumber,\n    }),\n}).refine((data) => {\n    // For non-reference models, manager and team leader are required\n    const isReferenceModel = data.referencedModels && data.referencedModels.length > 0;\n    if (!isReferenceModel) {\n        return data.managerName && data.teamLeader;\n    }\n    return true;\n}, {\n    message: \"Manager and Team Leader are required for non-reference models\",\n    path: [\"managerName\", \"teamLeader\"]\n});\n\ntype ModelFormValues = z.infer<typeof formSchema>;\n\ninterface ModelFormSheetProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: (values: ModelFormValues) => void;\n  model?: Model;\n}\n\nexport function ModelFormSheet({\n  isOpen,\n  onClose,\n  onSubmit,\n  model,\n}: ModelFormSheetProps) {\n    const defaultValues: ModelFormValues = {\n        modelName: '',\n        clientAgencyName: '',\n        managerName: '',\n        teamLeader: '',\n        teamLeaderId: undefined,\n        referencedModels: [],\n        status: 'Active',\n        paymentStatus: undefined,\n        notes: '',\n        earningsType: 'Type 1',\n        cutLogic: {\n            percentage1: 0,\n            threshold: 0,\n            fixedAmount: 0,\n            percentage2: 0,\n        },\n        commissionRules: {\n            baseCommission: 0,\n            bonusEnabled: false,\n            bonusThreshold: undefined,\n            bonusCommission: undefined,\n        },\n    };\n\n  const form = useForm<ModelFormValues>({\n    resolver: zodResolver(formSchema),\n    defaultValues: model ? undefined : defaultValues,\n  });\n\n  const earningsType = useWatch({\n    control: form.control,\n    name: \"earningsType\",\n  });\n\n  const bonusEnabledWatch = useWatch({\n      control: form.control,\n      name: 'commissionRules.bonusEnabled',\n  })\n  const bonusEnabled = Boolean(bonusEnabledWatch);\n\n  const referencedModels = useWatch({\n    control: form.control,\n    name: \"referencedModels\",\n  });\n\n  // Check if this is a reference model\n  const isReferenceModel = referencedModels && referencedModels.length > 0;\n\n  // Clear manager and team leader when reference models are selected\n  React.useEffect(() => {\n    if (isReferenceModel) {\n      form.setValue('managerName', '');\n      form.setValue('teamLeader', '');\n      form.setValue('teamLeaderId', '');\n    }\n  }, [isReferenceModel, form]);\n\n  React.useEffect(() => {\n    if (isOpen) {\n        if (model) {\n            form.reset({\n                ...model,\n                earningsType: model.earningsType as 'Type 1' | 'Type 2',\n                status: model.status as 'Active' | 'Inactive',\n                paymentStatus: (model as any).paymentStatus as 'Paid' | 'Not Paid' | undefined,\n                commissionRules: {\n                    baseCommission: (model as any).commissionRules?.baseCommission ?? 0,\n                    bonusEnabled: Boolean((model as any).commissionRules?.bonusEnabled),\n                    bonusThreshold: (model as any).commissionRules?.bonusThreshold ?? undefined,\n                    bonusCommission: (model as any).commissionRules?.bonusCommission ?? undefined,\n                }\n            });\n        } else {\n            form.reset(defaultValues);\n        }\n    }\n  }, [model, form, isOpen]);\n\n  const [managers, setManagers] = React.useState<Manager[]>([]);\n  const [teamLeaders, setTeamLeaders] = React.useState<TeamLeader[]>([]);\n  const [selectedTLId, setSelectedTLId] = React.useState<string | undefined>(undefined);\n  const [allModelNames, setAllModelNames] = React.useState<string[]>([]);\n\n  // Set teamLeaderId when model is loaded and teamLeader is available\n  React.useEffect(() => {\n    if (model && model.teamLeader && teamLeaders.length > 0) {\n      const matchingTL = teamLeaders.find(tl => tl.name === model.teamLeader);\n      if (matchingTL) {\n        setSelectedTLId(matchingTL.manager_id);\n        form.setValue('teamLeaderId', matchingTL.manager_id, { shouldDirty: false, shouldTouch: false });\n      }\n    }\n  }, [model, teamLeaders, form]);\n\n  // Re-set form values when managers and team leaders data is loaded (for edit mode)\n  React.useEffect(() => {\n    if (model && isOpen && managers.length > 0 && teamLeaders.length > 0) {\n      // Re-set the form values to ensure Select components can find the matching options\n      form.setValue('managerName', model.managerName || '', { shouldDirty: false, shouldTouch: false });\n      form.setValue('teamLeader', model.teamLeader || '', { shouldDirty: false, shouldTouch: false });\n      \n      // Also set teamLeaderId if we have the team leader data\n      if (model.teamLeader) {\n        const matchingTL = teamLeaders.find(tl => tl.name === model.teamLeader);\n        if (matchingTL) {\n          setSelectedTLId(matchingTL.manager_id);\n          form.setValue('teamLeaderId', matchingTL.manager_id, { shouldDirty: false, shouldTouch: false });\n        }\n      }\n    }\n  }, [model, isOpen, managers, teamLeaders, form]);\n\n  // Deduplicate by name to avoid duplicate label keys within Select\n  const uniqueManagersByName = React.useMemo(() => {\n    const seen = new Set<string>();\n    return (managers || []).filter((m) => {\n      if (seen.has(m.name)) return false;\n      seen.add(m.name);\n      return true;\n    });\n  }, [managers]);\n\n  const uniqueTeamLeadersByName = React.useMemo(() => {\n    const seen = new Set<string>();\n    return (teamLeaders || []).filter((tl: any) => {\n      const name = tl.name;\n      if (seen.has(name)) return false;\n      seen.add(name);\n      return true;\n    });\n  }, [teamLeaders]);\n\n  React.useEffect(() => {\n    if (!isOpen) return;\n    (async () => {\n      try {\n        const [mgrRes, tlRes, mdlRes] = await Promise.all([\n          apiService.getAllManagers({ query: '', sort: 'desc', sort_by: 'created_at' }),\n          apiService.getAllTeamLeaders({ query: '', sort: 'desc', sort_by: 'created_at' }),\n          apiService.getAllModels({ limit: 1000 })\n        ]);\n        const allManagers = (mgrRes.data || []).filter(m => m.status === 'Active' && m.role === 'Manager');\n        const allTLs = (tlRes.data || []).filter(tl => tl.status === 'Active');\n        setManagers(allManagers);\n        setTeamLeaders(allTLs);\n        const names = (mdlRes.data || []).map((m) => m.modelName).filter(Boolean);\n        const uniqueNames = Array.from(new Set(names));\n        setAllModelNames(uniqueNames);\n      } catch (e) {\n        console.error('Failed fetching managers/team leaders', e);\n      }\n    })();\n  }, [isOpen]);\n  \n\n  const title = model ? 'Edit Model' : 'Add New Model';\n  const description = model\n    ? 'Update the details for this model.'\n    : 'Fill in the form to add a new model to the system.';\n\n  return (\n    <Sheet open={isOpen} onOpenChange={onClose}>\n      <SheetContent className=\"sm:max-w-2xl w-full flex flex-col h-full\">\n        <SheetHeader className=\"flex-shrink-0\">\n          <SheetTitle>{title}</SheetTitle>\n          <SheetDescription>{description}</SheetDescription>\n        </SheetHeader>\n        <Form {...form}>\n          <form\n            onSubmit={form.handleSubmit((values) => {\n              const cleaned = {\n                ...values,\n                teamLeaderId:\n                  values.teamLeaderId && values.teamLeaderId !== 'undefined'\n                    ? values.teamLeaderId\n                    : undefined,\n                referencedModels: Array.from(new Set(values.referencedModels || [])),\n              };\n              onSubmit(cleaned);\n            })}\n            className=\"flex flex-col flex-1 min-h-0\"\n          >\n            <div className=\"flex-1 overflow-y-auto space-y-6 pr-2\">\n                <div className='space-y-4 p-1'>\n                    <h3 className=\"text-lg font-medium\">Model Details</h3>\n                    <div className='grid grid-cols-1 md:grid-cols-2 gap-4'>\n                        <FormField \n                            control={form.control} \n                            name=\"modelName\" \n                            render={({ field }) => (\n                                <FormItem>\n                                    <FormLabel>Model Name</FormLabel>\n                                    <FormControl>\n                                        <Input {...field} />\n                                    </FormControl>\n                                    <FormMessage />\n                                </FormItem>\n                            )}\n                        />\n                        <FormField \n                            control={form.control} \n                            name=\"clientAgencyName\" \n                            render={({ field }) => (\n                                <FormItem>\n                                    <FormLabel>Client's Agency Name</FormLabel>\n                                    <FormControl>\n                                        <Input {...field} />\n                                    </FormControl>\n                                    <FormMessage />\n                                </FormItem>\n                            )}\n                        />\n                        <FormField \n                            control={form.control} \n                            name=\"managerName\" \n                            render={({ field }) => (\n                                <FormItem>\n                                    <FormLabel>Manager Name</FormLabel>\n                                    {isReferenceModel && (\n                                        <FormDescription className=\"text-sm text-muted-foreground\">\n                                            Reference models inherit manager assignments from their child models\n                                        </FormDescription>\n                                    )}\n                                    <Select \n                                        disabled={isReferenceModel}\n                                        value={field.value ? (() => { \n                                            const m = uniqueManagersByName.find(mm => mm.name === field.value); \n                                            return m ? `${m.manager_id}::${m.name}` : undefined; \n                                        })() : undefined}\n                                        onValueChange={(val) => {\n                                            const parts = val.split('::');\n                                            let managerNameFromValue = parts.length > 1 ? parts[1] : val;\n                                            // Fallback resolution by name if value lacks id prefix\n                                            if (parts.length === 1) {\n                                                const m = uniqueManagersByName.find(mm => mm.name === managerNameFromValue);\n                                                managerNameFromValue = m?.name || managerNameFromValue;\n                                            }\n                                            field.onChange(managerNameFromValue);\n                                        }}\n                                    >\n                                        <FormControl>\n                                            <SelectTrigger>\n                                                <SelectValue placeholder={isReferenceModel ? \"Not applicable for reference models\" : \"Select a manager\"} />\n                                            </SelectTrigger>\n                                        </FormControl>\n                                        <SelectContent>\n                                            {uniqueManagersByName.map((m) => (\n                                                <SelectItem key={m.manager_id} value={`${m.manager_id}::${m.name}`}>\n                                                    {m.name}\n                                                </SelectItem>\n                                            ))}\n                                        </SelectContent>\n                                    </Select>\n                                    <FormMessage />\n                                </FormItem>\n                            )}\n                        />\n                        <FormField \n                            control={form.control} \n                            name=\"teamLeader\" \n                            render={({ field }) => (\n                                <FormItem>\n                                    <FormLabel>Team Leader</FormLabel>\n                                    {isReferenceModel && (\n                                        <FormDescription className=\"text-sm text-muted-foreground\">\n                                            Reference models inherit team leader assignments from their child models\n                                        </FormDescription>\n                                    )}\n                                    <Select \n                                        disabled={isReferenceModel}\n                                        value={field.value ? (() => { \n                                            const tl: any = uniqueTeamLeadersByName.find(t => t.name === field.value); \n                                            return tl ? `${tl.manager_id}::${tl.name}` : undefined; \n                                        })() : undefined}\n                                        onValueChange={(val) => {\n                                            const parts = val.split('::');\n                                            let selectedTlId = parts.length > 1 ? parts[0] : undefined;\n                                            let selectedName = parts.length > 1 ? parts[1] : val;\n                                            if (!selectedTlId) {\n                                                const tl = uniqueTeamLeadersByName.find(t => (t as any).name === selectedName);\n                                                selectedTlId = (tl as any)?.manager_id;\n                                            }\n                                            field.onChange(selectedName);\n                                            setSelectedTLId(selectedTlId);\n                                            form.setValue('teamLeaderId', selectedTlId ?? undefined, { shouldDirty: true, shouldTouch: true });\n                                        }}\n                                    >\n                                        <FormControl>\n                                            <SelectTrigger>\n                                                <SelectValue placeholder={isReferenceModel ? \"Not applicable for reference models\" : \"Select a team leader\"} />\n                                            </SelectTrigger>\n                                        </FormControl>\n                                        <SelectContent>\n                                            {uniqueTeamLeadersByName.map((tl: any) => (\n                                                <SelectItem key={tl.manager_id} value={`${tl.manager_id}::${tl.name}`}>\n                                                    {tl.name}\n                                                </SelectItem>\n                                            ))}\n                                        </SelectContent>\n                                    </Select>\n                                    <FormMessage />\n                                </FormItem>\n                            )}\n                        />\n                        <FormField \n                            control={form.control} \n                            name=\"status\" \n                            render={({ field }) => (\n                                <FormItem>\n                                    <FormLabel>Status</FormLabel>\n                                    <Select onValueChange={field.onChange} defaultValue={field.value}>\n                                        <FormControl>\n                                            <SelectTrigger>\n                                                <SelectValue />\n                                            </SelectTrigger>\n                                        </FormControl>\n                                        <SelectContent>\n                                            <SelectItem value=\"Active\">Active</SelectItem>\n                                            <SelectItem value=\"Inactive\">Inactive</SelectItem>\n                                        </SelectContent>\n                                    </Select>\n                                    <FormMessage />\n                                </FormItem>\n                            )}\n                        />\n                    </div>\n                    <FormField \n                        control={form.control} \n                        name=\"referencedModels\" \n                        render={({ field }) => (\n                            <FormItem>\n                                <FormLabel>Which model do you want to refer?</FormLabel>\n                                <Popover>\n                                    <PopoverTrigger asChild>\n                                        <FormControl>\n                                            <Button\n                                                variant=\"outline\"\n                                                role=\"combobox\"\n                                                className={cn(\n                                                    \"w-full justify-between\",\n                                                    !field.value?.length && \"text-muted-foreground\"\n                                                )}\n                                            >\n                                                {field.value?.length ? (\n                                                    <div className=\"flex gap-1 flex-wrap\">\n                                                        {field.value.slice(0, 2).map((model) => (\n                                                            <Badge\n                                                                key={model}\n                                                                variant=\"secondary\"\n                                                                className=\"mr-1\"\n                                                            >\n                                                                {model}\n                                                            </Badge>\n                                                        ))}\n                                                        {field.value.length > 2 && (\n                                                            <Badge variant=\"secondary\">\n                                                                +{field.value.length - 2} more\n                                                            </Badge>\n                                                        )}\n                                                    </div>\n                                                ) : (\n                                                    \"Select models to reference...\"\n                                                )}\n                                            </Button>\n                                        </FormControl>\n                                    </PopoverTrigger>\n                                    <PopoverContent className=\"w-full p-0\" align=\"start\">\n                                        <Command>\n                                            <CommandInput placeholder=\"Search models...\" />\n                                            <CommandEmpty>No model found.</CommandEmpty>\n                                            <CommandGroup>\n                                                {allModelNames.map((modelName) => (\n                                                    <CommandItem\n                                                        key={modelName}\n                                                        onSelect={() => {\n                                                            const currentValues = field.value || [];\n                                                            const isSelected = currentValues.includes(modelName);\n                                                            \n                                                            if (isSelected) {\n                                                                field.onChange(currentValues.filter(value => value !== modelName));\n                                                            } else {\n                                                                field.onChange([...currentValues, modelName]);\n                                                            }\n                                                        }}\n                                                    >\n                                                        <div\n                                                            className={cn(\n                                                                \"mr-2 flex h-4 w-4 items-center justify-center rounded-sm border border-primary\",\n                                                                field.value?.includes(modelName)\n                                                                    ? \"bg-primary text-primary-foreground\"\n                                                                    : \"opacity-50 [&_svg]:invisible\"\n                                                            )}\n                                                        >\n                                                            {field.value?.includes(modelName) && (\n                                                                <svg\n                                                                    className=\"h-3 w-3\"\n                                                                    fill=\"currentColor\"\n                                                                    viewBox=\"0 0 20 20\"\n                                                                >\n                                                                    <path\n                                                                        fillRule=\"evenodd\"\n                                                                        d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n                                                                        clipRule=\"evenodd\"\n                                                                    />\n                                                                </svg>\n                                                            )}\n                                                        </div>\n                                                        {modelName}\n                                                    </CommandItem>\n                                                ))}\n                                            </CommandGroup>\n                                        </Command>\n                                    </PopoverContent>\n                                </Popover>\n                                {field.value?.length > 0 && (\n                                    <div className=\"flex flex-wrap gap-1 mt-2\">\n                                        {field.value.map((model) => (\n                                            <Badge\n                                                key={model}\n                                                variant=\"secondary\"\n                                                className=\"flex items-center gap-1\"\n                                            >\n                                                {model}\n                                                <Button\n                                                    type=\"button\"\n                                                    variant=\"ghost\"\n                                                    size=\"sm\"\n                                                    className=\"h-auto p-0 text-muted-foreground hover:text-foreground\"\n                                                    onClick={() => {\n                                                        field.onChange(field.value?.filter(value => value !== model));\n                                                    }}\n                                                >\n                                                    <X className=\"h-3 w-3\" />\n                                                </Button>\n                                            </Badge>\n                                        ))}\n                                    </div>\n                                )}\n                                <FormMessage />\n                            </FormItem>\n                        )}\n                    />\n                </div>\n                <FormField \n                    control={form.control} \n                    name=\"notes\" \n                    render={({ field }) => (\n                        <FormItem>\n                            <FormLabel>Notes</FormLabel>\n                            <FormControl>\n                                <Textarea {...field} />\n                            </FormControl>\n                            <FormMessage />\n                        </FormItem>\n                    )}\n                />\n\n                <Separator />\n\n                <div className='space-y-4 p-1'>\n                    <h3 className=\"text-lg font-medium\">Payment</h3>\n                    <FormField \n                        control={form.control} \n                        name=\"paymentStatus\" \n                        render={({ field }) => (\n                            <FormItem className='max-w-xs'>\n                                <FormLabel>Payment Status (optional)</FormLabel>\n                                <Select onValueChange={field.onChange} defaultValue={field.value}>\n                                    <FormControl>\n                                        <SelectTrigger>\n                                            <SelectValue placeholder=\"Not set\" />\n                                        </SelectTrigger>\n                                    </FormControl>\n                                    <SelectContent>\n                                        <SelectItem value=\"Paid\">Paid</SelectItem>\n                                        <SelectItem value=\"Not Paid\">Not Paid</SelectItem>\n                                    </SelectContent>\n                                </Select>\n                                <FormMessage />\n                            </FormItem>\n                        )}\n                    />\n                </div>\n\n                <div className='space-y-4 p-1'>\n                    <h3 className=\"text-lg font-medium\">Agency Earnings Cut</h3>\n                    {isReferenceModel && (\n                        <div className=\"p-3 bg-muted/50 border rounded-md\">\n                            <p className=\"text-sm text-muted-foreground\">\n                                Agency cut and commission rules are disabled for reference models. \n                                These will be calculated using the individual referenced model's rules.\n                            </p>\n                        </div>\n                    )}\n                    <FormField\n                        control={form.control}\n                        name=\"earningsType\"\n                        render={({ field }) => (\n                            <FormItem className=\"space-y-3\">\n                                <FormLabel>Earnings Type</FormLabel>\n                                <FormControl>\n                                    <RadioGroup\n                                        onValueChange={field.onChange}\n                                        defaultValue={field.value}\n                                        className=\"flex flex-col space-y-1\"\n                                        disabled={isReferenceModel}\n                                    >\n                                        <FormItem className=\"flex items-center space-x-3 space-y-0\">\n                                            <FormControl>\n                                                <RadioGroupItem value=\"Type 1\" disabled={isReferenceModel} />\n                                            </FormControl>\n                                            <FormLabel className=\"font-normal\">\n                                                Type 1: Percentage above threshold, fixed amount below\n                                            </FormLabel>\n                                        </FormItem>\n                                        <FormItem className=\"flex items-center space-x-3 space-y-0\">\n                                            <FormControl>\n                                                <RadioGroupItem value=\"Type 2\" disabled={isReferenceModel} />\n                                            </FormControl>\n                                            <FormLabel className=\"font-normal\">\n                                                Type 2: Flat percentage of total earnings\n                                            </FormLabel>\n                                        </FormItem>\n                                    </RadioGroup>\n                                </FormControl>\n                                <FormMessage />\n                            </FormItem>\n                        )}\n                    />\n                    {earningsType === 'Type 1' && !isReferenceModel && (\n                        <div className='p-4 border rounded-md bg-muted/50 space-y-4'>\n                            <p className='text-sm text-muted-foreground'>Agency takes a percentage if weekly earnings are above a threshold, otherwise a fixed amount.</p>\n                            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 items-end\">\n                                <FormField \n                                    control={form.control} \n                                    name=\"cutLogic.percentage1\" \n                                    render={({ field }) => (\n                                        <FormItem>\n                                            <FormLabel>Percentage</FormLabel>\n                                            <FormControl>\n                                                <div className='flex items-center gap-2'>\n                                                    <Input type=\"number\" {...field} disabled={isReferenceModel} />\n                                                    <span className='text-muted-foreground'>%</span>\n                                                </div>\n                                            </FormControl>\n                                            <FormMessage />\n                                        </FormItem>\n                                    )}\n                                />\n                                <FormField \n                                    control={form.control} \n                                    name=\"cutLogic.threshold\" \n                                    render={({ field }) => (\n                                        <FormItem>\n                                            <FormLabel>IF earnings ≥</FormLabel>\n                                            <FormControl>\n                                                <div className='flex items-center gap-2'>\n                                                    <span className='text-muted-foreground'>$</span>\n                                                    <Input type=\"number\" {...field} disabled={isReferenceModel} />\n                                                </div>\n                                            </FormControl>\n                                            <FormMessage />\n                                        </FormItem>\n                                    )}\n                                />\n                                <FormField \n                                    control={form.control} \n                                    name=\"cutLogic.fixedAmount\" \n                                    render={({ field }) => (\n                                        <FormItem>\n                                            <FormLabel>ELSE fixed amount</FormLabel>\n                                            <FormControl>\n                                                <div className='flex items-center gap-2'>\n                                                    <span className='text-muted-foreground'>$</span>\n                                                    <Input type=\"number\" {...field} disabled={isReferenceModel} />\n                                                </div>\n                                            </FormControl>\n                                            <FormMessage />\n                                        </FormItem>\n                                    )}\n                                />\n                            </div>\n                        </div>\n                    )}\n                    {earningsType === 'Type 2' && !isReferenceModel && (\n                        <div className='p-4 border rounded-md bg-muted/50 space-y-4'>\n                            <p className='text-sm text-muted-foreground'>Agency takes a flat percentage of total weekly earnings.</p>\n                            <FormField \n                                control={form.control} \n                                name=\"cutLogic.percentage2\" \n                                render={({ field }) => (\n                                    <FormItem>\n                                        <FormLabel>Percentage</FormLabel>\n                                        <FormControl>\n                                            <div className='flex items-center gap-2 w-1/2'>\n                                                <Input type=\"number\" {...field} disabled={isReferenceModel} />\n                                                <span className='text-muted-foreground'>%</span>\n                                            </div>\n                                        </FormControl>\n                                        <FormMessage />\n                                    </FormItem>\n                                )}\n                            />\n                        </div>\n                    )}\n                </div>\n\n                <Separator />\n\n                <div className='space-y-4 p-1'>\n                    <h3 className=\"text-lg font-medium\">Chatter Commission Rules</h3>\n                    {!isReferenceModel ? (\n                        <div className='p-4 border rounded-md bg-muted/50 space-y-4'>\n                            <FormField \n                                control={form.control} \n                                name=\"commissionRules.baseCommission\" \n                                render={({ field }) => (\n                                    <FormItem className='max-w-xs'>\n                                        <FormLabel>Base Commission</FormLabel>\n                                        <FormControl>\n                                            <div className='flex items-center gap-2'>\n                                                <Input type=\"number\" {...field} disabled={isReferenceModel} />\n                                                <span className='text-muted-foreground'>%</span>\n                                            </div>\n                                        </FormControl>\n                                        <FormDescription>Default commission chatter receives for this model.</FormDescription>\n                                        <FormMessage />\n                                    </FormItem>\n                                )}\n                            />\n                            <FormField\n                                control={form.control}\n                                name=\"commissionRules.bonusEnabled\"\n                                render={({ field }) => (\n                                    <FormItem className=\"flex flex-row items-center justify-between rounded-lg border p-4\">\n                                        <div className=\"space-y-0.5\">\n                                            <FormLabel className=\"text-base\">\n                                                Enable Bonus Commission\n                                            </FormLabel>\n                                            <FormDescription>\n                                                Apply a bonus commission rate if a chatter's shift earnings exceed a certain amount.\n                                            </FormDescription>\n                                        </div>\n                                        <FormControl>\n                                            <Switch\n                                                checked={!!field.value}\n                                                onCheckedChange={field.onChange}\n                                                disabled={isReferenceModel}\n                                            />\n                                        </FormControl>\n                                    </FormItem>\n                                )}\n                            />\n                            <div className={cn(\"grid grid-cols-1 md:grid-cols-2 gap-4 items-end transition-opacity\", bonusEnabled ? 'opacity-100' : 'opacity-50 pointer-events-none')}>\n                                <FormField \n                                    control={form.control} \n                                    name=\"commissionRules.bonusThreshold\" \n                                    render={({ field }) => (\n                                        <FormItem>\n                                            <FormLabel>If shift earns {'>'}</FormLabel>\n                                            <FormControl>\n                                                <div className='flex items-center gap-2'>\n                                                    <span className='text-muted-foreground'>$</span>\n                                                    <Input\n                                                        type=\"number\"\n                                                        value={field.value ?? ''}\n                                                        onChange={field.onChange}\n                                                        disabled={!bonusEnabled || isReferenceModel}\n                                                    />\n                                                </div>\n                                            </FormControl>\n                                            <FormMessage />\n                                        </FormItem>\n                                    )}\n                                />\n                                <FormField \n                                    control={form.control} \n                                    name=\"commissionRules.bonusCommission\" \n                                    render={({ field }) => (\n                                        <FormItem>\n                                            <FormLabel>Bonus Commission</FormLabel>\n                                            <FormControl>\n                                                <div className='flex items-center gap-2'>\n                                                    <Input\n                                                        type=\"number\"\n                                                        value={field.value ?? ''}\n                                                        onChange={field.onChange}\n                                                        disabled={!bonusEnabled || isReferenceModel}\n                                                    />\n                                                    <span className='text-muted-foreground'>%</span>\n                                                </div>\n                                            </FormControl>\n                                            <FormMessage />\n                                        </FormItem>\n                                    )}\n                                />\n                            </div>\n                        </div>\n                    ) : (\n                        <div className=\"p-3 bg-muted/50 border rounded-md\">\n                            <p className=\"text-sm text-muted-foreground\">\n                                Commission rules are disabled for reference models. \n                                Commission will be calculated using each referenced model's individual rules.\n                            </p>\n                        </div>\n                    )}\n                </div>\n            </div>\n\n            <SheetFooter className=\"flex-shrink-0 pt-6\">\n                <SheetClose asChild>\n                    <Button type=\"button\" variant=\"outline\">\n                        Cancel\n                    </Button>\n                </SheetClose>\n              <Button type=\"submit\">Save Changes</Button>\n            </SheetFooter>\n          </form>\n        </Form>\n      </SheetContent>\n    </Sheet>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3166, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { buttonVariants } from \"@/components/ui/button\"\r\n\r\nconst AlertDialog = AlertDialogPrimitive.Root\r\n\r\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\r\n\r\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\r\n\r\nconst AlertDialogOverlay = React.forwardRef<\r\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\r\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\r\n>(({ className, ...props }, ref) => (\r\n  <AlertDialogPrimitive.Overlay\r\n    className={cn(\r\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n    ref={ref}\r\n  />\r\n))\r\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\r\n\r\nconst AlertDialogContent = React.forwardRef<\r\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\r\n>(({ className, ...props }, ref) => (\r\n  <AlertDialogPortal>\r\n    <AlertDialogOverlay />\r\n    <AlertDialogPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  </AlertDialogPortal>\r\n))\r\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\r\n\r\nconst AlertDialogHeader = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col space-y-2 text-center sm:text-left\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\r\n\r\nconst AlertDialogFooter = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\r\n\r\nconst AlertDialogTitle = React.forwardRef<\r\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\r\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <AlertDialogPrimitive.Title\r\n    ref={ref}\r\n    className={cn(\"text-lg font-semibold\", className)}\r\n    {...props}\r\n  />\r\n))\r\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\r\n\r\nconst AlertDialogDescription = React.forwardRef<\r\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\r\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <AlertDialogPrimitive.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nAlertDialogDescription.displayName =\r\n  AlertDialogPrimitive.Description.displayName\r\n\r\nconst AlertDialogAction = React.forwardRef<\r\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\r\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\r\n>(({ className, ...props }, ref) => (\r\n  <AlertDialogPrimitive.Action\r\n    ref={ref}\r\n    className={cn(buttonVariants(), className)}\r\n    {...props}\r\n  />\r\n))\r\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\r\n\r\nconst AlertDialogCancel = React.forwardRef<\r\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\r\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\r\n>(({ className, ...props }, ref) => (\r\n  <AlertDialogPrimitive.Cancel\r\n    ref={ref}\r\n    className={cn(\r\n      buttonVariants({ variant: \"outline\" }),\r\n      \"mt-2 sm:mt-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\r\n\r\nexport {\r\n  AlertDialog,\r\n  AlertDialogPortal,\r\n  AlertDialogOverlay,\r\n  AlertDialogTrigger,\r\n  AlertDialogContent,\r\n  AlertDialogHeader,\r\n  AlertDialogFooter,\r\n  AlertDialogTitle,\r\n  AlertDialogDescription,\r\n  AlertDialogAction,\r\n  AlertDialogCancel,\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3318, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/components/dashboard/models/delete-model-dialog.tsx"],"sourcesContent":["\r\n'use client';\r\nimport React from 'react';\r\n\r\nimport {\r\n  AlertDialog,\r\n  AlertDialogAction,\r\n  AlertDialogCancel,\r\n  AlertDialogContent,\r\n  AlertDialogDescription,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogTitle,\r\n} from '@/components/ui/alert-dialog';\r\n\r\ninterface DeleteModelDialogProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onConfirm: () => void;\r\n  modelName?: string;\r\n}\r\n\r\nexport function DeleteModelDialog({\r\n  isOpen,\r\n  onClose,\r\n  onConfirm,\r\n  modelName,\r\n}: DeleteModelDialogProps) {\r\n  return (\r\n    <AlertDialog open={isOpen} onOpenChange={onClose}>\r\n      <AlertDialogContent>\r\n        <AlertDialogHeader>\r\n          <AlertDialogTitle>Are you sure?</AlertDialogTitle>\r\n          <AlertDialogDescription>\r\n            This action cannot be undone. This will permanently delete the model{' '}\r\n            <strong>{modelName}</strong> and all associated data.\r\n          </AlertDialogDescription>\r\n        </AlertDialogHeader>\r\n        <AlertDialogFooter>\r\n          <AlertDialogCancel>Cancel</AlertDialogCancel>\r\n          <AlertDialogAction onClick={onConfirm}>Delete</AlertDialogAction>\r\n        </AlertDialogFooter>\r\n      </AlertDialogContent>\r\n    </AlertDialog>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAIA;AAHA;;;AAqBO,SAAS,kBAAkB,EAChC,MAAM,EACN,OAAO,EACP,SAAS,EACT,SAAS,EACc;IACvB,qBACE,6LAAC,8IAAA,CAAA,cAAW;QAAC,MAAM;QAAQ,cAAc;kBACvC,cAAA,6LAAC,8IAAA,CAAA,qBAAkB;;8BACjB,6LAAC,8IAAA,CAAA,oBAAiB;;sCAChB,6LAAC,8IAAA,CAAA,mBAAgB;sCAAC;;;;;;sCAClB,6LAAC,8IAAA,CAAA,yBAAsB;;gCAAC;gCAC+C;8CACrE,6LAAC;8CAAQ;;;;;;gCAAmB;;;;;;;;;;;;;8BAGhC,6LAAC,8IAAA,CAAA,oBAAiB;;sCAChB,6LAAC,8IAAA,CAAA,oBAAiB;sCAAC;;;;;;sCACnB,6LAAC,8IAAA,CAAA,oBAAiB;4BAAC,SAAS;sCAAW;;;;;;;;;;;;;;;;;;;;;;;AAKjD;KAvBgB","debugId":null}},
    {"offset": {"line": 3412, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/app/dashboard/models/page.tsx"],"sourcesContent":["\n'use client';\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Pencil, Trash2 } from 'lucide-react';\nimport React from 'react';\nimport { ModelFormSheet } from '@/components/dashboard/models/model-form-sheet';\nimport { DeleteModelDialog } from '@/components/dashboard/models/delete-model-dialog';\nimport { Input } from '@/components/ui/input';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { apiService, type ModelRecord } from '@/lib/api';\n\nexport type Model = ModelRecord;\n\nconst formatCutLogic = (model: Model) => {\n  if (model.earningsType === 'Type 1' && model.cutLogic) {\n    const { percentage1, threshold, fixedAmount } = model.cutLogic;\n    return `${percentage1}% if > $${threshold}/wk; else $${fixedAmount}`;\n  }\n  if (model.earningsType === 'Type 2' && model.cutLogic) {\n    return `${model.cutLogic.percentage2}% of total earnings`;\n  }\n  return 'N/A';\n};\n\n\nexport default function ModelsPage() {\n  const [models, setModels] = React.useState<Model[]>([]);\n  const [isSheetOpen, setIsSheetOpen] = React.useState(false);\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = React.useState(false);\n  const [selectedModel, setSelectedModel] = React.useState<Model | undefined>(undefined);\n  \n  const [searchTerm, setSearchTerm] = React.useState('');\n  const [statusFilter, setStatusFilter] = React.useState('All');\n  const [clientFilter, setClientFilter] = React.useState('All');\n  const [managerFilter, setManagerFilter] = React.useState('All');\n\n  const loadModels = React.useCallback(async () => {\n    try {\n      const res = await apiService.getAllModels({});\n      setModels(res.data || []);\n    } catch (e) {\n      console.error('Failed to load models', e);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    loadModels();\n  }, [loadModels]);\n\n\n  const handleAddModel = () => {\n    setSelectedModel(undefined);\n    setIsSheetOpen(true);\n  };\n\n  const handleEditModel = (model: Model) => {\n    setSelectedModel(model);\n    setIsSheetOpen(true);\n  };\n\n  const handleSheetClose = () => {\n    setIsSheetOpen(false);\n    setSelectedModel(undefined);\n  };\n\n  const handleFormSubmit = async (values: any) => {\n    try {\n      if (selectedModel) {\n        await apiService.updateModel(selectedModel.model_id, values);\n      } else {\n        await apiService.createModel(values);\n      }\n      await loadModels();\n    } catch (e) {\n      console.error('Failed to save model', e);\n    } finally {\n      handleSheetClose();\n    }\n  };\n  \n  const handleOpenDeleteDialog = (model: Model) => {\n    setSelectedModel(model);\n    setIsDeleteDialogOpen(true);\n  };\n\n  const handleDeleteConfirm = async () => {\n    try {\n      if (selectedModel) {\n        await apiService.deleteModel(selectedModel.model_id);\n        await loadModels();\n      }\n    } catch (e) {\n      console.error('Failed to delete model', e);\n    } finally {\n      setIsDeleteDialogOpen(false);\n      setSelectedModel(undefined);\n    }\n  };\n    \n  const filteredModels = React.useMemo(() => {\n    return models\n      .filter(model => {\n        const searchLower = searchTerm.toLowerCase();\n        return (\n          model.modelName.toLowerCase().includes(searchLower) ||\n          model.clientAgencyName.toLowerCase().includes(searchLower) ||\n          model.managerName.toLowerCase().includes(searchLower) ||\n          model.teamLeader.toLowerCase().includes(searchLower) ||\n          model.earningsType.toLowerCase().includes(searchLower) ||\n          formatCutLogic(model).toLowerCase().includes(searchLower)\n        );\n      })\n      .filter(model => {\n        if (statusFilter === 'All') return true;\n        return model.status === statusFilter;\n      })\n      .filter(model => {\n        if (clientFilter === 'All') return true;\n        return model.clientAgencyName === clientFilter;\n      })\n      .filter(model => {\n        if (managerFilter === 'All') return true;\n        return model.managerName === managerFilter;\n      })\n      .sort((a, b) => a.clientAgencyName.localeCompare(b.clientAgencyName));\n  }, [models, searchTerm, statusFilter, clientFilter, managerFilter]);\n\n  return (\n    <>\n      <div className=\"flex flex-col gap-6\">\n        <header className=\"flex flex-col md:flex-row md:items-center md:justify-between\">\n          <div>\n            <h1 className=\"text-3xl font-bold font-headline\">Models</h1>\n            <p className=\"text-muted-foreground\">\n              Manage model profiles, commissions, and client links.\n            </p>\n          </div>\n          <Button onClick={handleAddModel} className=\"mt-4 md:mt-0\">Add New Model</Button>\n        </header>\n\n         <div className=\"flex items-center gap-4 flex-wrap\">\n          <Input\n            placeholder=\"Filter by name, agency, manager...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"max-w-sm\"\n          />\n          <Select value={statusFilter} onValueChange={setStatusFilter}>\n            <SelectTrigger className=\"w-[180px]\">\n              <SelectValue placeholder=\"Filter by status\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"All\">All Statuses</SelectItem>\n              <SelectItem value=\"Active\">Active</SelectItem>\n              <SelectItem value=\"Inactive\">Inactive</SelectItem>\n            </SelectContent>\n          </Select>\n          <Select value={clientFilter} onValueChange={setClientFilter}>\n            <SelectTrigger className=\"w-[200px]\">\n              <SelectValue placeholder=\"Filter by client\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"All\">All Clients</SelectItem>\n              {Array.from(new Set(models.map(m => m.clientAgencyName))).map(client => (\n                <SelectItem key={client} value={client}>{client}</SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n          <Select value={managerFilter} onValueChange={setManagerFilter}>\n            <SelectTrigger className=\"w-[180px]\">\n              <SelectValue placeholder=\"Filter by manager\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"All\">All Managers</SelectItem>\n              {Array.from(new Set(models.map(m => m.managerName))).map(manager => (\n                <SelectItem key={manager} value={manager}>{manager}</SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n        </div>\n\n        <div className=\"rounded-lg border\">\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHead>Model Name</TableHead>\n                <TableHead>Client's Agency Name</TableHead>\n                <TableHead>Manager Name</TableHead>\n                <TableHead>Earnings Type</TableHead>\n                <TableHead>Cut Logic</TableHead>\n                <TableHead>TL</TableHead>\n                <TableHead>Payment</TableHead>\n                <TableHead>Status</TableHead>\n                <TableHead className=\"text-right\">Actions</TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {filteredModels.length === 0 ? (\n                <TableRow>\n                  <TableCell colSpan={9} className=\"text-center text-muted-foreground\">\n                    No records found\n                  </TableCell>\n                </TableRow>\n              ) : filteredModels.map((model) => (\n                <TableRow key={model.model_id}>\n                  <TableCell className=\"font-medium\">{model.modelName}</TableCell>\n                  <TableCell>{model.clientAgencyName}</TableCell>\n                  <TableCell>{model.managerName}</TableCell>\n                  <TableCell>\n                     <Badge variant=\"outline\">{model.earningsType}</Badge>\n                  </TableCell>\n                   <TableCell>\n                    <div className=\"flex items-center gap-2\">\n                      <span className=\"text-sm font-medium\">\n                        {formatCutLogic(model)}\n                      </span>\n                    </div>\n                  </TableCell>\n                  <TableCell>{model.teamLeader}</TableCell>\n                  <TableCell>\n                    <Badge variant={ model.paymentStatus === 'Paid' ? 'default' : 'secondary' }>\n                      {model.paymentStatus || 'Not Set'}\n                    </Badge>\n                  </TableCell>\n                  <TableCell>\n                    <Badge\n                      variant={\n                        model.status === 'Active' ? 'default' : 'secondary'\n                      }\n                    >\n                      {model.status}\n                    </Badge>\n                  </TableCell>\n                  <TableCell className=\"text-right\">\n                    <div className=\"flex items-center gap-2\">\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        onClick={() => handleEditModel(model)}\n                        title=\"Edit\"\n                      >\n                        <Pencil className=\"h-4 w-4\" />\n                      </Button>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        onClick={() => handleOpenDeleteDialog(model)}\n                        title=\"Delete\"\n                      >\n                        <Trash2 className=\"h-4 w-4\" />\n                      </Button>\n                    </div>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </div>\n      <ModelFormSheet\n        isOpen={isSheetOpen}\n        onClose={handleSheetClose}\n        onSubmit={handleFormSubmit}\n        model={selectedModel}\n      />\n      <DeleteModelDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={() => setIsDeleteDialogOpen(false)}\n        onConfirm={handleDeleteConfirm}\n        modelName={selectedModel?.modelName}\n      />\n    </>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}