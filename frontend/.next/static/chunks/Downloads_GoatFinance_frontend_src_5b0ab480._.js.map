{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/skysha/Downloads/GoatFinance/frontend/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,mNAAgB,MAG3B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,qOAAC;QACC,KAAK;QACL,WAAW,IAAA,oKAAE,EACX,4DACA;QAED,GAAG,KAAK;;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,mNAAgB,OAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,qOAAC;QACC,KAAK;QACL,WAAW,IAAA,oKAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,mNAAgB,OAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,qOAAC;QACC,KAAK;QACL,WAAW,IAAA,oKAAE,EACX,sDACA;QAED,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,mNAAgB,OAGtC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,qOAAC;QACC,KAAK;QACL,WAAW,IAAA,oKAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,mNAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,qOAAC;QAAI,KAAK;QAAK,WAAW,IAAA,oKAAE,EAAC,YAAY;QAAa,GAAG,KAAK;;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,mNAAgB,QAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,qOAAC;QACC,KAAK;QACL,WAAW,IAAA,oKAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file:///Users/skysha/Downloads/GoatFinance/frontend/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,mNAAgB,MAC5B,QAAgC;QAA/B,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO;IAC5B,qBACE,qOAAC;QACC,MAAM;QACN,WAAW,IAAA,oKAAE,EACX,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":["file:///Users/skysha/Downloads/GoatFinance/frontend/src/components/ui/number-input.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Input } from \"./input\"\nimport { cn } from \"@/lib/utils\"\n\nexport interface NumberInputProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'type' | 'onChange'> {\n  value?: number | string\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void\n  allowEmpty?: boolean\n}\n\nconst NumberInput = React.forwardRef<HTMLInputElement, NumberInputProps>(\n  ({ className, value, onChange, allowEmpty = true, ...props }, ref) => {\n    const [displayValue, setDisplayValue] = React.useState<string>(() => {\n      if (value === undefined || value === null) return ''\n      return String(value)\n    })\n\n    // Update display value when prop value changes\n    React.useEffect(() => {\n      if (value === undefined || value === null) {\n        setDisplayValue('')\n      } else {\n        setDisplayValue(String(value))\n      }\n    }, [value])\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const inputValue = e.target.value\n      setDisplayValue(inputValue)\n\n      // Always call the original onChange with the event\n      // This maintains compatibility with both React Hook Form and regular onChange handlers\n      onChange?.(e)\n    }\n\n    const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n      // Allow backspace to clear the field completely\n      if (e.key === 'Backspace' && displayValue === '0') {\n        e.preventDefault()\n        setDisplayValue('')\n        // Create a synthetic event for the onChange handler\n        const syntheticEvent = {\n          ...e,\n          target: {\n            ...e.target,\n            value: ''\n          }\n        } as React.ChangeEvent<HTMLInputElement>\n        onChange?.(syntheticEvent)\n      }\n    }\n\n    return (\n      <Input\n        type=\"text\"\n        inputMode=\"decimal\"\n        pattern=\"[0-9]*\\.?[0-9]*\"\n        className={cn(className)}\n        ref={ref}\n        value={displayValue}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n        {...props}\n      />\n    )\n  }\n)\nNumberInput.displayName = \"NumberInput\"\n\nexport { NumberInput }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;;;AASA,MAAM,4BAAc,GAAA,mNAAgB,SAClC,QAA8D;QAA7D,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO;;IAC1D,MAAM,CAAC,cAAc,gBAAgB,GAAG,iNAAc;gCAAS;YAC7D,IAAI,UAAU,aAAa,UAAU,MAAM,OAAO;YAClD,OAAO,OAAO;QAChB;;IAEA,+CAA+C;IAC/C,kNAAe;iCAAC;YACd,IAAI,UAAU,aAAa,UAAU,MAAM;gBACzC,gBAAgB;YAClB,OAAO;gBACL,gBAAgB,OAAO;YACzB;QACF;gCAAG;QAAC;KAAM;IAEV,MAAM,eAAe,CAAC;QACpB,MAAM,aAAa,EAAE,MAAM,CAAC,KAAK;QACjC,gBAAgB;QAEhB,mDAAmD;QACnD,uFAAuF;QACvF,qBAAA,+BAAA,SAAW;IACb;IAEA,MAAM,gBAAgB,CAAC;QACrB,gDAAgD;QAChD,IAAI,EAAE,GAAG,KAAK,eAAe,iBAAiB,KAAK;YACjD,EAAE,cAAc;YAChB,gBAAgB;YAChB,oDAAoD;YACpD,MAAM,iBAAiB;gBACrB,GAAG,CAAC;gBACJ,QAAQ;oBACN,GAAG,EAAE,MAAM;oBACX,OAAO;gBACT;YACF;YACA,qBAAA,+BAAA,SAAW;QACb;IACF;IAEA,qBACE,qOAAC,qLAAK;QACJ,MAAK;QACL,WAAU;QACV,SAAQ;QACR,WAAW,IAAA,oKAAE,EAAC;QACd,KAAK;QACL,OAAO;QACP,UAAU;QACV,WAAW;QACV,GAAG,KAAK;;;;;;AAGf;;AAEF,YAAY,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":["file:///Users/skysha/Downloads/GoatFinance/frontend/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\r\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Select = SelectPrimitive.Root\r\n\r\nconst SelectGroup = SelectPrimitive.Group\r\n\r\nconst SelectValue = SelectPrimitive.Value\r\n\r\nconst SelectTrigger = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <SelectPrimitive.Icon asChild>\r\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\r\n    </SelectPrimitive.Icon>\r\n  </SelectPrimitive.Trigger>\r\n))\r\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\r\n\r\nconst SelectScrollUpButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollUpButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronUp className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollUpButton>\r\n))\r\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\r\n\r\nconst SelectScrollDownButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollDownButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronDown className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollDownButton>\r\n))\r\nSelectScrollDownButton.displayName =\r\n  SelectPrimitive.ScrollDownButton.displayName\r\n\r\nconst SelectContent = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\r\n>(({ className, children, position = \"popper\", ...props }, ref) => (\r\n  <SelectPrimitive.Portal>\r\n    <SelectPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        position === \"popper\" &&\r\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\r\n        className\r\n      )}\r\n      position={position}\r\n      {...props}\r\n    >\r\n      <SelectScrollUpButton />\r\n      <SelectPrimitive.Viewport\r\n        className={cn(\r\n          \"p-1\",\r\n          position === \"popper\" &&\r\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\r\n        )}\r\n      >\r\n        {children}\r\n      </SelectPrimitive.Viewport>\r\n      <SelectScrollDownButton />\r\n    </SelectPrimitive.Content>\r\n  </SelectPrimitive.Portal>\r\n))\r\nSelectContent.displayName = SelectPrimitive.Content.displayName\r\n\r\nconst SelectLabel = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectLabel.displayName = SelectPrimitive.Label.displayName\r\n\r\nconst SelectItem = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <SelectPrimitive.ItemIndicator>\r\n        <Check className=\"h-4 w-4\" />\r\n      </SelectPrimitive.ItemIndicator>\r\n    </span>\r\n\r\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n  </SelectPrimitive.Item>\r\n))\r\nSelectItem.displayName = SelectPrimitive.Item.displayName\r\n\r\nconst SelectSeparator = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\r\n\r\nexport {\r\n  Select,\r\n  SelectGroup,\r\n  SelectValue,\r\n  SelectTrigger,\r\n  SelectContent,\r\n  SelectLabel,\r\n  SelectItem,\r\n  SelectSeparator,\r\n  SelectScrollUpButton,\r\n  SelectScrollDownButton,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,qNAAoB;AAEnC,MAAM,cAAc,sNAAqB;AAEzC,MAAM,cAAc,sNAAqB;AAEzC,MAAM,8BAAgB,mNAAgB,MAGpC,QAAoC;QAAnC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO;yBAClC,qOAAC,wNAAuB;QACtB,KAAK;QACL,WAAW,IAAA,oKAAE,EACX,mTACA;QAED,GAAG,KAAK;;YAER;0BACD,qOAAC,qNAAoB;gBAAC,OAAO;0BAC3B,cAAA,qOAAC,8QAAW;oBAAC,WAAU;;;;;;;;;;;;;;;;;;;AAI7B,cAAc,WAAW,GAAG,wNAAuB,CAAC,WAAW;AAE/D,MAAM,qCAAuB,mNAAgB,CAG3C,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,qOAAC,+NAA8B;QAC7B,KAAK;QACL,WAAW,IAAA,oKAAE,EACX,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,qOAAC,wQAAS;YAAC,WAAU;;;;;;;;;;;;MAZnB;AAeN,qBAAqB,WAAW,GAAG,+NAA8B,CAAC,WAAW;AAE7E,MAAM,uCAAyB,mNAAgB,CAG7C,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,qOAAC,iOAAgC;QAC/B,KAAK;QACL,WAAW,IAAA,oKAAE,EACX,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,qOAAC,8QAAW;YAAC,WAAU;;;;;;;;;;;;MAZrB;AAeN,uBAAuB,WAAW,GAChC,iOAAgC,CAAC,WAAW;AAE9C,MAAM,8BAAgB,mNAAgB,OAGpC,QAAyD;QAAxD,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,QAAQ,EAAE,GAAG,OAAO;yBACvD,qOAAC,uNAAsB;kBACrB,cAAA,qOAAC,wNAAuB;YACtB,KAAK;YACL,WAAW,IAAA,oKAAE,EACX,ucACA,aAAa,YACX,mIACF;YAEF,UAAU;YACT,GAAG,KAAK;;8BAET,qOAAC;;;;;8BACD,qOAAC,yNAAwB;oBACvB,WAAW,IAAA,oKAAE,EACX,OACA,aAAa,YACX;8BAGH;;;;;;8BAEH,qOAAC;;;;;;;;;;;;;;;;;;AAIP,cAAc,WAAW,GAAG,wNAAuB,CAAC,WAAW;AAE/D,MAAM,4BAAc,mNAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,qOAAC,sNAAqB;QACpB,KAAK;QACL,WAAW,IAAA,oKAAE,EAAC,0CAA0C;QACvD,GAAG,KAAK;;;;;;;;AAGb,YAAY,WAAW,GAAG,sNAAqB,CAAC,WAAW;AAE3D,MAAM,2BAAa,mNAAgB,OAGjC,QAAoC;QAAnC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO;yBAClC,qOAAC,qNAAoB;QACnB,KAAK;QACL,WAAW,IAAA,oKAAE,EACX,6NACA;QAED,GAAG,KAAK;;0BAET,qOAAC;gBAAK,WAAU;0BACd,cAAA,qOAAC,8NAA6B;8BAC5B,cAAA,qOAAC,wPAAK;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAIrB,qOAAC,yNAAwB;0BAAE;;;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,qNAAoB,CAAC,WAAW;AAEzD,MAAM,gCAAkB,mNAAgB,QAGtC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,qOAAC,0NAAyB;QACxB,KAAK;QACL,WAAW,IAAA,oKAAE,EAAC,4BAA4B;QACzC,GAAG,KAAK;;;;;;;;AAGb,gBAAgB,WAAW,GAAG,0NAAyB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 495, "column": 0}, "map": {"version":3,"sources":["file:///Users/skysha/Downloads/GoatFinance/frontend/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Table = React.forwardRef<\r\n  HTMLTableElement,\r\n  React.HTMLAttributes<HTMLTableElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div className=\"relative w-full overflow-auto\">\r\n    <table\r\n      ref={ref}\r\n      className={cn(\"w-full caption-bottom text-sm\", className)}\r\n      {...props}\r\n    />\r\n  </div>\r\n))\r\nTable.displayName = \"Table\"\r\n\r\nconst TableHeader = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\r\n))\r\nTableHeader.displayName = \"TableHeader\"\r\n\r\nconst TableBody = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tbody\r\n    ref={ref}\r\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableBody.displayName = \"TableBody\"\r\n\r\nconst TableFooter = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tfoot\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableFooter.displayName = \"TableFooter\"\r\n\r\nconst TableRow = React.forwardRef<\r\n  HTMLTableRowElement,\r\n  React.HTMLAttributes<HTMLTableRowElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tr\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableRow.displayName = \"TableRow\"\r\n\r\nconst TableHead = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.ThHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <th\r\n    ref={ref}\r\n    className={cn(\r\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableHead.displayName = \"TableHead\"\r\n\r\nconst TableCell = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.TdHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <td\r\n    ref={ref}\r\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCell.displayName = \"TableCell\"\r\n\r\nconst TableCaption = React.forwardRef<\r\n  HTMLTableCaptionElement,\r\n  React.HTMLAttributes<HTMLTableCaptionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <caption\r\n    ref={ref}\r\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCaption.displayName = \"TableCaption\"\r\n\r\nexport {\r\n  Table,\r\n  TableHeader,\r\n  TableBody,\r\n  TableFooter,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableCaption,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,mNAAgB,MAG5B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,qOAAC;QAAI,WAAU;kBACb,cAAA,qOAAC;YACC,KAAK;YACL,WAAW,IAAA,oKAAE,EAAC,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,mNAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,qOAAC;QAAM,KAAK;QAAK,WAAW,IAAA,oKAAE,EAAC,mBAAmB;QAAa,GAAG,KAAK;;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,mNAAgB,OAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,qOAAC;QACC,KAAK;QACL,WAAW,IAAA,oKAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,mNAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,qOAAC;QACC,KAAK;QACL,WAAW,IAAA,oKAAE,EACX,2DACA;QAED,GAAG,KAAK;;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,mNAAgB,OAG/B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,qOAAC;QACC,KAAK;QACL,WAAW,IAAA,oKAAE,EACX,+EACA;QAED,GAAG,KAAK;;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,mNAAgB,QAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,qOAAC;QACC,KAAK;QACL,WAAW,IAAA,oKAAE,EACX,oGACA;QAED,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,mNAAgB,QAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,qOAAC;QACC,KAAK;QACL,WAAW,IAAA,oKAAE,EAAC,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,mNAAgB,QAGnC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,qOAAC;QACC,KAAK;QACL,WAAW,IAAA,oKAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 663, "column": 0}, "map": {"version":3,"sources":["file:///Users/skysha/Downloads/GoatFinance/frontend/src/lib/shared-data.ts"],"sourcesContent":["export interface TeamLeader {\n  id: string;\n  name: string;\n  email: string;\n  phone: string;\n  salaryType: 'Commission-based' | 'Fixed';\n  commissionRate?: number;\n  fixedSalary?: number;\n  week1Salary: number;\n  week2Salary: number;\n  totalSalary: number;\n  paymentStatus: 'Paid' | 'Not Paid';\n  assignedModels: string[];\n  status: 'Active' | 'Inactive';\n}\n\nexport interface Model {\n  id: string;\n  modelName: string;\n  clientAgencyName: string;\n  managerName: string;\n  teamLeader: string;\n  earningsType: 'Type 1' | 'Type 2';\n  status: 'Active' | 'Inactive';\n  paymentStatus: 'Paid' | 'Not Paid';\n  cutLogic: {\n    type: 'Type 1' | 'Type 2';\n    percentage1: number;\n    threshold: number;\n    fixedAmount: number;\n    percentage2: number;\n  };\n  commissionRules: {\n    baseCommission: number;\n    bonusEnabled: boolean;\n    bonusThreshold: number;\n    bonusCommission: number;\n  };\n  notes: string;\n}\n\nexport const teamLeaders: TeamLeader[] = [\n  {\n    id: '1',\n    name: 'Alex Johnson',\n    email: 'alex.johnson@agency.com',\n    phone: '+1 (555) 123-4567',\n    salaryType: 'Commission-based',\n    commissionRate: 15,\n    week1Salary: 1200,\n    week2Salary: 1350,\n    totalSalary: 2550,\n    paymentStatus: 'Paid',\n    assignedModels: ['Anastasia', 'Sophie'],\n    status: 'Active'\n  },\n  {\n    id: '2',\n    name: 'Samantha Ray',\n    email: 'samantha.ray@agency.com',\n    phone: '+1 (555) 234-5678',\n    salaryType: 'Fixed',\n    fixedSalary: 3000,\n    week1Salary: 1500,\n    week2Salary: 1500,\n    totalSalary: 3000,\n    paymentStatus: 'Not Paid',\n    assignedModels: ['Isabella', 'Valentina'],\n    status: 'Active'\n  },\n  {\n    id: '3',\n    name: 'Mike Williams',\n    email: 'mike.williams@agency.com',\n    phone: '+1 (555) 345-6789',\n    salaryType: 'Commission-based',\n    commissionRate: 12,\n    week1Salary: 980,\n    week2Salary: 1100,\n    totalSalary: 2080,\n    paymentStatus: 'Paid',\n    assignedModels: ['Elena', 'Maria'],\n    status: 'Active'\n  },\n  {\n    id: '4',\n    name: 'Sarah Chen',\n    email: 'sarah.chen@agency.com',\n    phone: '+1 (555) 456-7890',\n    salaryType: 'Fixed',\n    fixedSalary: 2800,\n    week1Salary: 1400,\n    week2Salary: 1400,\n    totalSalary: 2800,\n    paymentStatus: 'Not Paid',\n    assignedModels: ['Sophia', 'Emma'],\n    status: 'Inactive'\n  }\n];\n\nexport const models: Model[] = [\n  {\n    id: '1',\n    modelName: 'Anastasia',\n    clientAgencyName: 'Celestial Models',\n    managerName: 'Admin',\n    teamLeader: 'Alex Johnson',\n    earningsType: 'Type 1',\n    status: 'Active',\n    paymentStatus: 'Paid',\n    cutLogic: {\n      type: 'Type 1',\n      percentage1: 20,\n      threshold: 5000,\n      fixedAmount: 1000,\n      percentage2: 0,\n    },\n    commissionRules: {\n      baseCommission: 3,\n      bonusEnabled: true,\n      bonusThreshold: 1000,\n      bonusCommission: 5,\n    },\n    notes: 'Top performing model.',\n  },\n  {\n    id: '2',\n    modelName: 'Isabella',\n    clientAgencyName: 'Starlight Agency',\n    managerName: 'Admin',\n    teamLeader: 'Samantha Ray',\n    earningsType: 'Type 2',\n    status: 'Active',\n    paymentStatus: 'Not Paid',\n    cutLogic: {\n      type: 'Type 2',\n      percentage1: 0,\n      threshold: 0,\n      fixedAmount: 0,\n      percentage2: 25,\n    },\n    commissionRules: {\n      baseCommission: 4,\n      bonusEnabled: false,\n      bonusThreshold: 0,\n      bonusCommission: 0,\n    },\n    notes: '',\n  },\n  {\n    id: '3',\n    modelName: 'Sophie',\n    clientAgencyName: 'Celestial Models',\n    managerName: 'Admin',\n    teamLeader: 'Alex Johnson',\n    earningsType: 'Type 1',\n    status: 'Inactive',\n    paymentStatus: 'Not Paid',\n    cutLogic: {\n      type: 'Type 1',\n      percentage1: 15,\n      threshold: 4000,\n      fixedAmount: 800,\n      percentage2: 0,\n    },\n    commissionRules: {\n      baseCommission: 3,\n      bonusEnabled: false,\n      bonusThreshold: 0,\n      bonusCommission: 0,\n    },\n    notes: 'On break.',\n  },\n  {\n    id: '4',\n    modelName: 'Valentina',\n    clientAgencyName: 'Galaxy Management',\n    managerName: 'Admin',\n    teamLeader: 'Samantha Ray',\n    earningsType: 'Type 2',\n    status: 'Active',\n    paymentStatus: 'Paid',\n    cutLogic: {\n      type: 'Type 2',\n      percentage1: 0,\n      threshold: 0,\n      fixedAmount: 0,\n      percentage2: 30,\n    },\n     commissionRules: {\n      baseCommission: 3.5,\n      bonusEnabled: true,\n      bonusThreshold: 1200,\n      bonusCommission: 6,\n    },\n    notes: '',\n  },\n  {\n    id: '5',\n    modelName: 'Elena',\n    clientAgencyName: 'Starlight Agency',\n    managerName: 'Admin',\n    teamLeader: 'Mike Williams',\n    earningsType: 'Type 1',\n    status: 'Active',\n    paymentStatus: 'Not Paid',\n    cutLogic: {\n      type: 'Type 1',\n      percentage1: 18,\n      threshold: 4500,\n      fixedAmount: 900,\n      percentage2: 0,\n    },\n    commissionRules: {\n      baseCommission: 3.5,\n      bonusEnabled: true,\n      bonusThreshold: 800,\n      bonusCommission: 4.5,\n    },\n    notes: 'New model, performing well.',\n  },\n  {\n    id: '6',\n    modelName: 'Maria',\n    clientAgencyName: 'Galaxy Management',\n    managerName: 'Admin',\n    teamLeader: 'Mike Williams',\n    earningsType: 'Type 2',\n    status: 'Active',\n    paymentStatus: 'Paid',\n    cutLogic: {\n      type: 'Type 2',\n      percentage1: 0,\n      threshold: 0,\n      fixedAmount: 0,\n      percentage2: 22,\n    },\n    commissionRules: {\n      baseCommission: 3,\n      bonusEnabled: false,\n      bonusThreshold: 0,\n      bonusCommission: 0,\n    },\n    notes: '',\n  },\n  {\n    id: '7',\n    modelName: 'Sophia',\n    clientAgencyName: 'Celestial Models',\n    managerName: 'Admin',\n    teamLeader: 'Sarah Chen',\n    earningsType: 'Type 1',\n    status: 'Inactive',\n    paymentStatus: 'Not Paid',\n    cutLogic: {\n      type: 'Type 1',\n      percentage1: 16,\n      threshold: 4200,\n      fixedAmount: 850,\n      percentage2: 0,\n    },\n    commissionRules: {\n      baseCommission: 3.2,\n      bonusEnabled: true,\n      bonusThreshold: 900,\n      bonusCommission: 4.8,\n    },\n    notes: 'Temporarily inactive.',\n  },\n  {\n    id: '8',\n    modelName: 'Emma',\n    clientAgencyName: 'Starlight Agency',\n    managerName: 'Admin',\n    teamLeader: 'Sarah Chen',\n    earningsType: 'Type 2',\n    status: 'Inactive',\n    paymentStatus: 'Paid',\n    cutLogic: {\n      type: 'Type 2',\n      percentage1: 0,\n      threshold: 0,\n      fixedAmount: 0,\n      percentage2: 28,\n    },\n    commissionRules: {\n      baseCommission: 3.8,\n      bonusEnabled: false,\n      bonusThreshold: 0,\n      bonusCommission: 0,\n    },\n    notes: 'On extended break.',\n  }\n];\n\n// Helper functions\nexport const getActiveTeamLeaders = () => teamLeaders.filter(tl => tl.status === 'Active');\nexport const getActiveModels = () => models.filter(model => model.status === 'Active');\nexport const getActiveChatters = () => chatters.filter(chatter => chatter.status === 'active');\nexport const getModelNames = () => models.map(model => model.modelName);\nexport const getTeamLeaderNames = () => teamLeaders.map(tl => tl.name);\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 955, "column": 0}, "map": {"version":3,"sources":["file:///Users/skysha/Downloads/GoatFinance/frontend/src/lib/insights-calculations.ts"],"sourcesContent":["// Insights Calculations Utility\n// This file contains all the business logic for insights and statistics calculations\n\nimport { models, teamLeaders } from './shared-data';\nimport { ModelRevenueCalculator } from './salary-calculations';\n\nexport interface ModelInsightData {\n  id: string;\n  modelName: string;\n  managerName: string;\n  period: string;\n  netSales: number;\n  invoiceValue: number;\n  invoiceStatus: 'Paid' | 'Not Paid';\n  revenue: number;\n  realRevenue: number;\n  cost: number;\n  profit: number;\n  realProfit: number;\n  chatterCost: number;\n  managerCost: number;\n  assistantCost: number;\n}\n\nexport interface PeriodFinancialData {\n  id: string;\n  period: string;\n  revenue: number;\n  realRevenue: number;\n  cost: number;\n  realCost: number;\n  profit: number;\n  realProfit: number;\n  modelBreakdown: ModelInsightData[];\n}\n\nexport interface ChatterCostData {\n  id: string;\n  name: string;\n  hours: number;\n  hourlyCost: number;\n  commission: number;\n  totalCost: number;\n  modelId: string;\n  modelName: string;\n}\n\nexport class InsightsCalculator {\n  // Calculate invoice value based on model rules\n  static calculateInvoiceValue(netSales: number, modelId: string): number {\n    const model = models.find(m => m.id === modelId);\n    if (!model) return 0;\n\n    if (model.earningsType === 'Type 1') {\n      return netSales >= model.cutLogic.threshold \n        ? netSales * (model.cutLogic.percentage1 / 100)\n        : model.cutLogic.fixedAmount;\n    } else {\n      return netSales * (model.cutLogic.percentage2 / 100);\n    }\n  }\n\n  // Calculate real revenue based on invoice status\n  static calculateRealRevenue(invoiceValue: number, status: 'Paid' | 'Not Paid'): number {\n    return status === 'Paid' ? invoiceValue : 0;\n  }\n\n  // Calculate profit\n  static calculateProfit(revenue: number, cost: number): number {\n    return revenue - cost;\n  }\n\n  // Calculate real profit\n  static calculateRealProfit(realRevenue: number, cost: number): number {\n    return realRevenue - cost;\n  }\n\n  // Get model manager name\n  static getModelManager(modelId: string): string {\n    const model = models.find(m => m.id === modelId);\n    if (!model) return 'Unknown';\n    \n    const teamLeader = teamLeaders.find(tl => tl.name === model.teamLeader);\n    return teamLeader ? teamLeader.name : model.teamLeader;\n  }\n\n  // Calculate cost attribution for a model\n  static calculateModelCosts(\n    modelId: string,\n    period: string,\n    chatterCosts: ChatterCostData[]\n  ): { chatterCost: number; managerCost: number; assistantCost: number; totalCost: number } {\n    // Filter costs for this model and period\n    const modelChatterCosts = chatterCosts.filter(cost => cost.modelId === modelId);\n    \n    const chatterCost = modelChatterCosts.reduce((sum, cost) => sum + cost.totalCost, 0);\n    \n    // Get manager cost (simplified - in real app this would be more complex)\n    const model = models.find(m => m.id === modelId);\n    const managerCost = model ? 400 : 0; // Mock value\n    \n    // Get assistant cost (simplified)\n    const assistantCost = 250; // Mock value\n    \n    const totalCost = chatterCost + managerCost + assistantCost;\n    \n    return {\n      chatterCost,\n      managerCost,\n      assistantCost,\n      totalCost\n    };\n  }\n\n  // Generate period financial data\n  static generatePeriodFinancialData(\n    period: string,\n    modelData: ModelInsightData[]\n  ): PeriodFinancialData {\n    const revenue = modelData.reduce((sum, model) => sum + model.revenue, 0);\n    const realRevenue = modelData.reduce((sum, model) => sum + model.realRevenue, 0);\n    const cost = modelData.reduce((sum, model) => sum + model.cost, 0);\n    const profit = modelData.reduce((sum, model) => sum + model.profit, 0);\n    const realProfit = modelData.reduce((sum, model) => sum + model.realProfit, 0);\n\n    return {\n      id: period,\n      period,\n      revenue,\n      realRevenue,\n      cost,\n      realCost: cost, // Simplified - real cost might be different\n      profit,\n      realProfit,\n      modelBreakdown: modelData\n    };\n  }\n\n  // Update model insight data when net sales changes\n  static updateModelInsightData(\n    modelId: string,\n    period: string,\n    netSales: number,\n    invoiceStatus: 'Paid' | 'Not Paid',\n    chatterCosts: ChatterCostData[]\n  ): ModelInsightData {\n    const model = models.find(m => m.id === modelId);\n    if (!model) {\n      throw new Error(`Model with ID ${modelId} not found`);\n    }\n\n    const invoiceValue = this.calculateInvoiceValue(netSales, modelId);\n    const revenue = invoiceValue;\n    const realRevenue = this.calculateRealRevenue(invoiceValue, invoiceStatus);\n    \n    const costs = this.calculateModelCosts(modelId, period, chatterCosts);\n    const profit = this.calculateProfit(revenue, costs.totalCost);\n    const realProfit = this.calculateRealProfit(realRevenue, costs.totalCost);\n\n    return {\n      id: modelId,\n      modelName: model.modelName,\n      managerName: this.getModelManager(modelId),\n      period,\n      netSales,\n      invoiceValue,\n      invoiceStatus,\n      revenue,\n      realRevenue,\n      cost: costs.totalCost,\n      profit,\n      realProfit,\n      chatterCost: costs.chatterCost,\n      managerCost: costs.managerCost,\n      assistantCost: costs.assistantCost\n    };\n  }\n\n  // Get Y-axis scale based on period type\n  static getYAxisScale(period: string): number {\n    if (period.includes('Week')) return 1000; // 1K per grid line for weeks\n    if (period.includes('1') || period.includes('2')) return 2000; // 2K per grid line for half-months\n    return 4000; // 4K per grid line for full months\n  }\n\n  // Validate period format\n  static isValidPeriod(period: string): boolean {\n    const validPeriods = [\n      'July', 'July 1', 'July 2', 'July 1 - Week 1', 'July 1 - Week 2', 'July 2 - Week 1', 'July 2 - Week 2',\n      'August', 'August 1', 'August 2', 'August 1 - Week 1', 'August 1 - Week 2', 'August 2 - Week 1', 'August 2 - Week 2',\n      'September', 'September 1', 'September 2', 'September 1 - Week 1', 'September 1 - Week 2', 'September 2 - Week 1', 'September 2 - Week 2'\n    ];\n    return validPeriods.includes(period);\n  }\n\n  // Get all available periods\n  static getAvailablePeriods(): string[] {\n    const months = [\n      'January','February','March','April','May','June','July','August','September','October','November','December'\n    ];\n    const periods: string[] = [];\n    for (const m of months) {\n      periods.push(m);\n      periods.push(`${m} 1`);\n      periods.push(`${m} 2`);\n      periods.push(`${m} 1 - Week 1`);\n      periods.push(`${m} 1 - Week 2`);\n      periods.push(`${m} 2 - Week 1`);\n      periods.push(`${m} 2 - Week 2`);\n    }\n    return periods;\n  }\n\n  // Calculate performance rating based on profit\n  static calculatePerformanceRating(profit: number, averageProfit: number): 'High' | 'Medium' | 'Low' {\n    if (profit >= averageProfit * 1.2) return 'High';\n    if (profit >= averageProfit * 0.8) return 'Medium';\n    return 'Low';\n  }\n\n  // Get mock chatter costs for demonstration\n  static getMockChatterCosts(modelId: string): ChatterCostData[] {\n    return [\n      {\n        id: '1',\n        name: 'John Doe',\n        hours: 32,\n        hourlyCost: 480,\n        commission: 120,\n        totalCost: 600,\n        modelId,\n        modelName: models.find(m => m.id === modelId)?.modelName || 'Unknown'\n      },\n      {\n        id: '2',\n        name: 'Jane Smith',\n        hours: 28,\n        hourlyCost: 420,\n        commission: 105,\n        totalCost: 525,\n        modelId,\n        modelName: models.find(m => m.id === modelId)?.modelName || 'Unknown'\n      }\n    ];\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1161, "column": 0}, "map": {"version":3,"sources":["file:///Users/skysha/Downloads/GoatFinance/frontend/src/components/ui/financial-histogram.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\ninterface FinancialData {\r\n  name: string;\r\n  revenue: number;\r\n  cost: number;\r\n  profit: number;\r\n  realRevenue: number;\r\n  realProfit: number;\r\n}\r\n\r\ninterface FinancialHistogramProps {\r\n  data: FinancialData[];\r\n  title?: string;\r\n  subtitle?: string;\r\n  loading?: boolean;\r\n  height?: number;\r\n  period?: string; // For dynamic scaling\r\n}\r\n\r\n// Helper function to determine Y-axis scaling based on period\r\nconst getYAxisScaling = (period: string, data: FinancialData[]) => {\r\n  const maxValue = Math.max(\r\n    ...data.flatMap(d => [d.revenue, d.cost, d.profit, d.realRevenue, d.realProfit])\r\n  );\r\n  \r\n  let gridStep = 1000; // Default 1K\r\n  if (period.includes('Week')) {\r\n    gridStep = 1000; // 1K per grid line for weekly\r\n  } else if (period.includes('July 1') || period.includes('July 2') || \r\n             period.includes('August 1') || period.includes('August 2') ||\r\n             period.includes('January 1') || period.includes('January 2') ||\r\n             period.includes('February 1') || period.includes('February 2') ||\r\n             period.includes('March 1') || period.includes('March 2') ||\r\n             period.includes('April 1') || period.includes('April 2') ||\r\n             period.includes('May 1') || period.includes('May 2') ||\r\n             period.includes('June 1') || period.includes('June 2') ||\r\n             period.includes('September 1') || period.includes('September 2') ||\r\n             period.includes('October 1') || period.includes('October 2') ||\r\n             period.includes('November 1') || period.includes('November 2') ||\r\n             period.includes('December 1') || period.includes('December 2')) {\r\n    gridStep = 2000; // 2K per grid line for half-month\r\n  } else if (period === 'July' || period === 'August' || period === 'January' || \r\n             period === 'February' || period === 'March' || period === 'April' ||\r\n             period === 'May' || period === 'June' || period === 'September' ||\r\n             period === 'October' || period === 'November' || period === 'December') {\r\n    gridStep = 4000; // 4K per grid line for full month\r\n  }\r\n  \r\n  return Math.ceil(maxValue / gridStep) * gridStep;\r\n};\r\n\r\nexport function FinancialHistogram({ \r\n  data, \r\n  title = \"Financial Overview\", \r\n  subtitle,\r\n  loading = false,\r\n  height = 400,\r\n  period = \"\"\r\n}: FinancialHistogramProps) {\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center py-8\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-primary\"></div>\r\n          <span>Loading financial data...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!data || data.length === 0) {\r\n    return (\r\n      <div className=\"flex items-center justify-center py-8\">\r\n        <div className=\"text-muted-foreground\">\r\n          No financial data available for the selected period\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Get Y-axis scaling based on period\r\n  const yAxisMax = getYAxisScaling(period, data);\r\n\r\n  // Transform data for Recharts with proper gaps\r\n  const chartData = data.map((item, index) => ({\r\n    name: item.name,\r\n    Revenue: item.revenue,\r\n    Cost: item.cost,\r\n    Profit: item.profit,\r\n    // Add spacer for large gap between Profit and Real Revenue\r\n    spacer1: 0,\r\n    spacer2: 0,\r\n    'Real Revenue': item.realRevenue,\r\n    'Real Profit': item.realProfit,\r\n  }));\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <ResponsiveContainer width=\"100%\" height={height}>\r\n        <BarChart\r\n          data={chartData}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis \r\n            dataKey=\"name\" \r\n            tick={{ fontSize: 12 }}\r\n            angle={-45}\r\n            textAnchor=\"end\"\r\n            height={60}\r\n          />\r\n          <YAxis \r\n            tick={{ fontSize: 12 }}\r\n            tickFormatter={(value) => `$${value.toLocaleString()}`}\r\n            domain={[0, yAxisMax]}\r\n            tickCount={6}\r\n          />\r\n          <Tooltip \r\n            formatter={(value: number, name: string) => {\r\n              if (name === 'spacer1' || name === 'spacer2') return null;\r\n              return [`$${value.toLocaleString()}`, name];\r\n            }}\r\n            labelFormatter={(label) => `Period: ${label}`}\r\n            contentStyle={{\r\n              backgroundColor: 'white',\r\n              border: '1px solid #ccc',\r\n              borderRadius: '6px',\r\n              boxShadow: '0 2px 8px rgba(0,0,0,0.1)'\r\n            }}\r\n          />\r\n          <Legend />\r\n          <Bar \r\n            dataKey=\"Revenue\" \r\n            fill=\"#16a34a\" \r\n            name=\"Revenue\"\r\n            radius={[2, 2, 0, 0]}\r\n          />\r\n          <Bar \r\n            dataKey=\"Cost\" \r\n            fill=\"#dc2626\" \r\n            name=\"Cost\"\r\n            radius={[2, 2, 0, 0]}\r\n          />\r\n          <Bar \r\n            dataKey=\"Profit\" \r\n            fill=\"#2563eb\" \r\n            name=\"Profit\"\r\n            radius={[2, 2, 0, 0]}\r\n          />\r\n          {/* Spacer bars for gaps - invisible */}\r\n          <Bar \r\n            dataKey=\"spacer1\" \r\n            fill=\"transparent\" \r\n            name=\"\"\r\n            radius={[0, 0, 0, 0]}\r\n          />\r\n          <Bar \r\n            dataKey=\"spacer2\" \r\n            fill=\"transparent\" \r\n            name=\"\"\r\n            radius={[0, 0, 0, 0]}\r\n          />\r\n          <Bar \r\n            dataKey=\"Real Revenue\" \r\n            fill=\"#22c55e\" \r\n            name=\"Real Revenue\"\r\n            radius={[2, 2, 0, 0]}\r\n          />\r\n          <Bar \r\n            dataKey=\"Real Profit\" \r\n            fill=\"#3b82f6\" \r\n            name=\"Real Profit\"\r\n            radius={[2, 2, 0, 0]}\r\n          />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n// Single period histogram for model insights\r\ninterface SinglePeriodData {\r\n  revenue: number;\r\n  cost: number;\r\n  profit: number;\r\n  realRevenue: number;\r\n  realProfit: number;\r\n}\r\n\r\ninterface SinglePeriodHistogramProps {\r\n  data: SinglePeriodData;\r\n  period: string;\r\n  loading?: boolean;\r\n  height?: number;\r\n}\r\n\r\nexport function SinglePeriodHistogram({ \r\n  data, \r\n  period,\r\n  loading = false,\r\n  height = 400 \r\n}: SinglePeriodHistogramProps) {\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center py-8\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-primary\"></div>\r\n          <span>Loading financial data...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!data) {\r\n    return (\r\n      <div className=\"flex items-center justify-center py-8\">\r\n        <div className=\"text-muted-foreground\">\r\n          No financial data available for the selected period\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Get Y-axis scaling based on period\r\n  const yAxisMax = getYAxisScaling(period, [{\r\n    name: period,\r\n    revenue: data.revenue,\r\n    cost: data.cost,\r\n    profit: data.profit,\r\n    realRevenue: data.realRevenue,\r\n    realProfit: data.realProfit,\r\n  }]);\r\n\r\n  // Transform data for Recharts with proper gaps\r\n  const chartData = [{\r\n    name: period,\r\n    Revenue: data.revenue,\r\n    Cost: data.cost,\r\n    Profit: data.profit,\r\n    // Add spacer for large gap between Profit and Real Revenue\r\n    spacer1: 0,\r\n    spacer2: 0,\r\n    'Real Revenue': data.realRevenue,\r\n    'Real Profit': data.realProfit,\r\n  }];\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <ResponsiveContainer width=\"100%\" height={height}>\r\n        <BarChart\r\n          data={chartData}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis \r\n            dataKey=\"name\" \r\n            tick={{ fontSize: 12 }}\r\n          />\r\n          <YAxis \r\n            tick={{ fontSize: 12 }}\r\n            tickFormatter={(value) => `$${value.toLocaleString()}`}\r\n            domain={[0, yAxisMax]}\r\n            tickCount={6}\r\n          />\r\n          <Tooltip \r\n            formatter={(value: number, name: string) => {\r\n              if (name === 'spacer1' || name === 'spacer2') return null;\r\n              return [`$${value.toLocaleString()}`, name];\r\n            }}\r\n            labelFormatter={() => `Period: ${period}`}\r\n            contentStyle={{\r\n              backgroundColor: 'white',\r\n              border: '1px solid #ccc',\r\n              borderRadius: '6px',\r\n              boxShadow: '0 2px 8px rgba(0,0,0,0.1)'\r\n            }}\r\n          />\r\n          <Legend />\r\n          <Bar \r\n            dataKey=\"Revenue\" \r\n            fill=\"#16a34a\" \r\n            name=\"Revenue\"\r\n            radius={[2, 2, 0, 0]}\r\n          />\r\n          <Bar \r\n            dataKey=\"Cost\" \r\n            fill=\"#dc2626\" \r\n            name=\"Cost\"\r\n            radius={[2, 2, 0, 0]}\r\n          />\r\n          <Bar \r\n            dataKey=\"Profit\" \r\n            fill=\"#2563eb\" \r\n            name=\"Profit\"\r\n            radius={[2, 2, 0, 0]}\r\n          />\r\n          {/* Spacer bars for gaps - invisible */}\r\n          <Bar \r\n            dataKey=\"spacer1\" \r\n            fill=\"transparent\" \r\n            name=\"\"\r\n            radius={[0, 0, 0, 0]}\r\n          />\r\n          <Bar \r\n            dataKey=\"spacer2\" \r\n            fill=\"transparent\" \r\n            name=\"\"\r\n            radius={[0, 0, 0, 0]}\r\n          />\r\n          <Bar \r\n            dataKey=\"Real Revenue\" \r\n            fill=\"#22c55e\" \r\n            name=\"Real Revenue\"\r\n            radius={[2, 2, 0, 0]}\r\n          />\r\n          <Bar \r\n            dataKey=\"Real Profit\" \r\n            fill=\"#3b82f6\" \r\n            name=\"Real Profit\"\r\n            radius={[2, 2, 0, 0]}\r\n          />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1740, "column": 0}, "map": {"version":3,"sources":["file:///Users/skysha/Downloads/GoatFinance/frontend/src/app/dashboard/insights/page.tsx"],"sourcesContent":["\n'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { NumberInput } from '@/components/ui/number-input';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Badge } from '@/components/ui/badge';\nimport { Search, TrendingUp, TrendingDown, DollarSign, BarChart3, Calendar } from 'lucide-react';\nimport Link from 'next/link';\nimport { useToast } from '@/hooks/use-toast';\nimport { apiService } from '@/lib/api';\nimport { InsightsCalculator } from '@/lib/insights-calculations';\nimport { FinancialHistogram } from '@/components/ui/financial-histogram';\n\ninterface FinancialData {\n  id: string;\n  period: string;\n  revenue: number;\n  realRevenue: number;\n  cost: number;\n  realCost: number;\n  profit: number;\n  realProfit: number;\n  invoiceStatus: 'Paid' | 'Not Paid';\n}\n\ninterface ModelInsight {\n  id: string;\n  name: string;\n  managerName: string;\n  revenue: number;\n  profit: number;\n  performance: 'High' | 'Medium' | 'Low';\n  netSales: number;\n  invoiceValue: number;\n  invoiceStatus: 'Paid' | 'Unpaid';\n  isReference?: boolean;\n  referencedModels?: Array<{ model_id: string; model_name: string }>;\n  refNetSales?: number[];\n}\n\ninterface AgencyInsightsData {\n  revenue: number;\n  real_revenue: number;\n  cost: number;\n  profit: number;\n  real_profit: number;\n  metadata?: {\n    scope_type: string;\n    month?: string;\n    period?: string;\n    periods_included?: string[];\n  };\n}\n\n// Get available periods from utility\nconst availablePeriods = InsightsCalculator.getAvailablePeriods();\n\nexport default function InsightsPage() {\n  const { toast } = useToast();\n  const [selectedPeriod, setSelectedPeriod] = useState('all');\n  const [histogramPeriod, setHistogramPeriod] = useState('January');\n  const [tablePeriod, setTablePeriod] = useState('January 1 - Week 1');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [financialData, setFinancialData] = useState<FinancialData[]>([]);\n  const [modelInsights, setModelInsights] = useState<ModelInsight[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [agencyInsights, setAgencyInsights] = useState<AgencyInsightsData | null>(null);\n  const [monthKPIs, setMonthKPIs] = useState<any>(null);\n  const [models, setModels] = useState<any[]>([]);\n  const [invoices, setInvoices] = useState<any[]>([]);\n  const [workReports, setWorkReports] = useState<any[]>([]);\n  const [year] = useState<number>(new Date().getFullYear());\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n\n  const parseWeekPeriod = (label: string): { period: string; week?: number } => {\n    // Formats: \"January 1 - Week 1\" => { period: 'January 1', week: 1 }\n    if (label.includes(' - Week ')) {\n      const [p, wk] = label.split(' - Week ');\n      const weekNum = parseInt(wk, 10);\n      return { period: p, week: isNaN(weekNum) ? undefined : weekNum };\n    }\n    return { period: label };\n  };\n\n  // Load insights data\n  useEffect(() => {\n    loadModels();\n    loadInsightsData();\n  }, [histogramPeriod]);\n\n  // Load invoices when table period changes\n  useEffect(() => {\n    loadInvoices();\n    // loadWorkReports(); // Commented out - manual input preferred for insights\n  }, [tablePeriod]);\n\n  // Update table data when models or invoices change\n  useEffect(() => {\n    if (models.length > 0) {\n      const { period: tableBasePeriod, week: tableWeek } = parseWeekPeriod(tablePeriod);\n      const transformedData = models.map((model, index) => {\n        // Find invoice data for this model and period/week\n        const modelInvoice = invoices.find((invoice: any) => \n          invoice.model_id === model.model_id && \n          invoice.period === tableBasePeriod &&\n          ((invoice.week || null) === (tableWeek || null))\n        );\n\n        // Since we're only showing regular models now, simplify the logic\n        const netAmount = modelInvoice?.net_amount || 0;\n        const invoiceAmount = modelInvoice?.invoice_amount || 0;\n        const profit = invoiceAmount - netAmount;\n\n        return {\n          id: model.model_id || `model-${index}`,\n          name: model.modelName || `Model ${index + 1}`,\n          managerName: model.managerName || 'Unknown',\n          revenue: invoiceAmount || 0,\n          profit: profit,\n          performance: 'Medium' as const,\n          netSales: netAmount,\n          invoiceValue: invoiceAmount || 0,\n          invoiceStatus: ((modelInvoice?.status === 'Paid') ? 'Paid' : 'Unpaid') as 'Paid' | 'Unpaid',\n          isReference: false, // All models are now regular models\n          referencedModels: [], // No reference models shown\n          refNetSales: [], // No reference net sales\n        };\n      });\n      setModelInsights(transformedData);\n    }\n  }, [models, invoices, tablePeriod]); // Removed workReports dependency\n\n  const loadModels = async () => {\n    try {\n      const response = await apiService.getAllModels({ status_filter: 'Active' });\n      if (response.status === 'Success' && response.data) {\n        // Filter out reference models - only show regular models\n        const regularModels = response.data.filter((model: any) => {\n          // A model is a reference model if:\n          // 1. isReferenceModel is true, OR\n          // 2. referencedModels array exists and has items\n          const isReferenceModel = model.isReferenceModel === true || \n                                 (model.referencedModels && Array.isArray(model.referencedModels) && model.referencedModels.length > 0);\n          return !isReferenceModel; // Only include non-reference models\n        });\n        setModels(regularModels);\n      }\n    } catch (error) {\n      console.error('Error loading models:', error);\n    }\n  };\n\n  const loadInvoices = async () => {\n    try {\n      const { period, week } = parseWeekPeriod(tablePeriod);\n      const response = await apiService.listInvoices({ period, year, ...(week && { week }) });\n      if (response.status === 'Success' && response.data) {\n        setInvoices(response.data);\n      }\n    } catch (error) {\n      console.error('Error loading invoices:', error);\n    }\n  };\n\n  // Commented out work reports loading - manual input preferred for insights\n  // const loadWorkReports = async () => {\n  //   try {\n  //     const { period, week } = parseWeekPeriod(tablePeriod);\n  //     // Load work reports for all chatters for this period/week\n  //     const chattersResponse = await apiService.getAllChatters();\n  //     if (chattersResponse.status === 'Success' && chattersResponse.data) {\n  //       const allWorkReports: any[] = [];\n  //       \n  //       // Load work reports for each chatter\n  //       for (const chatter of chattersResponse.data) {\n  //         try {\n  //           const reportResponse = await apiService.getChatterWeeklyReport(\n  //             chatter.chatter_id, \n  //             period, \n  //             year, \n  //             week || 1\n  //           );\n  //           if (reportResponse.status === 'Success' && reportResponse.data) {\n  //             // Aggregate daily reports for the week\n  //             const aggregatedReports = aggregateWeeklyReports(reportResponse.data);\n  //             allWorkReports.push(...aggregatedReports);\n  //           }\n  //         } catch (error) {\n  //           console.error(`Error loading work reports for chatter ${chatter.chatter_id}:`, error);\n  //         }\n  //       }\n  //       \n  //       setWorkReports(allWorkReports);\n  //     }\n  //   } catch (error) {\n  //     console.error('Error loading work reports:', error);\n  //   }\n  // };\n\n  // const aggregateWeeklyReports = (dailyReports: any[]) => {\n  //   // Group reports by model_id\n  //   const modelGroups: { [key: string]: any[] } = {};\n  //   \n  //   dailyReports.forEach(report => {\n  //     const modelId = report.model_id;\n  //     if (!modelGroups[modelId]) {\n  //       modelGroups[modelId] = [];\n  //     }\n  //     modelGroups[modelId].push(report);\n  //   });\n  //   \n  //   // Aggregate data for each model\n  //   const aggregatedReports: any[] = [];\n  //   \n  //   Object.keys(modelGroups).forEach(modelId => {\n  //     const reports = modelGroups[modelId];\n  //     if (reports.length === 0) return;\n  //     \n  //     // Sum up hours and net_sales\n  //     let totalHours = 0;\n  //     let totalNetSales = 0;\n  //     let aggregatedReferenceChildren: any[] = [];\n  //     \n  //     reports.forEach(report => {\n  //       totalHours += Number(report.hours || 0);\n  //       totalNetSales += Number(report.net_sales || 0);\n  //       \n  //       // Aggregate reference_children if present\n  //       if (report.reference_children) {\n  //         try {\n  //           let referenceChildren = report.reference_children;\n  //           // Handle potential double-encoded JSON\n  //           if (typeof referenceChildren === 'string') {\n  //             referenceChildren = JSON.parse(referenceChildren);\n  //             if (typeof referenceChildren === 'string') {\n  //               referenceChildren = JSON.parse(referenceChildren);\n  //             }\n  //           }\n  //           \n  //           if (Array.isArray(referenceChildren)) {\n  //             // If this is the first report, initialize aggregated children\n  //             if (aggregatedReferenceChildren.length === 0) {\n  //               aggregatedReferenceChildren = referenceChildren.map(child => ({\n  //                 model_id: child.model_id,\n  //                 hours: 0,\n  //                 net_sales: 0\n  //               }));\n  //             }\n  //             \n  //             // Add to aggregated children\n  //             referenceChildren.forEach((child, index) => {\n  //               if (aggregatedReferenceChildren[index]) {\n  //                 aggregatedReferenceChildren[index].hours += Number(child.hours || 0);\n  //                 aggregatedReferenceChildren[index].net_sales += Number(child.net_sales || 0);\n  //               }\n  //             });\n  //           }\n  //         } catch (error) {\n  //           console.error('Error aggregating reference_children:', error);\n  //         }\n  //       }\n  //     });\n  //     \n  //     // Create aggregated report\n  //     const aggregatedReport = {\n  //       ...reports[0], // Use first report as base\n  //       hours: totalHours,\n  //       net_sales: totalNetSales,\n  //       reference_children: aggregatedReferenceChildren.length > 0 ? aggregatedReferenceChildren : null\n  //     };\n  //     \n  //     aggregatedReports.push(aggregatedReport);\n  //   });\n  //   \n  //   return aggregatedReports;\n  // };\n\n  const loadInsightsData = async () => {\n    try {\n      setLoading(true);\n      \n      // Load agency insights\n      const { period: histPeriod, week: histWeek } = parseWeekPeriod(histogramPeriod);\n      const agencyResponse = await apiService.getAgencyInsights(histPeriod, year, histWeek);\n      if (agencyResponse.status === 'Success' && agencyResponse.data) {\n        setAgencyInsights(agencyResponse.data);\n      }\n\n      // Load dashboard KPIs\n      const kpisResponse = await apiService.getDashboardKPIs(histPeriod, year, histWeek);\n      if (kpisResponse.status === 'Success' && kpisResponse.data) {\n        setMonthKPIs(kpisResponse.data);\n      }\n\n\n\n      // Try to load saved period data first, fallback to calculated data\n      let savedData = null;\n      try {\n        // Check if we have saved data for this period\n        const savedResponse = await apiService.getSavedAgencyInsights(histPeriod, year, histWeek);\n        if (savedResponse.status === 'Success' && savedResponse.data) {\n          savedData = savedResponse.data;\n        }\n      } catch (e) {\n        console.log('No saved data found, using calculated data');\n      }\n\n      // Use saved data if available, otherwise use calculated data\n      const dataSource = savedData || agencyResponse.data;\n      \n      const financialDataForHistogram: FinancialData[] = [\n        {\n          id: '1',\n          period: histogramPeriod,\n          revenue: dataSource?.revenue || 0,\n          realRevenue: dataSource?.real_revenue || 0,\n          cost: dataSource?.cost || 0,\n          realCost: dataSource?.cost || 0,\n          profit: dataSource?.profit || 0,\n          realProfit: dataSource?.real_profit || 0,\n          invoiceStatus: 'Paid'\n        }\n      ];\n      setFinancialData(financialDataForHistogram);\n\n    } catch (error) {\n      console.error('Error loading insights data:', error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to load insights data. Please try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Filter financial data based on search term\n  const filteredFinancialData = financialData.filter(data =>\n    data.period.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const histogramData = filteredFinancialData;\n\n  // Get week-level periods for table\n  const weekPeriods = availablePeriods.filter(period => period.includes('Week'));\n\n  // Calculate totals\n  const totalRevenue = agencyInsights?.revenue || 0;\n  const totalRealRevenue = agencyInsights?.real_revenue || 0;\n  const totalCost = agencyInsights?.cost || 0;\n  const totalRealCost = agencyInsights?.cost || 0;\n  const totalProfit = agencyInsights?.profit || 0;\n  const totalRealProfit = agencyInsights?.real_profit || 0;\n\n  const computeInvoiceForModel = (modelId: string, netSales: number): number => {\n    const modelRec = models.find((m: any) => m.model_id === modelId);\n    if (!modelRec || !Number.isFinite(netSales)) return 0;\n    const earningsType: string | undefined = modelRec.earningsType || modelRec.earnings_type;\n    const cutLogic: any = modelRec.cutLogic || modelRec.cut_logic || {};\n    const safeNum = (v: any, d = 0) => {\n      const n = Number(v);\n      return Number.isFinite(n) ? n : d;\n    };\n    try {\n      if (earningsType === 'Type 1') {\n        const threshold = safeNum(cutLogic.threshold, 0);\n        const percentage1 = safeNum(cutLogic.percentage1, 0);\n        const fixedAmount = safeNum(cutLogic.fixedAmount, 0);\n        if (percentage1 > 0 || fixedAmount > 0) {\n          return Math.round(netSales >= threshold ? netSales * (percentage1 / 100) : fixedAmount);\n        }\n        // Fallback if rules incomplete\n        return Math.round(netSales * 0.2);\n      }\n      const percentage2 = safeNum(cutLogic.percentage2 ?? cutLogic.percentage, 20);\n      return Math.round(netSales * (percentage2 / 100));\n    } catch {\n      // Final fallback\n      return Math.round(netSales * 0.2);\n    }\n  };\n\n  const handleModelNetSalesChange = async (modelId: string, value: number) => {\n    // Do not auto-calc here; backend will compute on Generate\n    setModelInsights(prev => prev.map(model => \n      model.id === modelId \n        ? { ...model, netSales: Math.max(0, Number(value)) }\n        : model\n    ));\n  };\n\n  const handleRefNetSalesChange = (modelId: string, index: number, value: number) => {\n    // This function is no longer needed since we only show regular models\n    // Reference models are filtered out, so this won't be called\n    console.log('handleRefNetSalesChange called but not needed for regular models only');\n  };\n\n  const handleModelInvoiceValueChange = async (modelId: string, value: number) => {\n    // Local-only; persist on Generate\n    setModelInsights(prev => prev.map(model => model.id === modelId ? { ...model, invoiceValue: value } : model));\n  };\n\n  const handleInvoiceStatusChange = async (modelId: string, newStatus: 'Paid' | 'Unpaid') => {\n    // Local-only; persist on Generate\n    setModelInsights(prev => prev.map(model => model.id === modelId ? { ...model, invoiceStatus: newStatus } : model));\n  };\n\n  const generatePersistInvoices = async () => {\n    try {\n      setIsGenerating(true);\n      const { period, week } = parseWeekPeriod(tablePeriod);\n      \n      // Calculate invoice amounts for all models without saving to database\n      const calculatedInvoices: any[] = [];\n      for (const row of modelInsights) {\n        if (Number.isFinite(row.netSales) && row.netSales > 0) {\n          try {\n            // Prepare invoice data\n            const invoiceData: any = {\n              model_id: row.id,\n              net_amount: Math.max(0, Number(row.netSales))\n            };\n            \n            // Reference models are filtered out, so no need to handle reference_children\n            \n            const response = await apiService.calculateInvoice(invoiceData);\n            \n            if (response.status === 'Success' && response.data) {\n              calculatedInvoices.push({\n                model_id: row.id,\n                net_amount: response.data.net_amount,\n                calculated_invoice_amount: response.data.calculated_invoice_amount\n              });\n            }\n          } catch (error) {\n            console.error(`Error calculating invoice for model ${row.id}:`, error);\n          }\n        }\n      }\n      \n      // Update the modelInsights state with calculated values\n      setModelInsights(prev => prev.map(model => {\n        const calculated = calculatedInvoices.find(inv => inv.model_id === model.id);\n        if (calculated) {\n          return {\n            ...model,\n            invoiceValue: calculated.calculated_invoice_amount\n          };\n        }\n        return model;\n      }));\n      \n      const totalCalculated = calculatedInvoices.reduce((sum, inv) => sum + inv.calculated_invoice_amount, 0);\n      \n      toast({ \n        title: 'Generated', \n        description: `Calculated ${calculatedInvoices.length} invoices. Total: $${totalCalculated.toLocaleString()}` \n      });\n      \n      // Note: The calculated values are now in the UI but not saved to database\n      // User needs to click Save to persist them\n      \n    } catch (e) {\n      console.error('Generate failed:', e);\n      toast({ title: 'Error', description: 'Generate failed. Try again.', variant: 'destructive' });\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  const saveAllData = async () => {\n    try {\n      setIsSaving(true);\n      \n      // First generate invoices and calculate salaries\n      await generatePersistInvoices();\n      \n      // Then save all period data using FRESH values from backend\n      const { period, week } = parseWeekPeriod(tablePeriod);\n\n      // Fetch latest agency insights snapshot for this scope\n      const freshAgency = await apiService.getAgencyInsights(period, year, week);\n      const agencyPayload = freshAgency?.status === 'Success' && freshAgency.data\n        ? freshAgency.data\n        : agencyInsights;\n      if (agencyPayload) {\n        await apiService.saveAgencyInsights({\n          period,\n          year,\n          week,\n          revenue: agencyPayload.revenue || 0,\n          real_revenue: agencyPayload.real_revenue || 0,\n          cost: agencyPayload.cost || 0,\n          profit: agencyPayload.profit || 0,\n          real_profit: agencyPayload.real_profit || 0,\n        });\n      }\n\n      // Fetch latest invoices for this scope\n      const invRes = await apiService.listInvoices({ period, year, ...(week && { week }) });\n      const invList = (invRes.status === 'Success' && invRes.data) ? invRes.data : [];\n      const invoiceByModel: Record<string, any> = {};\n      for (const inv of invList) {\n        invoiceByModel[inv.model_id] = inv;\n      }\n\n      // Save invoice data and model insights using calculated values from UI state\n      for (const model of modelInsights) {\n        // First save invoice data to invoices table\n        const existing = invList.find((inv: any) => inv.model_id === model.id);\n        const invoicePayload: any = {\n          net_amount: model.netSales || 0,\n          invoice_amount: model.invoiceValue || 0,\n          status: model.invoiceStatus || 'Unpaid',\n        };\n        \n        // Reference models are filtered out, so no need to handle reference_children\n        \n        if (existing) {\n          await apiService.updateInvoice(existing.invoice_id, invoicePayload, false); // Don't auto-calculate\n        } else if ((invoicePayload.net_amount > 0 || invoicePayload.invoice_amount > 0 || invoicePayload.status === 'Paid')) {\n          await apiService.createInvoice({ \n            model_id: model.id, \n            period, \n            year, \n            ...(week && { week }), \n            ...invoicePayload \n          });\n        }\n        \n        // Then save model insights data\n        await apiService.saveModelInsights({\n          model_id: model.id,\n          period,\n          year,\n          week,\n          net_sales: model.netSales || 0,\n          invoice_value: model.invoiceValue || 0,\n          invoice_status: model.invoiceStatus || 'Unpaid',\n          revenue: model.invoiceValue || 0,\n          profit: (model.invoiceValue || 0) - (model.netSales || 0),\n        });\n      }\n      \n      toast({ title: 'Saved', description: 'All data saved successfully for the selected period.' });\n    } catch (e) {\n      console.error('Save failed:', e);\n      toast({ title: 'Error', description: 'Save failed. Please try again.', variant: 'destructive' });\n    } finally {\n      // Refresh UI with latest values\n      await loadInvoices();\n      await loadInsightsData();\n      setIsSaving(false);\n    }\n  };\n\n  const getPerformanceColor = (performance: string) => {\n    switch (performance) {\n      case 'High': return 'bg-green-100 text-green-800';\n      case 'Medium': return 'bg-yellow-100 text-yellow-800';\n      case 'Low': return 'bg-red-100 text-red-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold\">Insights & Statistics</h1>\n          <p className=\"text-muted-foreground\">Financial overview and performance analytics</p>\n        </div>\n      </div>\n\n      {/* Financial Overview Cards */}\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Revenue</CardTitle>\n            <TrendingUp className=\"h-4 w-4 text-green-600\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">${totalRevenue.toLocaleString()}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Real: ${totalRealRevenue.toLocaleString()}\n            </p>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Costs</CardTitle>\n            <TrendingDown className=\"h-4 w-4 text-red-600\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">${totalCost.toLocaleString()}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Real: ${totalRealCost.toLocaleString()}\n            </p>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">\n              Total {totalProfit >= 0 ? 'Profit' : 'Loss'}\n            </CardTitle>\n            <DollarSign className=\"h-4 w-4 text-blue-600\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">${totalProfit.toLocaleString()}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Real: ${totalRealProfit.toLocaleString()}\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n      \n      {/* Enhanced Histogram with Proper Gaps */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-2 sm:space-y-0\">\n            <div>\n              <CardTitle>Financial Overview</CardTitle>\n              <p className=\"text-sm text-muted-foreground\">\n                Revenue, Cost, Profit, Real Revenue, and Real Profit breakdown\n                {agencyInsights?.metadata?.scope_type === 'month' && (\n                  <span className=\"ml-2 text-blue-600 font-medium\">\n                    • Month Scope: {agencyInsights.metadata.month}\n                  </span>\n                )}\n              </p>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Select value={histogramPeriod} onValueChange={setHistogramPeriod}>\n                <SelectTrigger className=\"w-48\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  {availablePeriods.map((period) => (\n                    <SelectItem key={period} value={period}>\n                      {period}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n              {/* Recompute removed: Generate handles cost computation and persistence */}\n            </div>\n          </div>\n        </CardHeader>\n        <CardContent>\n          <FinancialHistogram \n            data={histogramData.map(d => ({\n              name: d.period,\n              revenue: d.revenue,\n              cost: d.cost,\n              profit: d.profit,\n              realRevenue: d.realRevenue,\n              realProfit: d.realProfit,\n            }))}\n            loading={loading}\n            height={400}\n            period={histogramPeriod}\n          />\n        </CardContent>\n      </Card>\n\n      {/* Month-Specific KPIs */}\n      {!loading && monthKPIs && monthKPIs.period_breakdown && monthKPIs.growth_metrics && (\n        <Card>\n          <CardHeader>\n            <CardTitle>Month Breakdown - {monthKPIs.month} {monthKPIs.year}</CardTitle>\n            <p className=\"text-sm text-muted-foreground\">\n              Period-by-period breakdown and growth metrics\n            </p>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid gap-6 md:grid-cols-2\">\n              {/* Period Breakdown */}\n              <div>\n                <h4 className=\"font-medium mb-3\">Period Breakdown</h4>\n                <div className=\"space-y-3\">\n                  <div className=\"flex justify-between items-center p-3 bg-gray-50 rounded-lg\">\n                    <span className=\"font-medium\">Period 1 ({monthKPIs?.period_breakdown?.period_1?.revenue > 0 ? 'Active' : 'No Data'})</span>\n                    <div className=\"text-right\">\n                      <div className=\"text-sm text-muted-foreground\">Revenue: ${monthKPIs?.period_breakdown?.period_1?.revenue?.toLocaleString() || '0'}</div>\n                      <div className=\"text-sm text-muted-foreground\">Profit: ${monthKPIs?.period_breakdown?.period_1?.profit?.toLocaleString() || '0'}</div>\n                    </div>\n                  </div>\n                  <div className=\"flex justify-between items-center p-3 bg-gray-50 rounded-lg\">\n                    <span className=\"font-medium\">Period 2 ({monthKPIs?.period_breakdown?.period_2?.revenue > 0 ? 'Active' : 'No Data'})</span>\n                    <div className=\"text-right\">\n                      <div className=\"text-sm text-muted-foreground\">Revenue: ${monthKPIs?.period_breakdown?.period_2?.revenue?.toLocaleString() || '0'}</div>\n                      <div className=\"text-sm text-muted-foreground\">Profit: ${monthKPIs?.period_breakdown?.period_2?.profit?.toLocaleString() || '0'}</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              {/* Growth Metrics */}\n              <div>\n                <h4 className=\"font-medium mb-3\">Growth Metrics (Period 2 vs Period 1)</h4>\n                <div className=\"space-y-3\">\n                  <div className=\"flex justify-between items-center p-3 bg-gray-50 rounded-lg\">\n                    <span className=\"font-medium\">Revenue Growth</span>\n                    <div className=\"text-right\">\n                      <div className={`text-sm font-medium ${(monthKPIs?.growth_metrics?.revenue_growth_pct || 0) >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                        {(monthKPIs?.growth_metrics?.revenue_growth_pct || 0) >= 0 ? '+' : ''}{monthKPIs?.growth_metrics?.revenue_growth_pct || 0}%\n                      </div>\n                      <div className=\"text-xs text-muted-foreground\">\n                        ${(monthKPIs?.growth_metrics?.revenue_growth_abs || 0) >= 0 ? '+' : ''}{(monthKPIs?.growth_metrics?.revenue_growth_abs || 0).toLocaleString()}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex justify-between items-center p-3 bg-gray-50 rounded-lg\">\n                    <span className=\"font-medium\">Profit Growth</span>\n                    <div className=\"text-right\">\n                      <div className={`text-sm font-medium ${(monthKPIs?.growth_metrics?.profit_growth_pct || 0) >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                        {(monthKPIs?.growth_metrics?.profit_growth_pct || 0) >= 0 ? '+' : ''}{monthKPIs?.growth_metrics?.profit_growth_pct || 0}%\n                      </div>\n                      <div className=\"text-xs text-muted-foreground\">\n                        ${(monthKPIs?.growth_metrics?.profit_growth_abs || 0) >= 0 ? '+' : ''}{(monthKPIs?.growth_metrics?.profit_growth_abs || 0).toLocaleString()}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* No Month KPIs Data Message */}\n      {!loading && histogramPeriod && !histogramPeriod.includes('Week') && (!monthKPIs || !monthKPIs.period_breakdown || !monthKPIs.growth_metrics) && (\n        <Card>\n          <CardContent className=\"py-8\">\n            <div className=\"text-center text-muted-foreground\">\n              <p>No month-specific data available for {histogramPeriod}.</p>\n              <p className=\"text-sm\">Try selecting a different period or check if data exists for this month.</p>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Enhanced Financial Breakdown Table - Model-based */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-2 sm:space-y-0\">\n            <div>\n              <CardTitle>Financial Breakdown</CardTitle>\n              <p className=\"text-sm text-muted-foreground\">\n                Model performance breakdown for {tablePeriod}\n              </p>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Select value={tablePeriod} onValueChange={setTablePeriod}>\n                <SelectTrigger className=\"w-48\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  {weekPeriods.map((period) => (\n                    <SelectItem key={period} value={period}>\n                      {period}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n              <Button onClick={generatePersistInvoices} disabled={isGenerating} variant=\"outline\" type=\"button\">\n                {isGenerating ? 'Generating…' : 'Generate'}\n              </Button>\n              <Button onClick={saveAllData} disabled={isSaving || isGenerating} type=\"button\">\n                {isSaving ? 'Saving…' : 'Save All Data'}\n              </Button>\n            </div>\n          </div>\n        </CardHeader>\n        <CardContent>\n          {loading ? (\n            <div className=\"flex items-center justify-center py-8\">\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-primary\"></div>\n                <span>Loading model data...</span>\n              </div>\n            </div>\n          ) : (\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead className=\"w-[220px]\">Model Name</TableHead>\n                  <TableHead className=\"w-[160px]\">Manager Name</TableHead>\n                  <TableHead className=\"w-[190px] text-center\">Selected Period</TableHead>\n                  <TableHead className=\"w-[320px] text-center\">Net</TableHead>\n                  <TableHead className=\"w-[130px] text-center\">Invoice</TableHead>\n                  <TableHead className=\"w-[120px] text-center\">Status</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {modelInsights.length === 0 ? (\n                  <TableRow>\n                    <TableCell colSpan={6} className=\"text-center py-8\">\n                      <div className=\"text-muted-foreground\">\n                        No model data available for the selected period\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ) : (\n                  modelInsights.map((model) => (\n                    <TableRow key={model.id}>\n                      <TableCell className=\"font-medium align-middle\">\n                        <Link \n                          href={`/dashboard/models/${model.id}/insights`}\n                          className=\"text-blue-600 hover:text-blue-800 hover:underline\"\n                        >\n                          {model.name}\n                        </Link>\n                      </TableCell>\n                      <TableCell className=\"align-middle\">{model.managerName}</TableCell>\n                      <TableCell className=\"text-center align-middle\">{tablePeriod}</TableCell>\n                      <TableCell className=\"align-middle\">\n                        <div className=\"w-[320px]\">\n                          <div className=\"grid grid-cols-[180px_1fr] items-center gap-2 w-full\">\n                            <span className=\"text-xs text-muted-foreground w-[180px]\">&nbsp;</span>\n                            <NumberInput\n                              value={Math.round(model.netSales)}\n                              onChange={(e) => handleModelNetSalesChange(model.id, parseFloat(e.target.value) || 0)}\n                              className=\"w-24 text-center justify-self-end\"\n                              placeholder=\"Manual input\"\n                            />\n                          </div>\n                        </div>\n                      </TableCell>\n                      <TableCell className=\"text-center align-middle\">\n                        <NumberInput\n                          value={Math.round(model.invoiceValue)}\n                          onChange={(e) => handleModelInvoiceValueChange(model.id, parseFloat(e.target.value) || 0)}\n                          className=\"w-24 text-center mx-auto\"\n                          placeholder=\"Auto-calculated\"\n                        />\n                      </TableCell>\n                      <TableCell className=\"text-center align-middle\">\n                        <Select \n                          value={model.invoiceStatus}\n                          onValueChange={(value: 'Paid' | 'Unpaid') => \n                            handleInvoiceStatusChange(model.id, value)\n                          }\n                        >\n                          <SelectTrigger className=\"w-24 mx-auto\">\n                            <SelectValue />\n                          </SelectTrigger>\n                          <SelectContent>\n                            <SelectItem value=\"Paid\">Paid</SelectItem>\n                            <SelectItem value=\"Unpaid\">Unpaid</SelectItem>\n                          </SelectContent>\n                        </Select>\n                      </TableCell>\n                    </TableRow>\n                  ))\n                )}\n              </TableBody>\n            </Table>\n          )}\n          \n          {/* Table Notes */}\n          <div className=\"mt-4 p-4 bg-gray-50 rounded-lg\">\n            <h4 className=\"font-medium text-sm mb-2\">Table Notes:</h4>\n            <ul className=\"text-xs text-muted-foreground space-y-1\">\n              <li>• <strong>Net:</strong> Manual input — amount earned on this model's account for the selected period</li>\n              <li>• <strong>Invoice:</strong> Auto-calculated (based on model's rule) — editable if admin wants to adjust</li>\n              <li>• <strong>Status:</strong> Dropdown: Paid / Unpaid — affects Real Revenue/Profit in histogram</li>\n              <li>• All fields are editable inline</li>\n              <li>• Changing \"Status\" to \"Paid\" triggers update to real revenue and real profit</li>\n            </ul>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}    \n\n    \n\n"],"names":[],"mappings":"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","debugId":null}}]
}