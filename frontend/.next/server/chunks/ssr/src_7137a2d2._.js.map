{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\r\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Select = SelectPrimitive.Root\r\n\r\nconst SelectGroup = SelectPrimitive.Group\r\n\r\nconst SelectValue = SelectPrimitive.Value\r\n\r\nconst SelectTrigger = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <SelectPrimitive.Icon asChild>\r\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\r\n    </SelectPrimitive.Icon>\r\n  </SelectPrimitive.Trigger>\r\n))\r\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\r\n\r\nconst SelectScrollUpButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollUpButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronUp className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollUpButton>\r\n))\r\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\r\n\r\nconst SelectScrollDownButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollDownButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronDown className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollDownButton>\r\n))\r\nSelectScrollDownButton.displayName =\r\n  SelectPrimitive.ScrollDownButton.displayName\r\n\r\nconst SelectContent = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\r\n>(({ className, children, position = \"popper\", ...props }, ref) => (\r\n  <SelectPrimitive.Portal>\r\n    <SelectPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        position === \"popper\" &&\r\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\r\n        className\r\n      )}\r\n      position={position}\r\n      {...props}\r\n    >\r\n      <SelectScrollUpButton />\r\n      <SelectPrimitive.Viewport\r\n        className={cn(\r\n          \"p-1\",\r\n          position === \"popper\" &&\r\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\r\n        )}\r\n      >\r\n        {children}\r\n      </SelectPrimitive.Viewport>\r\n      <SelectScrollDownButton />\r\n    </SelectPrimitive.Content>\r\n  </SelectPrimitive.Portal>\r\n))\r\nSelectContent.displayName = SelectPrimitive.Content.displayName\r\n\r\nconst SelectLabel = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectLabel.displayName = SelectPrimitive.Label.displayName\r\n\r\nconst SelectItem = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <SelectPrimitive.ItemIndicator>\r\n        <Check className=\"h-4 w-4\" />\r\n      </SelectPrimitive.ItemIndicator>\r\n    </span>\r\n\r\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n  </SelectPrimitive.Item>\r\n))\r\nSelectItem.displayName = SelectPrimitive.Item.displayName\r\n\r\nconst SelectSeparator = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\r\n\r\nexport {\r\n  Select,\r\n  SelectGroup,\r\n  SelectValue,\r\n  SelectTrigger,\r\n  SelectContent,\r\n  SelectLabel,\r\n  SelectItem,\r\n  SelectSeparator,\r\n  SelectScrollUpButton,\r\n  SelectScrollDownButton,\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 280, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/app/dashboard/models/%5BmodelId%5D/insights/page.tsx"],"sourcesContent":["\n'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'next/navigation';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Input } from '@/components/ui/input';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Badge } from '@/components/ui/badge';\nimport { ArrowLeft, TrendingUp, TrendingDown, DollarSign, Users, Activity } from 'lucide-react';\nimport Link from 'next/link';\nimport { useToast } from '@/hooks/use-toast';\nimport { apiService } from '@/lib/api';\nimport { InsightsCalculator } from '@/lib/insights-calculations';\n\ninterface ModelInsightsData {\n  revenue: number;\n  real_revenue: number;\n  cost: number;\n  profit: number;\n  real_profit: number;\n  metadata?: {\n    scope_type: string;\n    month?: string;\n    period?: string;\n    periods_included?: string[];\n  };\n}\n\ninterface ModelData {\n  model_id: string;\n  model_name: string;\n  manager_name?: string;\n  client_agency_name?: string;\n  earnings_type?: string;\n  cut_logic?: any;\n}\n\ninterface CostBreakdown {\n  chatter_cost: number;\n  tl_cost: number;\n  manager_cost: number;\n  assistant_cost: number;\n  total_cost: number;\n}\n\nexport default function ModelInsightsPage() {\n  const params = useParams();\n  const modelId = params.modelId as string;\n  const { toast } = useToast();\n  \n  const [selectedPeriod, setSelectedPeriod] = useState('January 1');\n  const [modelData, setModelData] = useState<ModelData | null>(null);\n  const [insightsData, setInsightsData] = useState<ModelInsightsData | null>(null);\n  const [costBreakdown, setCostBreakdown] = useState<CostBreakdown | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [netAmount, setNetAmount] = useState(0);\n  const [invoiceValue, setInvoiceValue] = useState(0);\n  const [invoiceStatus, setInvoiceStatus] = useState<'Paid' | 'Unpaid'>('Unpaid');\n  const [year] = useState<number>(new Date().getFullYear());\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n\n  const parseWeekPeriod = (label: string): { period: string; week?: number } => {\n    if (label.includes(' - Week ')) {\n      const [p, wk] = label.split(' - Week ');\n      const weekNum = parseInt(wk, 10);\n      return { period: p, week: isNaN(weekNum) ? undefined : weekNum };\n    }\n    return { period: label };\n  };\n\n  // Available periods for selection\n  const availablePeriods = [\n    'January', 'January 1', 'January 2',\n    'January 1 - Week 1', 'January 1 - Week 2',\n    'January 2 - Week 1', 'January 2 - Week 2',\n    'July', 'July 1', 'July 2',\n    'August', 'August 1', 'August 2'\n  ];\n\n  useEffect(() => {\n    loadModelData();\n    loadInsightsData();\n  }, [modelId, selectedPeriod]);\n\n  const loadModelData = async () => {\n    try {\n      const response = await apiService.getModelDetails(modelId);\n      if (response.status === 'Success' && response.data) {\n        setModelData(response.data);\n      }\n    } catch (error) {\n      console.error('Error loading model data:', error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to load model data. Please try again.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  const loadInsightsData = async () => {\n    try {\n      setLoading(true);\n      \n      // Load model-specific insights\n      const { period, week } = parseWeekPeriod(selectedPeriod);\n      const insightsResponse = await apiService.getModelInsights(modelId, period, year, week);\n      if (insightsResponse.status === 'Success' && insightsResponse.data) {\n        setInsightsData(insightsResponse.data);\n      }\n\n      // Load latest invoice for this model & scope to populate inputs\n      const invRes = await apiService.listInvoices({ model_id: modelId, period, year, ...(week && { week }) });\n      if (invRes.status === 'Success' && Array.isArray(invRes.data)) {\n        const inv = invRes.data.find((i: any) => i.model_id === modelId && i.period === period && i.year === year && ((i.week || null) === (week || null)));\n        if (inv) {\n          setNetAmount(Number(inv.net_amount || 0));\n          setInvoiceValue(Number(inv.invoice_amount || 0));\n          setInvoiceStatus((inv.status === 'Paid') ? 'Paid' : 'Unpaid');\n        } else {\n          setNetAmount(0);\n          setInvoiceValue(0);\n          setInvoiceStatus('Unpaid');\n        }\n      }\n\n      // Load real cost breakdown from backend\n      const costRes = await apiService.getModelCostBreakdown(modelId, period, year, week);\n      if (costRes.status === 'Success' && costRes.data) {\n        setCostBreakdown({\n          chatter_cost: costRes.data.chatter_cost,\n          tl_cost: costRes.data.tl_cost,\n          manager_cost: costRes.data.manager_cost,\n          assistant_cost: costRes.data.assistant_cost,\n          total_cost: costRes.data.total_cost,\n        });\n      }\n\n    } catch (error) {\n      console.error('Error loading insights data:', error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to load insights data. Please try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleNetAmountChange = async (value: number) => {\n    // Do not auto-calc on client; backend computes on Generate\n    setNetAmount(value);\n    // Defer persistence to Generate\n  };\n\n  const generatePersistModel = async () => {\n    try {\n      setIsGenerating(true);\n      const { period, week } = parseWeekPeriod(selectedPeriod);\n      const list = await apiService.listInvoices({ model_id: modelId, period, year, ...(week && { week }) });\n      const existing = (list.data || []).find((i: any) => i.model_id === modelId && i.period === period && i.year === year && (i.week || null) === (week || null));\n      const payload: any = {\n        net_amount: Math.max(0, Number(netAmount)),\n        status: invoiceStatus === 'Paid' ? 'Paid' : 'Unpaid',\n      };\n      if (existing) {\n        await apiService.updateInvoice(existing.invoice_id, payload);\n      } else if (payload.net_amount > 0 || payload.status === 'Paid') {\n        await apiService.createInvoice({ model_id: modelId, period, year, ...(week && { week }), ...payload });\n      }\n      \n      // Recompute staff costs\n      try {\n        const salaryResult = await apiService.recomputeStaffCosts(period, year, week);\n        if (salaryResult.status !== 'Success') {\n          console.warn('Salary recalculation failed:', salaryResult.message);\n        }\n      } catch (salaryError) {\n        console.error('Error recalculating salaries:', salaryError);\n      }\n      \n      // Refresh values after backend computation\n      await loadInsightsData();\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  const saveModelData = async () => {\n    try {\n      setIsSaving(true);\n      \n      // First generate invoice and calculate salaries\n      await generatePersistModel();\n      \n      // Then save model insights data using latest invoice values\n      const { period, week } = parseWeekPeriod(selectedPeriod);\n      const list = await apiService.listInvoices({ model_id: modelId, period, year, ...(week && { week }) });\n      const inv = (list.data || []).find((i: any) => i.model_id === modelId && i.period === period && i.year === year && (i.week || null) === (week || null));\n      const latestNet = Number(inv?.net_amount || netAmount || 0);\n      const latestInv = Number(inv?.invoice_amount || invoiceValue || 0);\n      const latestStatus = (inv?.status === 'Paid') ? 'Paid' : invoiceStatus;\n\n      await apiService.saveModelInsights({\n        model_id: modelId,\n        period,\n        year,\n        week,\n        net_sales: latestNet,\n        invoice_value: latestInv,\n        invoice_status: latestStatus,\n        revenue: latestInv,\n        profit: latestInv - latestNet\n      });\n      \n      toast({ title: 'Saved', description: 'Model data saved successfully for the selected period.' });\n    } catch (e) {\n      console.error('Save failed:', e);\n      toast({ title: 'Error', description: 'Save failed. Please try again.', variant: 'destructive' });\n    } finally {\n      // Reload latest values\n      await loadInsightsData();\n      setIsSaving(false);\n    }\n  };\n\n  // Calculate dynamic Y-axis scaling\n  const getYAxisMax = () => {\n    if (!insightsData) return 4000;\n    \n    const maxValue = Math.max(\n      insightsData.revenue,\n      insightsData.cost,\n      insightsData.profit,\n      insightsData.real_revenue,\n      insightsData.real_profit\n    );\n    \n    // Dynamic scaling based on period type\n    let gridStep = 1000; // Default 1K\n    if (selectedPeriod.includes('Week')) {\n      gridStep = 1000; // 1K per grid line for weekly\n    } else if (selectedPeriod.includes('July 1') || selectedPeriod.includes('July 2') || \n               selectedPeriod.includes('August 1') || selectedPeriod.includes('August 2')) {\n      gridStep = 2000; // 2K per grid line for half-month\n    } else if (selectedPeriod === 'July' || selectedPeriod === 'August') {\n      gridStep = 4000; // 4K per grid line for full month\n    }\n    \n    return Math.ceil(maxValue / gridStep) * gridStep;\n  };\n\n  const yAxisMax = getYAxisMax();\n  const maxHeight = 180;\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Page Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-4\">\n          <Link href=\"/dashboard/insights\">\n            <Button variant=\"outline\" size=\"sm\">\n              <ArrowLeft className=\"h-4 w-4 mr-2\" />\n              Back to Insights\n            </Button>\n          </Link>\n          <div>\n            <h1 className=\"text-3xl font-bold\">{modelData?.model_name || 'Model'} Stats</h1>\n            <p className=\"text-muted-foreground\">Model Performance Overview</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Overview Cards */}\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Revenue</CardTitle>\n            <TrendingUp className=\"h-4 w-4 text-green-600\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">${insightsData?.revenue?.toLocaleString() || '0'}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Real: ${insightsData?.real_revenue?.toLocaleString() || '0'}\n            </p>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Cost</CardTitle>\n            <TrendingDown className=\"h-4 w-4 text-red-600\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">${insightsData?.cost?.toLocaleString() || '0'}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Breakdown available below\n            </p>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Profit</CardTitle>\n            <DollarSign className=\"h-4 w-4 text-blue-600\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">${insightsData?.profit?.toLocaleString() || '0'}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Real: ${insightsData?.real_profit?.toLocaleString() || '0'}\n            </p>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Manager</CardTitle>\n            <Users className=\"h-4 w-4 text-purple-600\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-lg font-semibold\">{modelData?.manager_name || 'Unknown'}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              {modelData?.client_agency_name || 'No agency'}\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Date Range Selector */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-2 sm:space-y-0\">\n            <div>\n              <CardTitle>Date Range Selection</CardTitle>\n              <p className=\"text-sm text-muted-foreground\">\n                Select the period to view model performance\n              </p>\n            </div>\n            <Select value={selectedPeriod} onValueChange={setSelectedPeriod}>\n              <SelectTrigger className=\"w-48\">\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                {availablePeriods.map((period) => (\n                  <SelectItem key={period} value={period}>\n                    {period}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n        </CardHeader>\n      </Card>\n\n      {/* Histogram */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Financial Overview</CardTitle>\n          <p className=\"text-sm text-muted-foreground\">\n            Revenue, Cost, Profit, Real Revenue, and Real Profit breakdown for {selectedPeriod}\n          </p>\n        </CardHeader>\n        <CardContent>\n          {loading ? (\n            <div className=\"flex items-center justify-center py-8\">\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-primary\"></div>\n                <span>Loading financial data...</span>\n              </div>\n            </div>\n          ) : insightsData ? (\n            <div className=\"space-y-4\">\n              {/* Y-axis labels with dynamic scaling */}\n              <div className=\"flex justify-end pr-4\">\n                <div className=\"text-xs text-muted-foreground\">\n                  ${yAxisMax.toLocaleString()}\n                </div>\n              </div>\n              \n              <div className=\"flex items-end justify-center h-48 space-x-1\">\n                {/* Revenue */}\n                <div \n                  className=\"w-4 bg-green-600 rounded-t\"\n                  style={{ height: `${Math.max((insightsData.revenue / yAxisMax) * maxHeight, 10)}px` }}\n                  title={`Revenue: $${insightsData.revenue.toLocaleString()}`}\n                />\n                {/* Small gap */}\n                <div className=\"w-1\" />\n                {/* Cost */}\n                <div \n                  className=\"w-4 bg-red-600 rounded-t\"\n                  style={{ height: `${Math.max((insightsData.cost / yAxisMax) * maxHeight, 10)}px` }}\n                  title={`Cost: $${insightsData.cost.toLocaleString()}`}\n                />\n                {/* Small gap */}\n                <div className=\"w-1\" />\n                {/* Profit */}\n                <div \n                  className=\"w-4 bg-blue-600 rounded-t\"\n                  style={{ height: `${Math.max((insightsData.profit / yAxisMax) * maxHeight, 10)}px` }}\n                  title={`Profit: $${insightsData.profit.toLocaleString()}`}\n                />\n                \n                {/* Large gap */}\n                <div className=\"w-8\" />\n                \n                {/* Real Revenue */}\n                <div \n                  className=\"w-4 bg-green-300 rounded-t\"\n                  style={{ height: `${Math.max((insightsData.real_revenue / yAxisMax) * maxHeight, 10)}px` }}\n                  title={`Real Revenue: $${insightsData.real_revenue.toLocaleString()}`}\n                />\n                {/* Small gap */}\n                <div className=\"w-1\" />\n                {/* Real Profit */}\n                <div \n                  className=\"w-4 bg-blue-300 rounded-t\"\n                  style={{ height: `${Math.max((insightsData.real_profit / yAxisMax) * maxHeight, 10)}px` }}\n                  title={`Real Profit: $${insightsData.real_profit.toLocaleString()}`}\n                />\n              </div>\n              \n              {/* X-axis labels */}\n              <div className=\"flex justify-center space-x-8 mt-4\">\n                <div className=\"flex items-center space-x-1\">\n                  <div className=\"w-3 h-3 bg-green-600 rounded\"></div>\n                  <span className=\"text-xs text-muted-foreground\">Revenue</span>\n                </div>\n                <div className=\"flex items-center space-x-1\">\n                  <div className=\"w-3 h-3 bg-red-600 rounded\"></div>\n                  <span className=\"text-xs text-muted-foreground\">Cost</span>\n                </div>\n                <div className=\"flex items-center space-x-1\">\n                  <div className=\"w-3 h-3 bg-blue-600 rounded\"></div>\n                  <span className=\"text-xs text-muted-foreground\">Profit</span>\n                </div>\n                <div className=\"flex items-center space-x-1\">\n                  <div className=\"w-3 h-3 bg-green-300 rounded\"></div>\n                  <span className=\"text-xs text-muted-foreground\">Real Revenue</span>\n                </div>\n                <div className=\"flex items-center space-x-1\">\n                  <div className=\"w-3 h-3 bg-blue-300 rounded\"></div>\n                  <span className=\"text-xs text-muted-foreground\">Real Profit</span>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"flex items-center justify-center py-8\">\n              <div className=\"text-muted-foreground\">\n                No financial data available for the selected period\n              </div>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Cost Breakdown */}\n      {costBreakdown && (\n        <Card>\n          <CardHeader>\n            <CardTitle>Source of Cost</CardTitle>\n            <p className=\"text-sm text-muted-foreground\">\n              Detailed breakdown of costs for this model\n            </p>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n              <div className=\"p-4 border rounded-lg\">\n                <div className=\"text-sm font-medium text-muted-foreground\">Chatter Salaries</div>\n                <div className=\"text-2xl font-bold\">${costBreakdown.chatter_cost.toLocaleString()}</div>\n                <div className=\"text-xs text-muted-foreground\">\n                  Hourly + commissions\n                </div>\n              </div>\n              <div className=\"p-4 border rounded-lg\">\n                <div className=\"text-sm font-medium text-muted-foreground\">Team Leaders</div>\n                <div className=\"text-2xl font-bold\">${costBreakdown.tl_cost.toLocaleString()}</div>\n                <div className=\"text-xs text-muted-foreground\">\n                  Commission-based\n                </div>\n              </div>\n              <div className=\"p-4 border rounded-lg\">\n                <div className=\"text-sm font-medium text-muted-foreground\">Managers</div>\n                <div className=\"text-2xl font-bold\">${costBreakdown.manager_cost.toLocaleString()}</div>\n                <div className=\"text-xs text-muted-foreground\">\n                  Fixed + commission\n                </div>\n              </div>\n              <div className=\"p-4 border rounded-lg\">\n                <div className=\"text-sm font-medium text-muted-foreground\">Assistants</div>\n                <div className=\"text-2xl font-bold\">${costBreakdown.assistant_cost.toLocaleString()}</div>\n                <div className=\"text-xs text-muted-foreground\">\n                  Fixed salary\n                </div>\n              </div>\n            </div>\n            <div className=\"mt-4 p-4 bg-blue-50 rounded-lg\">\n              <div className=\"text-lg font-bold text-blue-900\">\n                Total Cost: ${costBreakdown.total_cost.toLocaleString()}\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Summary Section */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Summary for {selectedPeriod}</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid gap-4 md:grid-cols-2\">\n            <div className=\"space-y-4\">\n              <div className=\"flex justify-between items-center p-3 bg-gray-50 rounded-lg\">\n                <span className=\"font-medium\">Net Amount</span>\n                <div className=\"flex items-center space-x-2\">\n                  <Input\n                    type=\"number\"\n                    value={netAmount}\n                    onChange={(e) => handleNetAmountChange(parseFloat(e.target.value) || 0)}\n                    className=\"w-32 text-right\"\n                    placeholder=\"Manual input\"\n                  />\n                  <span className=\"text-sm text-muted-foreground\">(from admin)</span>\n                </div>\n              </div>\n              <div className=\"flex justify-between items-center p-3 bg-gray-50 rounded-lg\">\n                <span className=\"font-medium\">Invoice Value</span>\n                <div className=\"flex items-center space-x-2\">\n                  <Input\n                    type=\"number\"\n                    value={invoiceValue}\n                    onChange={(e) => setInvoiceValue(parseFloat(e.target.value) || 0)}\n                    className=\"w-32 text-right\"\n                    placeholder=\"Auto-calculated\"\n                  />\n                  <span className=\"text-sm text-muted-foreground\">(auto)</span>\n                </div>\n              </div>\n              <div className=\"flex justify-between items-center p-3 bg-gray-50 rounded-lg\">\n                <span className=\"font-medium\">Invoice Status</span>\n                <Select value={invoiceStatus} onValueChange={(v: 'Paid' | 'Unpaid') => setInvoiceStatus(v)}>\n                  <SelectTrigger className=\"w-32\">\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"Paid\">Paid</SelectItem>\n                    <SelectItem value=\"Unpaid\">Unpaid</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n              <div className=\"flex justify-end gap-2\">\n                <Button onClick={generatePersistModel} disabled={isGenerating} variant=\"outline\">\n                  {isGenerating ? 'Generating…' : 'Generate'}\n                </Button>\n                <Button onClick={saveModelData} disabled={isSaving || isGenerating}>\n                  {isSaving ? 'Saving…' : 'Save Data'}\n                </Button>\n              </div>\n            </div>\n            <div className=\"space-y-4\">\n              <div className=\"p-4 border rounded-lg\">\n                <h4 className=\"font-medium mb-2\">Model Rules</h4>\n                <div className=\"text-sm space-y-1\">\n                  <div>Earnings Type: {modelData?.earnings_type || 'Not set'}</div>\n                  <div>Cut Logic: {modelData?.cut_logic ? 'Configured' : 'Not configured'}</div>\n                </div>\n              </div>\n              <div className=\"p-4 border rounded-lg\">\n                <h4 className=\"font-medium mb-2\">Performance Metrics</h4>\n                <div className=\"text-sm space-y-1\">\n                  <div>Revenue: ${insightsData?.revenue?.toLocaleString() || '0'}</div>\n                  <div>Cost: ${insightsData?.cost?.toLocaleString() || '0'}</div>\n                  <div>Profit: ${insightsData?.profit?.toLocaleString() || '0'}</div>\n                  <div>Profit Margin: {insightsData?.revenue ? `${((insightsData.profit / insightsData.revenue) * 100).toFixed(1)}%` : '0%'}</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\n    \n\n    \n"],"names":[],"mappings":"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","debugId":null}}]
}