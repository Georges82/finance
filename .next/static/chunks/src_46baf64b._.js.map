{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\r\n        outline: \"text-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface BadgeProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof badgeVariants> {}\r\n\r\nfunction Badge({ className, variant, ...props }: BadgeProps) {\r\n  return (\r\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\r\n  )\r\n}\r\n\r\nexport { Badge, badgeVariants }\r\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Tabs = TabsPrimitive.Root\r\n\r\nconst TabsList = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.List>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.List\r\n    ref={ref}\r\n    className={cn(\r\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTabsList.displayName = TabsPrimitive.List.displayName\r\n\r\nconst TabsTrigger = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\r\n\r\nconst TabsContent = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.Content\r\n    ref={ref}\r\n    className={cn(\r\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTabsContent.displayName = TabsPrimitive.Content.displayName\r\n\r\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\r\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,mKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG,mKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst labelVariants = cva(\r\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n)\r\n\r\nconst Label = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\r\n    VariantProps<typeof labelVariants>\r\n>(({ className, ...props }, ref) => (\r\n  <LabelPrimitive.Root\r\n    ref={ref}\r\n    className={cn(labelVariants(), className)}\r\n    {...props}\r\n  />\r\n))\r\nLabel.displayName = LabelPrimitive.Root.displayName\r\n\r\nexport { Label }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 299, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport {\r\n  Controller,\r\n  FormProvider,\r\n  useFormContext,\r\n  type ControllerProps,\r\n  type FieldPath,\r\n  type FieldValues,\r\n} from \"react-hook-form\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Label } from \"@/components/ui/label\"\r\n\r\nconst Form = FormProvider\r\n\r\ntype FormFieldContextValue<\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\r\n> = {\r\n  name: TName\r\n}\r\n\r\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\r\n  {} as FormFieldContextValue\r\n)\r\n\r\nconst FormField = <\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\r\n>({\r\n  ...props\r\n}: ControllerProps<TFieldValues, TName>) => {\r\n  return (\r\n    <FormFieldContext.Provider value={{ name: props.name }}>\r\n      <Controller {...props} />\r\n    </FormFieldContext.Provider>\r\n  )\r\n}\r\n\r\nconst useFormField = () => {\r\n  const fieldContext = React.useContext(FormFieldContext)\r\n  const itemContext = React.useContext(FormItemContext)\r\n  const { getFieldState, formState } = useFormContext()\r\n\r\n  const fieldState = getFieldState(fieldContext.name, formState)\r\n\r\n  if (!fieldContext) {\r\n    throw new Error(\"useFormField should be used within <FormField>\")\r\n  }\r\n\r\n  const { id } = itemContext\r\n\r\n  return {\r\n    id,\r\n    name: fieldContext.name,\r\n    formItemId: `${id}-form-item`,\r\n    formDescriptionId: `${id}-form-item-description`,\r\n    formMessageId: `${id}-form-item-message`,\r\n    ...fieldState,\r\n  }\r\n}\r\n\r\ntype FormItemContextValue = {\r\n  id: string\r\n}\r\n\r\nconst FormItemContext = React.createContext<FormItemContextValue>(\r\n  {} as FormItemContextValue\r\n)\r\n\r\nconst FormItem = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => {\r\n  const id = React.useId()\r\n\r\n  return (\r\n    <FormItemContext.Provider value={{ id }}>\r\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\r\n    </FormItemContext.Provider>\r\n  )\r\n})\r\nFormItem.displayName = \"FormItem\"\r\n\r\nconst FormLabel = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\r\n>(({ className, ...props }, ref) => {\r\n  const { error, formItemId } = useFormField()\r\n\r\n  return (\r\n    <Label\r\n      ref={ref}\r\n      className={cn(error && \"text-destructive\", className)}\r\n      htmlFor={formItemId}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nFormLabel.displayName = \"FormLabel\"\r\n\r\nconst FormControl = React.forwardRef<\r\n  React.ElementRef<typeof Slot>,\r\n  React.ComponentPropsWithoutRef<typeof Slot>\r\n>(({ ...props }, ref) => {\r\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\r\n\r\n  return (\r\n    <Slot\r\n      ref={ref}\r\n      id={formItemId}\r\n      aria-describedby={\r\n        !error\r\n          ? `${formDescriptionId}`\r\n          : `${formDescriptionId} ${formMessageId}`\r\n      }\r\n      aria-invalid={!!error}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nFormControl.displayName = \"FormControl\"\r\n\r\nconst FormDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => {\r\n  const { formDescriptionId } = useFormField()\r\n\r\n  return (\r\n    <p\r\n      ref={ref}\r\n      id={formDescriptionId}\r\n      className={cn(\"text-sm text-muted-foreground\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nFormDescription.displayName = \"FormDescription\"\r\n\r\nconst FormMessage = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, children, ...props }, ref) => {\r\n  const { error, formMessageId } = useFormField()\r\n  const body = error ? String(error?.message ?? \"\") : children\r\n\r\n  if (!body) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <p\r\n      ref={ref}\r\n      id={formMessageId}\r\n      className={cn(\"text-sm font-medium text-destructive\", className)}\r\n      {...props}\r\n    >\r\n      {body}\r\n    </p>\r\n  )\r\n})\r\nFormMessage.displayName = \"FormMessage\"\r\n\r\nexport {\r\n  useFormField,\r\n  Form,\r\n  FormItem,\r\n  FormLabel,\r\n  FormControl,\r\n  FormDescription,\r\n  FormMessage,\r\n  FormField,\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 517, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\r\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Select = SelectPrimitive.Root\r\n\r\nconst SelectGroup = SelectPrimitive.Group\r\n\r\nconst SelectValue = SelectPrimitive.Value\r\n\r\nconst SelectTrigger = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <SelectPrimitive.Icon asChild>\r\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\r\n    </SelectPrimitive.Icon>\r\n  </SelectPrimitive.Trigger>\r\n))\r\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\r\n\r\nconst SelectScrollUpButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollUpButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronUp className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollUpButton>\r\n))\r\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\r\n\r\nconst SelectScrollDownButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollDownButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronDown className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollDownButton>\r\n))\r\nSelectScrollDownButton.displayName =\r\n  SelectPrimitive.ScrollDownButton.displayName\r\n\r\nconst SelectContent = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\r\n>(({ className, children, position = \"popper\", ...props }, ref) => (\r\n  <SelectPrimitive.Portal>\r\n    <SelectPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        position === \"popper\" &&\r\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\r\n        className\r\n      )}\r\n      position={position}\r\n      {...props}\r\n    >\r\n      <SelectScrollUpButton />\r\n      <SelectPrimitive.Viewport\r\n        className={cn(\r\n          \"p-1\",\r\n          position === \"popper\" &&\r\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\r\n        )}\r\n      >\r\n        {children}\r\n      </SelectPrimitive.Viewport>\r\n      <SelectScrollDownButton />\r\n    </SelectPrimitive.Content>\r\n  </SelectPrimitive.Portal>\r\n))\r\nSelectContent.displayName = SelectPrimitive.Content.displayName\r\n\r\nconst SelectLabel = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectLabel.displayName = SelectPrimitive.Label.displayName\r\n\r\nconst SelectItem = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <SelectPrimitive.ItemIndicator>\r\n        <Check className=\"h-4 w-4\" />\r\n      </SelectPrimitive.ItemIndicator>\r\n    </span>\r\n\r\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n  </SelectPrimitive.Item>\r\n))\r\nSelectItem.displayName = SelectPrimitive.Item.displayName\r\n\r\nconst SelectSeparator = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\r\n\r\nexport {\r\n  Select,\r\n  SelectGroup,\r\n  SelectValue,\r\n  SelectTrigger,\r\n  SelectContent,\r\n  SelectLabel,\r\n  SelectItem,\r\n  SelectSeparator,\r\n  SelectScrollUpButton,\r\n  SelectScrollDownButton,\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 732, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Separator = React.forwardRef<\r\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\r\n>(\r\n  (\r\n    { className, orientation = \"horizontal\", decorative = true, ...props },\r\n    ref\r\n  ) => (\r\n    <SeparatorPrimitive.Root\r\n      ref={ref}\r\n      decorative={decorative}\r\n      orientation={orientation}\r\n      className={cn(\r\n        \"shrink-0 bg-border\",\r\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n)\r\nSeparator.displayName = SeparatorPrimitive.Root.displayName\r\n\r\nexport { Separator }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI/B,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO,EACtE,oBAEA,6LAAC,wKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;;AAIf,UAAU,WAAW,GAAG,wKAAA,CAAA,OAAuB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 770, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/components/dashboard/managers/manager-form-sheet.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { Manager } from '@/lib/api';\nimport { Button } from '@/components/ui/button';\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from '@/components/ui/sheet';\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { Switch } from '@/components/ui/switch';\nimport { Separator } from '@/components/ui/separator';\n\nconst managerFormSchema = z.object({\n  name: z.string().min(2, 'Name must be at least 2 characters'),\n  role: z.enum(['Manager', 'Team Leader']),\n  telegramUsername: z.string().min(1, 'Telegram username is required'),\n  status: z.enum(['Active', 'Inactive']),\n  // Salary Rules\n  revenueThreshold: z.number().min(0, 'Revenue threshold must be positive'),\n  commissionRate: z.number().min(0, 'Commission rate must be positive'),\n  fixedSalary: z.number().min(0, 'Fixed salary must be positive'),\n}).refine((data) => {\n  return data.revenueThreshold > 0 && data.commissionRate > 0 && data.fixedSalary > 0;\n}, {\n  message: 'Please fill in all salary rule fields',\n  path: ['revenueThreshold'],\n});\n\ntype ManagerFormData = z.infer<typeof managerFormSchema>;\n\n// Using Manager interface from api.ts instead of local interface\n\ninterface ManagerFormSheetProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  manager?: Manager | null;\n  onSave: (data: ManagerFormData) => void;\n  type?: 'manager' | 'team_leader'; // Add type prop to differentiate\n}\n\nexport function ManagerFormSheet({\n  open,\n  onOpenChange,\n  manager,\n  onSave,\n  type = 'manager', // Default to manager\n}: ManagerFormSheetProps) {\n  const form = useForm<ManagerFormData>({\n    resolver: zodResolver(managerFormSchema),\n    defaultValues: {\n      name: '',\n      role: type === 'team_leader' ? 'Team Leader' : 'Manager',\n      telegramUsername: '',\n      status: 'Active',\n      revenueThreshold: 5000,\n      commissionRate: 8,\n      fixedSalary: 2000,\n    },\n  });\n\n  // Reset form when manager changes or form opens/closes\n  React.useEffect(() => {\n    if (open) {\n      form.reset({\n        name: manager?.name || '',\n        role: manager?.role || (type === 'team_leader' ? 'Team Leader' : 'Manager'),\n        telegramUsername: manager?.telegram_username || '',\n        status: manager?.status || 'Active',\n        revenueThreshold: manager?.revenue_threshold || 5000,\n        commissionRate: manager?.commission_rate || 8,\n        fixedSalary: manager?.fixed_salary || 2000,\n      });\n    }\n  }, [open, manager, form, type]);\n\n  const role = form.watch('role');\n\n  const onSubmit = (data: ManagerFormData) => {\n    onSave(data);\n  };\n\n  const handleOpenChange = (newOpen: boolean) => {\n    if (!newOpen) {\n      form.reset({\n        name: '',\n        role: type === 'team_leader' ? 'Team Leader' : 'Manager',\n        telegramUsername: '',\n        status: 'Active',\n        revenueThreshold: 5000,\n        commissionRate: 8,\n        fixedSalary: 2000,\n      });\n    }\n    onOpenChange(newOpen);\n  };\n\n  return (\n    <Sheet open={open} onOpenChange={handleOpenChange}>\n      <SheetContent className=\"w-[400px] sm:w-[540px] flex flex-col\">\n        <SheetHeader className=\"flex-shrink-0\">\n          <SheetTitle>\n            {manager \n              ? `Edit ${type === 'team_leader' ? 'Team Leader' : 'Manager'}`\n              : `Add ${type === 'team_leader' ? 'Team Leader' : 'Manager'}`\n            }\n          </SheetTitle>\n          <SheetDescription>\n            {manager \n              ? `Update ${type === 'team_leader' ? 'team leader' : 'manager'} information and salary rules.`\n              : `Add a new ${type === 'team_leader' ? 'team leader' : 'manager'} with salary configuration.`\n            }\n          </SheetDescription>\n        </SheetHeader>\n        <div className=\"flex-1 overflow-y-auto mt-6\">\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n              {/* Basic Information */}\n              <div className=\"space-y-4\">\n                <h3 className=\"text-lg font-medium\">Basic Information</h3>\n                \n                <FormField\n                  control={form.control}\n                  name=\"name\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Full Name</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"Enter full name\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                                 <FormField\n                   control={form.control}\n                   name=\"role\"\n                   render={({ field }) => (\n                     <FormItem>\n                       <FormLabel>Role</FormLabel>\n                       <Select onValueChange={field.onChange} defaultValue={field.value}>\n                         <FormControl>\n                           <SelectTrigger>\n                             <SelectValue placeholder=\"Select role\" />\n                           </SelectTrigger>\n                         </FormControl>\n                         <SelectContent>\n                           {type === 'team_leader' ? (\n                             <SelectItem value=\"Team Leader\">Team Leader</SelectItem>\n                           ) : (\n                             <SelectItem value=\"Manager\">Manager</SelectItem>\n                           )}\n                         </SelectContent>\n                       </Select>\n                       <FormDescription>\n                         {type === 'team_leader'\n                           ? 'Team leaders manage specific models and chatters'\n                           : 'Managers are auto-linked to all models'\n                         }\n                       </FormDescription>\n                       <FormMessage />\n                     </FormItem>\n                   )}\n                 />\n\n                 <FormField\n                   control={form.control}\n                   name=\"telegramUsername\"\n                   render={({ field }) => (\n                     <FormItem>\n                       <FormLabel>Telegram Username</FormLabel>\n                       <FormControl>\n                         <Input placeholder=\"@username\" {...field} />\n                       </FormControl>\n                       <FormMessage />\n                     </FormItem>\n                   )}\n                 />\n\n                 <FormField\n                   control={form.control}\n                   name=\"status\"\n                   render={({ field }) => (\n                     <FormItem>\n                       <FormLabel>Status</FormLabel>\n                       <Select onValueChange={field.onChange} defaultValue={field.value}>\n                         <FormControl>\n                           <SelectTrigger>\n                             <SelectValue placeholder=\"Select status\" />\n                           </SelectTrigger>\n                         </FormControl>\n                         <SelectContent>\n                           <SelectItem value=\"Active\">Active</SelectItem>\n                           <SelectItem value=\"Inactive\">Inactive</SelectItem>\n                         </SelectContent>\n                       </Select>\n                       <FormMessage />\n                     </FormItem>\n                   )}\n                 />\n              </div>\n\n              <Separator />\n\n                             {/* Salary Rules */}\n               <div className=\"space-y-4\">\n                 <h3 className=\"text-lg font-medium\">Salary Rules</h3>\n                 <div className=\"p-4 bg-muted/50 rounded-lg border\">\n                   <div className=\"flex items-center gap-2 mb-3\">\n                     <div className=\"w-3 h-3 bg-primary rounded-full\"></div>\n                     <span className=\"font-medium\">Team Leader / Manager (per model)</span>\n                   </div>\n                   \n                   <div className=\"space-y-4\">\n                     <div className=\"space-y-3\">\n                       <h4 className=\"font-medium text-sm\">Rule 1: If net revenue ≥ $____ → %____</h4>\n                       <div className=\"grid grid-cols-2 gap-3\">\n                         <FormField\n                           control={form.control}\n                           name=\"revenueThreshold\"\n                           render={({ field }) => (\n                             <FormItem>\n                               <FormLabel className=\"text-sm\">Revenue Threshold ($)</FormLabel>\n                               <FormControl>\n                                 <Input \n                                   type=\"number\" \n                                   placeholder=\"5000\"\n                                   {...field}\n                                   onChange={(e) => field.onChange(Number(e.target.value))}\n                                 />\n                               </FormControl>\n                               <FormMessage />\n                             </FormItem>\n                           )}\n                         />\n                         \n                         <FormField\n                           control={form.control}\n                           name=\"commissionRate\"\n                           render={({ field }) => (\n                             <FormItem>\n                               <FormLabel className=\"text-sm\">Commission Rate (%)</FormLabel>\n                               <FormControl>\n                                 <Input \n                                   type=\"number\" \n                                   placeholder=\"8\"\n                                   {...field}\n                                   onChange={(e) => field.onChange(Number(e.target.value))}\n                                 />\n                               </FormControl>\n                               <FormMessage />\n                             </FormItem>\n                           )}\n                         />\n                       </div>\n                     </div>\n                     \n                     <div className=\"space-y-3\">\n                       <h4 className=\"font-medium text-sm\">Rule 2: Else → $____ fixed</h4>\n                       <FormField\n                         control={form.control}\n                         name=\"fixedSalary\"\n                         render={({ field }) => (\n                           <FormItem>\n                             <FormLabel className=\"text-sm\">Fixed Salary ($)</FormLabel>\n                             <FormControl>\n                               <Input \n                                 type=\"number\" \n                                 placeholder=\"2000\"\n                                 {...field}\n                                 onChange={(e) => field.onChange(Number(e.target.value))}\n                               />\n                             </FormControl>\n                             <FormMessage />\n                           </FormItem>\n                         )}\n                       />\n                     </div>\n                     \n                     \n                   </div>\n                 </div>\n               </div>\n             </form>\n           </Form>\n         </div>\n         \n         {/* Fixed Footer with Buttons */}\n         <div className=\"flex-shrink-0 border-t pt-4 mt-6\">\n           <div className=\"flex justify-end space-x-2\">\n             <Button\n               type=\"button\"\n               variant=\"outline\"\n               onClick={() => handleOpenChange(false)}\n             >\n               Cancel\n             </Button>\n                                                       <Button \n                 type=\"button\"\n                 onClick={form.handleSubmit(onSubmit)}\n               >\n                 {manager ? 'Update Manager/Team Leader' : 'Add Manager/Team Leader'}\n               </Button>\n           </div>\n         </div>\n       </SheetContent>\n     </Sheet>\n   );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAEA;AACA;AAOA;AASA;AACA;AAQA;;;AAjCA;;;;;;;;;;;AAmCA,MAAM,oBAAoB,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,EAAE;IACjC,MAAM,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,GAAG;IACxB,MAAM,CAAA,GAAA,uIAAA,CAAA,OAAM,AAAD,EAAE;QAAC;QAAW;KAAc;IACvC,kBAAkB,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,GAAG;IACpC,QAAQ,CAAA,GAAA,uIAAA,CAAA,OAAM,AAAD,EAAE;QAAC;QAAU;KAAW;IACrC,eAAe;IACf,kBAAkB,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,GAAG;IACpC,gBAAgB,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,GAAG;IAClC,aAAa,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,GAAG;AACjC,GAAG,MAAM,CAAC,CAAC;IACT,OAAO,KAAK,gBAAgB,GAAG,KAAK,KAAK,cAAc,GAAG,KAAK,KAAK,WAAW,GAAG;AACpF,GAAG;IACD,SAAS;IACT,MAAM;QAAC;KAAmB;AAC5B;AAcO,SAAS,iBAAiB,EAC/B,IAAI,EACJ,YAAY,EACZ,OAAO,EACP,MAAM,EACN,OAAO,SAAS,EACM;;IACtB,MAAM,OAAO,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAmB;QACpC,UAAU,CAAA,GAAA,iKAAA,CAAA,cAAW,AAAD,EAAE;QACtB,eAAe;YACb,MAAM;YACN,MAAM,SAAS,gBAAgB,gBAAgB;YAC/C,kBAAkB;YAClB,QAAQ;YACR,kBAAkB;YAClB,gBAAgB;YAChB,aAAa;QACf;IACF;IAEA,uDAAuD;IACvD,6JAAA,CAAA,UAAK,CAAC,SAAS;sCAAC;YACd,IAAI,MAAM;gBACR,KAAK,KAAK,CAAC;oBACT,MAAM,SAAS,QAAQ;oBACvB,MAAM,SAAS,QAAQ,CAAC,SAAS,gBAAgB,gBAAgB,SAAS;oBAC1E,kBAAkB,SAAS,qBAAqB;oBAChD,QAAQ,SAAS,UAAU;oBAC3B,kBAAkB,SAAS,qBAAqB;oBAChD,gBAAgB,SAAS,mBAAmB;oBAC5C,aAAa,SAAS,gBAAgB;gBACxC;YACF;QACF;qCAAG;QAAC;QAAM;QAAS;QAAM;KAAK;IAE9B,MAAM,OAAO,KAAK,KAAK,CAAC;IAExB,MAAM,WAAW,CAAC;QAChB,OAAO;IACT;IAEA,MAAM,mBAAmB,CAAC;QACxB,IAAI,CAAC,SAAS;YACZ,KAAK,KAAK,CAAC;gBACT,MAAM;gBACN,MAAM,SAAS,gBAAgB,gBAAgB;gBAC/C,kBAAkB;gBAClB,QAAQ;gBACR,kBAAkB;gBAClB,gBAAgB;gBAChB,aAAa;YACf;QACF;QACA,aAAa;IACf;IAEA,qBACE,6LAAC,oIAAA,CAAA,QAAK;QAAC,MAAM;QAAM,cAAc;kBAC/B,cAAA,6LAAC,oIAAA,CAAA,eAAY;YAAC,WAAU;;8BACtB,6LAAC,oIAAA,CAAA,cAAW;oBAAC,WAAU;;sCACrB,6LAAC,oIAAA,CAAA,aAAU;sCACR,UACG,CAAC,KAAK,EAAE,SAAS,gBAAgB,gBAAgB,WAAW,GAC5D,CAAC,IAAI,EAAE,SAAS,gBAAgB,gBAAgB,WAAW;;;;;;sCAGjE,6LAAC,oIAAA,CAAA,mBAAgB;sCACd,UACG,CAAC,OAAO,EAAE,SAAS,gBAAgB,gBAAgB,UAAU,8BAA8B,CAAC,GAC5F,CAAC,UAAU,EAAE,SAAS,gBAAgB,gBAAgB,UAAU,2BAA2B,CAAC;;;;;;;;;;;;8BAIpG,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC,mIAAA,CAAA,OAAI;wBAAE,GAAG,IAAI;kCACZ,cAAA,6LAAC;4BAAK,UAAU,KAAK,YAAY,CAAC;4BAAW,WAAU;;8CAErD,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAG,WAAU;sDAAsB;;;;;;sDAEpC,6LAAC,mIAAA,CAAA,YAAS;4CACR,SAAS,KAAK,OAAO;4CACrB,MAAK;4CACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,6LAAC,mIAAA,CAAA,WAAQ;;sEACP,6LAAC,mIAAA,CAAA,YAAS;sEAAC;;;;;;sEACX,6LAAC,mIAAA,CAAA,cAAW;sEACV,cAAA,6LAAC,oIAAA,CAAA,QAAK;gEAAC,aAAY;gEAAmB,GAAG,KAAK;;;;;;;;;;;sEAEhD,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;sDAKD,6LAAC,mIAAA,CAAA,YAAS;4CACxB,SAAS,KAAK,OAAO;4CACrB,MAAK;4CACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,6LAAC,mIAAA,CAAA,WAAQ;;sEACP,6LAAC,mIAAA,CAAA,YAAS;sEAAC;;;;;;sEACX,6LAAC,qIAAA,CAAA,SAAM;4DAAC,eAAe,MAAM,QAAQ;4DAAE,cAAc,MAAM,KAAK;;8EAC9D,6LAAC,mIAAA,CAAA,cAAW;8EACV,cAAA,6LAAC,qIAAA,CAAA,gBAAa;kFACZ,cAAA,6LAAC,qIAAA,CAAA,cAAW;4EAAC,aAAY;;;;;;;;;;;;;;;;8EAG7B,6LAAC,qIAAA,CAAA,gBAAa;8EACX,SAAS,8BACR,6LAAC,qIAAA,CAAA,aAAU;wEAAC,OAAM;kFAAc;;;;;+FAEhC,6LAAC,qIAAA,CAAA,aAAU;wEAAC,OAAM;kFAAU;;;;;;;;;;;;;;;;;sEAIlC,6LAAC,mIAAA,CAAA,kBAAe;sEACb,SAAS,gBACN,qDACA;;;;;;sEAGN,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;sDAKlB,6LAAC,mIAAA,CAAA,YAAS;4CACR,SAAS,KAAK,OAAO;4CACrB,MAAK;4CACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,6LAAC,mIAAA,CAAA,WAAQ;;sEACP,6LAAC,mIAAA,CAAA,YAAS;sEAAC;;;;;;sEACX,6LAAC,mIAAA,CAAA,cAAW;sEACV,cAAA,6LAAC,oIAAA,CAAA,QAAK;gEAAC,aAAY;gEAAa,GAAG,KAAK;;;;;;;;;;;sEAE1C,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;sDAKlB,6LAAC,mIAAA,CAAA,YAAS;4CACR,SAAS,KAAK,OAAO;4CACrB,MAAK;4CACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,6LAAC,mIAAA,CAAA,WAAQ;;sEACP,6LAAC,mIAAA,CAAA,YAAS;sEAAC;;;;;;sEACX,6LAAC,qIAAA,CAAA,SAAM;4DAAC,eAAe,MAAM,QAAQ;4DAAE,cAAc,MAAM,KAAK;;8EAC9D,6LAAC,mIAAA,CAAA,cAAW;8EACV,cAAA,6LAAC,qIAAA,CAAA,gBAAa;kFACZ,cAAA,6LAAC,qIAAA,CAAA,cAAW;4EAAC,aAAY;;;;;;;;;;;;;;;;8EAG7B,6LAAC,qIAAA,CAAA,gBAAa;;sFACZ,6LAAC,qIAAA,CAAA,aAAU;4EAAC,OAAM;sFAAS;;;;;;sFAC3B,6LAAC,qIAAA,CAAA,aAAU;4EAAC,OAAM;sFAAW;;;;;;;;;;;;;;;;;;sEAGjC,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;;;;;;8CAMrB,6LAAC,wIAAA,CAAA,YAAS;;;;;8CAGT,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAG,WAAU;sDAAsB;;;;;;sDACpC,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAI,WAAU;;;;;;sEACf,6LAAC;4DAAK,WAAU;sEAAc;;;;;;;;;;;;8DAGhC,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAI,WAAU;;8EACb,6LAAC;oEAAG,WAAU;8EAAsB;;;;;;8EACpC,6LAAC;oEAAI,WAAU;;sFACb,6LAAC,mIAAA,CAAA,YAAS;4EACR,SAAS,KAAK,OAAO;4EACrB,MAAK;4EACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,6LAAC,mIAAA,CAAA,WAAQ;;sGACP,6LAAC,mIAAA,CAAA,YAAS;4FAAC,WAAU;sGAAU;;;;;;sGAC/B,6LAAC,mIAAA,CAAA,cAAW;sGACV,cAAA,6LAAC,oIAAA,CAAA,QAAK;gGACJ,MAAK;gGACL,aAAY;gGACX,GAAG,KAAK;gGACT,UAAU,CAAC,IAAM,MAAM,QAAQ,CAAC,OAAO,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;sGAGzD,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;sFAKlB,6LAAC,mIAAA,CAAA,YAAS;4EACR,SAAS,KAAK,OAAO;4EACrB,MAAK;4EACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,6LAAC,mIAAA,CAAA,WAAQ;;sGACP,6LAAC,mIAAA,CAAA,YAAS;4FAAC,WAAU;sGAAU;;;;;;sGAC/B,6LAAC,mIAAA,CAAA,cAAW;sGACV,cAAA,6LAAC,oIAAA,CAAA,QAAK;gGACJ,MAAK;gGACL,aAAY;gGACX,GAAG,KAAK;gGACT,UAAU,CAAC,IAAM,MAAM,QAAQ,CAAC,OAAO,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;sGAGzD,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;sEAOtB,6LAAC;4DAAI,WAAU;;8EACb,6LAAC;oEAAG,WAAU;8EAAsB;;;;;;8EACpC,6LAAC,mIAAA,CAAA,YAAS;oEACR,SAAS,KAAK,OAAO;oEACrB,MAAK;oEACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,6LAAC,mIAAA,CAAA,WAAQ;;8FACP,6LAAC,mIAAA,CAAA,YAAS;oFAAC,WAAU;8FAAU;;;;;;8FAC/B,6LAAC,mIAAA,CAAA,cAAW;8FACV,cAAA,6LAAC,oIAAA,CAAA,QAAK;wFACJ,MAAK;wFACL,aAAY;wFACX,GAAG,KAAK;wFACT,UAAU,CAAC,IAAM,MAAM,QAAQ,CAAC,OAAO,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;8FAGzD,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAehC,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,qIAAA,CAAA,SAAM;gCACL,MAAK;gCACL,SAAQ;gCACR,SAAS,IAAM,iBAAiB;0CACjC;;;;;;0CAGyC,6LAAC,qIAAA,CAAA,SAAM;gCAC7C,MAAK;gCACL,SAAS,KAAK,YAAY,CAAC;0CAE1B,UAAU,+BAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO3D;GA5QgB;;QAOD,iKAAA,CAAA,UAAO;;;KAPN","debugId":null}},
    {"offset": {"line": 1499, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/components/dashboard/managers/assistant-form-sheet.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport * as z from \"zod\"\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\"\nimport { Input } from \"@/components/ui/input\"\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\"\nimport { Switch } from \"@/components/ui/switch\"\nimport { Separator } from \"@/components/ui/separator\"\nimport { Assistant } from \"@/lib/api\"\n\n// Using Assistant interface from api.ts instead of local interface\n\n// Form schema for assistant\nconst assistantFormSchema = z.object({\n  fullName: z.string().min(1, \"Full name is required\"),\n  role: z.literal('Assistant'),\n  telegramUsername: z.string().min(1, \"Telegram username is required\"),\n  status: z.enum(['Active', 'Inactive']),\n  salaryType: z.literal('Fixed'),\n  fixedSalary: z.number().min(0, \"Fixed salary must be positive\"),\n  salaryPeriod: z.enum(['Weekly', 'Bi-weekly', 'Monthly']),\n})\n\ntype AssistantFormValues = z.infer<typeof assistantFormSchema>\n\ninterface AssistantFormSheetProps {\n  open: boolean\n  onOpenChange: (open: boolean) => void\n  assistant?: Assistant | null\n  onSubmit: (data: AssistantFormValues) => void\n}\n\nexport function AssistantFormSheet({\n  open,\n  onOpenChange,\n  assistant,\n  onSubmit,\n}: AssistantFormSheetProps) {\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  const form = useForm<AssistantFormValues>({\n    resolver: zodResolver(assistantFormSchema),\n    defaultValues: {\n      fullName: \"\",\n      role: 'Assistant',\n      telegramUsername: \"\",\n      status: 'Active',\n      salaryType: 'Fixed',\n      fixedSalary: 0,\n      salaryPeriod: 'Weekly',\n    },\n  })\n\n  // Reset form when assistant changes\n  useEffect(() => {\n    if (assistant) {\n      form.reset({\n        fullName: assistant.name,\n        role: assistant.role,\n        telegramUsername: assistant.telegram_username,\n        status: assistant.status,\n        salaryType: assistant.salary_type,\n        fixedSalary: assistant.fixed_salary,\n        salaryPeriod: assistant.salary_period,\n      })\n    } else {\n      form.reset({\n        fullName: \"\",\n        role: 'Assistant',\n        telegramUsername: \"\",\n        status: 'Active',\n        salaryType: 'Fixed',\n        fixedSalary: 0,\n        salaryPeriod: 'Weekly',\n      })\n    }\n  }, [assistant, form])\n\n  const handleOpenChange = (newOpen: boolean) => {\n    if (!newOpen) {\n      form.reset()\n    }\n    onOpenChange(newOpen)\n  }\n\n  const handleSubmit = async (data: AssistantFormValues) => {\n    setIsSubmitting(true)\n    try {\n      await onSubmit(data)\n      handleOpenChange(false)\n    } catch (error) {\n      console.error(\"Error submitting assistant form:\", error)\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  return (\n    <Sheet open={open} onOpenChange={handleOpenChange}>\n      <SheetContent className=\"w-[400px] sm:w-[540px] flex flex-col\">\n        <SheetHeader className=\"flex-shrink-0\">\n          <SheetTitle>\n            {assistant ? 'Edit Assistant' : 'Add Assistant'}\n          </SheetTitle>\n          <SheetDescription>\n            {assistant \n              ? 'Update assistant information and salary configuration.'\n              : 'Add a new assistant with fixed salary configuration.'\n            }\n          </SheetDescription>\n        </SheetHeader>\n        <div className=\"flex-1 overflow-y-auto mt-6\">\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(handleSubmit)} className=\"space-y-6\">\n              {/* Basic Information */}\n              <div className=\"space-y-4\">\n                <h3 className=\"text-lg font-medium\">Basic Information</h3>\n                \n                <FormField\n                  control={form.control}\n                  name=\"fullName\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Full Name</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"Enter full name\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"role\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Role</FormLabel>\n                      <Select onValueChange={field.onChange} defaultValue={field.value}>\n                        <FormControl>\n                          <SelectTrigger>\n                            <SelectValue placeholder=\"Select role\" />\n                          </SelectTrigger>\n                        </FormControl>\n                        <SelectContent>\n                          <SelectItem value=\"Assistant\">Assistant</SelectItem>\n                        </SelectContent>\n                      </Select>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"telegramUsername\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Telegram Username</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"@username\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"status\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Status</FormLabel>\n                      <Select onValueChange={field.onChange} defaultValue={field.value}>\n                        <FormControl>\n                          <SelectTrigger>\n                            <SelectValue placeholder=\"Select status\" />\n                          </SelectTrigger>\n                        </FormControl>\n                        <SelectContent>\n                          <SelectItem value=\"Active\">Active</SelectItem>\n                          <SelectItem value=\"Inactive\">Inactive</SelectItem>\n                        </SelectContent>\n                      </Select>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              <Separator />\n\n              {/* Salary Rules */}\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center space-x-2\">\n                  <div className=\"w-3 h-3 rounded-full bg-primary\"></div>\n                  <h3 className=\"text-lg font-medium\">Salary Rules</h3>\n                </div>\n                \n                <div className=\"bg-muted/50 border rounded-lg p-4 space-y-4\">\n                  <div className=\"flex items-center space-x-2\">\n                    <div className=\"w-2 h-2 rounded-full bg-primary\"></div>\n                    <span className=\"font-medium\">Assistant</span>\n                  </div>\n                  \n                  <div className=\"space-y-4\">\n                    <FormField\n                      control={form.control}\n                      name=\"fixedSalary\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Fixed Salary</FormLabel>\n                          <FormControl>\n                            <Input \n                              type=\"number\"\n                              placeholder=\"0.00\"\n                              {...field}\n                              onChange={(e) => field.onChange(parseFloat(e.target.value) || 0)}\n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    <FormField\n                      control={form.control}\n                      name=\"salaryPeriod\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Salary Period</FormLabel>\n                          <Select onValueChange={field.onChange} defaultValue={field.value}>\n                            <FormControl>\n                              <SelectTrigger>\n                                <SelectValue placeholder=\"Select period\" />\n                              </SelectTrigger>\n                            </FormControl>\n                            <SelectContent>\n                              <SelectItem value=\"Weekly\">per week</SelectItem>\n                              <SelectItem value=\"Bi-weekly\">per bi-weekly</SelectItem>\n                              <SelectItem value=\"Monthly\">per monthly</SelectItem>\n                            </SelectContent>\n                          </Select>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                  </div>\n\n                  \n                </div>\n              </div>\n            </form>\n          </Form>\n        </div>\n\n        <div className=\"flex-shrink-0 flex justify-end space-x-2 pt-6 border-t\">\n          <Button\n            type=\"button\"\n            variant=\"outline\"\n            onClick={() => handleOpenChange(false)}\n          >\n            Cancel\n          </Button>\n          <Button \n            type=\"button\"\n            onClick={form.handleSubmit(handleSubmit)}\n            disabled={isSubmitting}\n          >\n            {assistant ? 'Update Assistant' : 'Add Assistant'}\n          </Button>\n        </div>\n      </SheetContent>\n    </Sheet>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2182, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/app/dashboard/managers/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Badge } from '@/components/ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Search, Plus, Edit, Trash2, DollarSign, Users } from 'lucide-react';\nimport { ManagerFormSheet } from '@/components/dashboard/managers/manager-form-sheet';\nimport { AssistantFormSheet } from '@/components/dashboard/managers/assistant-form-sheet';\nimport { useToast } from '@/hooks/use-toast';\nimport { apiService, Manager, Assistant, TeamLeader } from '@/lib/api';\n\ninterface ManagerWithSalaries extends Manager {\n  period_salaries: {\n    [periodId: string]: {\n      week1_salary: number;\n      week2_salary: number;\n      total_salary: number;\n      payment_status: 'Paid' | 'Not Paid';\n    };\n  };\n}\n\ninterface Period {\n  id: string;\n  name: string;\n}\n\nconst availablePeriods: Period[] = [\n  { id: 'jul1', name: 'Jul 1' },\n  { id: 'jul2', name: 'Jul 2' },\n  { id: 'aug1', name: 'Aug 1' },\n  { id: 'aug2', name: 'Aug 2' },\n  { id: 'sep1', name: 'Sep 1' },\n  { id: 'sep2', name: 'Sep 2' },\n];\n\nexport default function ManagersPage() {\n  const { toast } = useToast();\n  const [activeTab, setActiveTab] = useState('managers');\n  const [managers, setManagers] = useState<ManagerWithSalaries[]>([]);\n  const [assistants, setAssistants] = useState<Assistant[]>([]);\n  const [teamLeaders, setTeamLeaders] = useState<TeamLeader[]>([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedPeriods, setSelectedPeriods] = useState<Period[]>([\n    { id: 'jul1', name: 'Jul 1' },\n    { id: 'jul2', name: 'Jul 2' },\n    { id: 'aug1', name: 'Aug 1' }\n  ]);\n  const [loading, setLoading] = useState(true);\n  \n  // Form state management\n  const [isManagerFormOpen, setIsManagerFormOpen] = useState(false);\n  const [isAssistantFormOpen, setIsAssistantFormOpen] = useState(false);\n  const [editingManager, setEditingManager] = useState<Manager | null>(null);\n  const [editingAssistant, setEditingAssistant] = useState<Assistant | null>(null);\n\n  // Load data on component mount\n  useEffect(() => {\n    loadManagers();\n    loadAssistants();\n    loadTeamLeaders();\n  }, []);\n\n  // Reload managers when search term changes\n  useEffect(() => {\n    if (searchTerm.length >= 0) { // Load on any search term change (including empty)\n      loadManagers();\n    }\n  }, [searchTerm]);\n\n  const loadManagers = async () => {\n    try {\n      // Always load all managers for the table display\n      const response = await apiService.getAllManagers({\n        limit: 100,\n        offset: 0,\n        query: searchTerm,\n        sort: 'desc',\n        sort_by: 'created_at'\n      });\n      \n      if (response.status === 'Success' && response.data) {\n        // Add empty period_salaries to each manager for consistency\n        const managersWithSalaries = response.data.map(m => ({ ...m, period_salaries: {} }));\n        setManagers(managersWithSalaries);\n      } else {\n        toast({\n          title: \"Error\",\n          description: response.message || \"Failed to load managers\",\n          variant: \"destructive\",\n        });\n      }\n    } catch (error) {\n      console.error('Error loading managers:', error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to load managers. Please try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadAssistants = async () => {\n    try {\n      const response = await apiService.getAllAssistants({\n        limit: 100,\n        offset: 0,\n        query: searchTerm,\n        sort: 'desc',\n        sort_by: 'created_at'\n      });\n      \n      if (response.status === 'Success' && response.data) {\n        setAssistants(response.data);\n      }\n    } catch (error) {\n      console.error('Error loading assistants:', error);\n    }\n  };\n\n  const loadTeamLeaders = async () => {\n    try {\n      const response = await apiService.getAllTeamLeaders();\n      \n      if (response.status === 'Success' && response.data) {\n        setTeamLeaders(response.data);\n      }\n    } catch (error) {\n      console.error('Error loading team leaders:', error);\n    }\n  };\n\n  // Period management removed - no longer needed for managers table\n\n  // Managers filtering and calculations\n  const filteredManagers = managers.filter(manager =>\n    manager.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    manager.telegram_username.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    manager.role.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const totalManagers = managers.filter(m => m.role === 'Manager').length;\n  const activeManagers = managers.filter(m => m.role === 'Manager' && m.status === 'Active').length;\n  const totalManagerSalary = managers.reduce((sum, manager) => {\n    // Calculate total from period salaries\n    const periodTotal = Object.values(manager.period_salaries || {}).reduce((periodSum, salary) => {\n      return periodSum + salary.total_salary;\n    }, 0);\n    return sum + periodTotal;\n  }, 0);\n\n  // Team Leaders filtering and calculations\n  const filteredLeaders = teamLeaders.filter(leader => \n    leader.name.toLowerCase().includes(searchTerm.toLowerCase()) || \n    leader.telegram_username.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n  const totalLeaders = teamLeaders.length;\n  const activeLeaders = teamLeaders.filter(l => l.status === 'Active').length;\n  const totalLeaderSalary = teamLeaders.reduce((sum, leader) => sum + (leader.fixed_salary || 0), 0);\n\n  // Assistants filtering and calculations\n  const filteredAssistants = assistants.filter(assistant =>\n    assistant.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    assistant.telegram_username.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n  const totalAssistants = assistants.length;\n  const activeAssistants = assistants.filter(a => a.status === 'Active').length;\n  const totalAssistantSalary = assistants.reduce((sum, assistant) => {\n    return sum + (assistant.fixed_salary || 0);\n  }, 0);\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'Active': return 'bg-green-100 text-green-800';\n      case 'Inactive': return 'bg-red-100 text-red-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const formatSalary = (amount: number) => `$${amount.toLocaleString()}`;\n\n  // Form handlers\n  const handleAddManager = () => {\n    setEditingManager(null);\n    setIsManagerFormOpen(true);\n  };\n\n  const handleEditManager = (manager: Manager) => {\n    setEditingManager(manager);\n    setIsManagerFormOpen(true);\n  };\n\n  const handleEditTeamLeader = (leader: TeamLeader) => {\n    setEditingManager(leader as Manager); // Cast to Manager since they share the same structure\n    setIsManagerFormOpen(true);\n  };\n\n  const handleAddAssistant = () => {\n    setEditingAssistant(null);\n    setIsAssistantFormOpen(true);\n  };\n\n  const handleEditAssistant = (assistant: Assistant) => {\n    setEditingAssistant(assistant);\n    setIsAssistantFormOpen(true);\n  };\n\n  const getAddButtonLabel = () => {\n    switch (activeTab) {\n      case 'managers':\n        return 'Add Manager';\n      case 'team_leaders':\n        return 'Add Team Leader';\n      case 'assistants':\n        return 'Add Assistant';\n      default:\n        return 'Add';\n    }\n  };\n\n  const handleAddClick = () => {\n    switch (activeTab) {\n      case 'managers':\n        handleAddManager();\n        break;\n      case 'team_leaders':\n        handleAddManager(); // Use manager form for team leaders\n        break;\n      case 'assistants':\n        handleAddAssistant();\n        break;\n    }\n  };\n\n  const getFormType = () => {\n    switch (activeTab) {\n      case 'managers':\n        return 'manager';\n      case 'team_leaders':\n        return 'team_leader';\n      default:\n        return 'manager';\n    }\n  };\n\n  // getPeriodData function removed - no longer needed for managers table\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">Management</h1>\n          <p className=\"text-muted-foreground\">\n            Manage managers, team leaders, and assistants with salary rules and period tracking\n          </p>\n        </div>\n        <Button onClick={handleAddClick}>\n          <Plus className=\"mr-2 h-4 w-4\" />\n          {getAddButtonLabel()}\n        </Button>\n      </div>\n\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-6\">\n        <TabsList className=\"grid w-full grid-cols-3\">\n          <TabsTrigger value=\"managers\">Managers</TabsTrigger>\n          <TabsTrigger value=\"team_leaders\">Team Leaders</TabsTrigger>\n          <TabsTrigger value=\"assistants\">Assistants</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"managers\" className=\"space-y-6\">\n          {/* Managers KPI Cards */}\n          <div className=\"grid gap-4 md:grid-cols-3\">\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Total Managers</CardTitle>\n                <Users className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">{totalManagers}</div>\n                <p className=\"text-xs text-muted-foreground\">\n                  {activeManagers} active\n                </p>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Total Salary</CardTitle>\n                <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">{formatSalary(totalManagerSalary)}</div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Combined payroll\n                </p>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Loading Status</CardTitle>\n                <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">{loading ? 'Loading...' : 'Ready'}</div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Data status\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Note: Period selector removed - managers table now shows all managers */}\n\n          {/* Search */}\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"relative flex-1\">\n              <Search className=\"absolute left-2 top-2.5 h-4 w-4 text-muted-foreground\" />\n              <Input\n                placeholder=\"Search managers...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"pl-8\"\n              />\n            </div>\n          </div>\n\n          {/* Managers Table */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Managers</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"overflow-x-auto\">\n                <table className=\"w-full\">\n                  <thead>\n                    <tr>\n                      <th className=\"text-left\">Name</th>\n                      <th className=\"text-left\">Contact</th>\n                      <th className=\"text-left\">Salary Type</th>\n                      <th className=\"text-left\">Salary Details</th>\n                      <th className=\"text-left\">Status</th>\n                      <th className=\"text-left\">Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {loading ? (\n                      <tr key=\"loading-managers\">\n                        <td colSpan={6} className=\"text-center py-8\">\n                          Loading managers...\n                        </td>\n                      </tr>\n                    ) : filteredManagers.filter(m => m.role === 'Manager').length === 0 ? (\n                      <tr key=\"no-managers\">\n                        <td colSpan={6} className=\"text-center py-8\">\n                          No managers found\n                        </td>\n                      </tr>\n                    ) : (\n                      filteredManagers.filter(m => m.role === 'Manager').map((manager) => (\n                        <tr key={`manager-${manager.manager_id}`}>\n                          <td className=\"font-medium\">{manager.name}</td>\n                          <td>{manager.telegram_username}</td>\n                          <td>\n                            <Badge variant=\"outline\">{manager.salary_type}</Badge>\n                          </td>\n                          <td>\n                            {manager.salary_type === 'Commission-based' ? (\n                              <div className=\"text-sm\">\n                                <div className=\"font-medium\">Commission-based</div>\n                                <div className=\"text-xs text-muted-foreground\">\n                                  ≥${manager.revenue_threshold?.toLocaleString()} → {manager.commission_rate}%\n                                </div>\n                                <div className=\"text-xs text-muted-foreground\">\n                                  Else → ${manager.fixed_salary?.toLocaleString()}\n                                </div>\n                              </div>\n                            ) : (\n                              <div className=\"text-sm\">\n                                <div className=\"font-medium\">Fixed Salary</div>\n                                <div className=\"text-xs text-muted-foreground\">\n                                  ${manager.fixed_salary?.toLocaleString()}\n                                </div>\n                              </div>\n                            )}\n                          </td>\n                          <td>\n                            <Badge className={getStatusColor(manager.status)}>\n                              {manager.status}\n                            </Badge>\n                          </td>\n                          <td>\n                            <div className=\"flex items-center space-x-2\">\n                              <Button \n                                variant=\"ghost\" \n                                size=\"sm\"\n                                onClick={() => handleEditManager(manager)}\n                              >\n                                <Edit className=\"h-4 w-4\" />\n                              </Button>\n                              <Button variant=\"ghost\" size=\"sm\">\n                                <Trash2 className=\"h-4 w-4\" />\n                              </Button>\n                            </div>\n                          </td>\n                        </tr>\n                      ))\n                    )}\n                  </tbody>\n                </table>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"team_leaders\" className=\"space-y-6\">\n          {/* Team Leaders KPI Cards */}\n          <div className=\"grid gap-4 md:grid-cols-3\">\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Total Team Leaders</CardTitle>\n                <Users className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">{totalLeaders}</div>\n                <p className=\"text-xs text-muted-foreground\">\n                  {activeLeaders} active\n                </p>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Total Salary</CardTitle>\n                <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">{formatSalary(totalLeaderSalary)}</div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Current period\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Team Leaders Table */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Team Leaders</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"overflow-x-auto\">\n                <table className=\"w-full\">\n                  <thead>\n                    <tr>\n                      <th className=\"text-left\">Name</th>\n                      <th className=\"text-left\">Contact</th>\n                      <th className=\"text-left\">Salary Type</th>\n                      <th className=\"text-left\">Salary Details</th>\n                      <th className=\"text-left\">Status</th>\n                      <th className=\"text-left\">Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {filteredLeaders.length === 0 ? (\n                      <tr key=\"no-team-leaders\">\n                        <td colSpan={6} className=\"text-center py-8\">\n                          No team leaders found\n                        </td>\n                      </tr>\n                    ) : (\n                      filteredLeaders.map((leader) => (\n                        <tr key={leader.team_leader_id}>\n                          <td className=\"font-medium\">{leader.name}</td>\n                          <td>{leader.telegram_username}</td>\n                          <td>\n                            <Badge variant=\"outline\">{leader.salary_type}</Badge>\n                          </td>\n                          <td>\n                            {leader.salary_type === 'Commission-based' ? (\n                              <div className=\"text-sm\">\n                                <div className=\"font-medium\">Commission-based</div>\n                                <div className=\"text-xs text-muted-foreground\">\n                                  ≥${leader.revenue_threshold?.toLocaleString()} → {leader.commission_rate}%\n                                </div>\n                                <div className=\"text-xs text-muted-foreground\">\n                                  Else → ${leader.fixed_salary?.toLocaleString()}\n                                </div>\n                              </div>\n                            ) : (\n                              <div className=\"text-sm\">\n                                <div className=\"font-medium\">Fixed Salary</div>\n                                <div className=\"text-xs text-muted-foreground\">\n                                  ${leader.fixed_salary?.toLocaleString()}\n                                </div>\n                              </div>\n                            )}\n                          </td>\n                          <td>\n                            <Badge className={getStatusColor(leader.status)}>\n                              {leader.status}\n                            </Badge>\n                          </td>\n                          <td>\n                            <div className=\"flex items-center space-x-2\">\n                              <Button \n                                variant=\"ghost\" \n                                size=\"sm\"\n                                onClick={() => handleEditTeamLeader(leader)}\n                              >\n                                <Edit className=\"h-4 w-4\" />\n                              </Button>\n                              <Button variant=\"ghost\" size=\"sm\">\n                                <Trash2 className=\"h-4 w-4\" />\n                              </Button>\n                            </div>\n                          </td>\n                        </tr>\n                      ))\n                    )}\n                  </tbody>\n                </table>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"assistants\" className=\"space-y-6\">\n          {/* Assistants KPI Cards */}\n          <div className=\"grid gap-4 md:grid-cols-3\">\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Total Assistants</CardTitle>\n                <Users className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">{totalAssistants}</div>\n                <p className=\"text-xs text-muted-foreground\">\n                  {activeAssistants} active\n                </p>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Total Salary</CardTitle>\n                <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">{formatSalary(totalAssistantSalary)}</div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Combined payroll\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Assistants Table */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Assistants</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"overflow-x-auto\">\n                <table className=\"w-full\">\n                  <thead>\n                    <tr>\n                      <th className=\"text-left\">Name</th>\n                      <th className=\"text-left\">Contact</th>\n                      <th className=\"text-left\">Salary Type</th>\n                      <th className=\"text-left\">Salary Details</th>\n                      <th className=\"text-left\">Status</th>\n                      <th className=\"text-left\">Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {filteredAssistants.length === 0 ? (\n                      <tr key=\"no-assistants\">\n                        <td colSpan={6} className=\"text-center py-8\">\n                          No assistants found\n                        </td>\n                      </tr>\n                    ) : (\n                      filteredAssistants.map((assistant) => (\n                        <tr key={assistant.assistant_id}>\n                          <td className=\"font-medium\">{assistant.name}</td>\n                          <td>{assistant.telegram_username}</td>\n                          <td>\n                            <Badge variant=\"outline\">{assistant.salary_type}</Badge>\n                          </td>\n                          <td>\n                            <div className=\"text-sm\">\n                              <div className=\"font-medium\">Fixed Salary</div>\n                              <div className=\"text-xs text-muted-foreground\">\n                                ${assistant.fixed_salary?.toLocaleString()}\n                              </div>\n                              <div className=\"text-xs text-muted-foreground\">\n                                {assistant.salary_period} payment\n                              </div>\n                            </div>\n                          </td>\n                          <td>\n                            <Badge className={getStatusColor(assistant.status)}>\n                              {assistant.status}\n                            </Badge>\n                          </td>\n                          <td>\n                            <div className=\"flex items-center space-x-2\">\n                              <Button \n                                variant=\"ghost\" \n                                size=\"sm\"\n                                onClick={() => handleEditAssistant(assistant)}\n                              >\n                                <Edit className=\"h-4 w-4\" />\n                              </Button>\n                              <Button variant=\"ghost\" size=\"sm\">\n                                <Trash2 className=\"h-4 w-4\" />\n                              </Button>\n                            </div>\n                          </td>\n                        </tr>\n                      ))\n                    )}\n                  </tbody>\n                </table>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n\n      {/* Form Components */}\n      <ManagerFormSheet\n        open={isManagerFormOpen}\n        onOpenChange={setIsManagerFormOpen}\n        manager={editingManager}\n        type={getFormType()}\n        onSave={async (data) => {\n          try {\n            if (editingManager) {\n              // Update existing manager\n              const response = await apiService.updateManager(editingManager.manager_id, {\n                name: data.name,\n                role: data.role,\n                telegram_username: data.telegramUsername,\n                status: data.status,\n                salary_type: 'Commission-based',\n                revenue_threshold: data.revenueThreshold,\n                commission_rate: data.commissionRate,\n                fixed_salary: data.fixedSalary,\n              });\n              \n              if (response.status === 'Success') {\n                toast({\n                  title: \"Success\",\n                  description: `${data.role} updated successfully!`,\n                });\n              } else {\n                toast({\n                  title: \"Error\",\n                  description: response.message || \"Failed to update manager\",\n                  variant: \"destructive\",\n                });\n                return;\n              }\n            } else {\n              // Create new manager\n              const response = await apiService.createManager({\n                name: data.name,\n                role: data.role,\n                telegram_username: data.telegramUsername,\n                status: data.status,\n                salary_type: 'Commission-based',\n                revenue_threshold: data.revenueThreshold,\n                commission_rate: data.commissionRate,\n                fixed_salary: data.fixedSalary,\n              });\n              \n              if (response.status === 'Success') {\n                toast({\n                  title: \"Success\",\n                  description: `${data.role} created successfully!`,\n                });\n              } else {\n                toast({\n                  title: \"Error\",\n                  description: response.message || \"Failed to create manager\",\n                  variant: \"destructive\",\n                });\n                return;\n              }\n            }\n            \n            setIsManagerFormOpen(false);\n            setEditingManager(null);\n            loadManagers();\n            loadTeamLeaders();\n          } catch (error) {\n            console.error('Error saving manager:', error);\n            toast({\n              title: \"Error\",\n              description: \"An unexpected error occurred. Please try again.\",\n              variant: \"destructive\",\n            });\n          }\n        }}\n      />\n\n      <AssistantFormSheet\n        open={isAssistantFormOpen}\n        onOpenChange={setIsAssistantFormOpen}\n        assistant={editingAssistant}\n        onSubmit={async (data) => {\n          try {\n            if (editingAssistant) {\n              // Update existing assistant\n              const response = await apiService.updateAssistant(editingAssistant.assistant_id, {\n                name: data.fullName,\n                telegram_username: data.telegramUsername,\n                status: data.status,\n                fixed_salary: data.fixedSalary,\n                salary_period: data.salaryPeriod,\n              });\n              \n              if (response.status === 'Success') {\n                toast({\n                  title: \"Success\",\n                  description: \"Assistant updated successfully!\",\n                });\n              } else {\n                toast({\n                  title: \"Error\",\n                  description: response.message || \"Failed to update assistant\",\n                  variant: \"destructive\",\n                });\n                return;\n              }\n            } else {\n              // Create new assistant\n              const response = await apiService.createAssistant({\n                name: data.fullName,\n                telegram_username: data.telegramUsername,\n                status: data.status,\n                salary_type: 'Fixed',\n                fixed_salary: data.fixedSalary,\n                salary_period: data.salaryPeriod,\n              });\n              \n              if (response.status === 'Success') {\n                toast({\n                  title: \"Success\",\n                  description: \"Assistant created successfully!\",\n                });\n              } else {\n                toast({\n                  title: \"Error\",\n                  description: response.message || \"Failed to create assistant\",\n                  variant: \"destructive\",\n                });\n                return;\n              }\n            }\n            \n            setIsAssistantFormOpen(false);\n            setEditingAssistant(null);\n            loadAssistants();\n          } catch (error) {\n            console.error('Error saving assistant:', error);\n            toast({\n              title: \"Error\",\n              description: \"An unexpected error occurred. Please try again.\",\n              variant: \"destructive\",\n            });\n          }\n        }}\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}