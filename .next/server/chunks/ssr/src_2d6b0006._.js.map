{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\r\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Select = SelectPrimitive.Root\r\n\r\nconst SelectGroup = SelectPrimitive.Group\r\n\r\nconst SelectValue = SelectPrimitive.Value\r\n\r\nconst SelectTrigger = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <SelectPrimitive.Icon asChild>\r\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\r\n    </SelectPrimitive.Icon>\r\n  </SelectPrimitive.Trigger>\r\n))\r\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\r\n\r\nconst SelectScrollUpButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollUpButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronUp className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollUpButton>\r\n))\r\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\r\n\r\nconst SelectScrollDownButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollDownButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronDown className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollDownButton>\r\n))\r\nSelectScrollDownButton.displayName =\r\n  SelectPrimitive.ScrollDownButton.displayName\r\n\r\nconst SelectContent = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\r\n>(({ className, children, position = \"popper\", ...props }, ref) => (\r\n  <SelectPrimitive.Portal>\r\n    <SelectPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        position === \"popper\" &&\r\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\r\n        className\r\n      )}\r\n      position={position}\r\n      {...props}\r\n    >\r\n      <SelectScrollUpButton />\r\n      <SelectPrimitive.Viewport\r\n        className={cn(\r\n          \"p-1\",\r\n          position === \"popper\" &&\r\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\r\n        )}\r\n      >\r\n        {children}\r\n      </SelectPrimitive.Viewport>\r\n      <SelectScrollDownButton />\r\n    </SelectPrimitive.Content>\r\n  </SelectPrimitive.Portal>\r\n))\r\nSelectContent.displayName = SelectPrimitive.Content.displayName\r\n\r\nconst SelectLabel = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectLabel.displayName = SelectPrimitive.Label.displayName\r\n\r\nconst SelectItem = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <SelectPrimitive.ItemIndicator>\r\n        <Check className=\"h-4 w-4\" />\r\n      </SelectPrimitive.ItemIndicator>\r\n    </span>\r\n\r\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n  </SelectPrimitive.Item>\r\n))\r\nSelectItem.displayName = SelectPrimitive.Item.displayName\r\n\r\nconst SelectSeparator = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\r\n\r\nexport {\r\n  Select,\r\n  SelectGroup,\r\n  SelectValue,\r\n  SelectTrigger,\r\n  SelectContent,\r\n  SelectLabel,\r\n  SelectItem,\r\n  SelectSeparator,\r\n  SelectScrollUpButton,\r\n  SelectScrollDownButton,\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Table = React.forwardRef<\r\n  HTMLTableElement,\r\n  React.HTMLAttributes<HTMLTableElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div className=\"relative w-full overflow-auto\">\r\n    <table\r\n      ref={ref}\r\n      className={cn(\"w-full caption-bottom text-sm\", className)}\r\n      {...props}\r\n    />\r\n  </div>\r\n))\r\nTable.displayName = \"Table\"\r\n\r\nconst TableHeader = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\r\n))\r\nTableHeader.displayName = \"TableHeader\"\r\n\r\nconst TableBody = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tbody\r\n    ref={ref}\r\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableBody.displayName = \"TableBody\"\r\n\r\nconst TableFooter = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tfoot\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableFooter.displayName = \"TableFooter\"\r\n\r\nconst TableRow = React.forwardRef<\r\n  HTMLTableRowElement,\r\n  React.HTMLAttributes<HTMLTableRowElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tr\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableRow.displayName = \"TableRow\"\r\n\r\nconst TableHead = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.ThHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <th\r\n    ref={ref}\r\n    className={cn(\r\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableHead.displayName = \"TableHead\"\r\n\r\nconst TableCell = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.TdHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <td\r\n    ref={ref}\r\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCell.displayName = \"TableCell\"\r\n\r\nconst TableCaption = React.forwardRef<\r\n  HTMLTableCaptionElement,\r\n  React.HTMLAttributes<HTMLTableCaptionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <caption\r\n    ref={ref}\r\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCaption.displayName = \"TableCaption\"\r\n\r\nexport {\r\n  Table,\r\n  TableHeader,\r\n  TableBody,\r\n  TableFooter,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableCaption,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 419, "column": 0}, "map": {"version":3,"sources":["file:///D:/Finance_goat/frontend/src/app/dashboard/reports/edit-week/page.tsx"],"sourcesContent":["\n'use client';\n\nimport React, { useState, Suspense, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { ArrowLeft, Save, Plus, Trash2, Users, Calendar } from 'lucide-react';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { useToast } from '@/hooks/use-toast';\nimport { apiService } from '@/lib/api';\n\ninterface Model {\n  id: string;\n  name: string;\n  clientAgencyName: string;\n  teamLeader: string;\n}\n\ninterface ModelEntry {\n  id: string;\n  modelId: string;\n  modelName: string;\n  clientAgencyName: string;\n  teamLeader: string;\n  hours: number;\n  netSales: number;\n  total: number;\n}\n\ninterface WeekReportData {\n  report_id: string;\n  work_date: string;\n  chatter_id: string;\n  model_id: string;\n  hours: number;\n  net_sales: number;\n  period: string;\n  year: number;\n  week: number;\n  row_total: number;\n}\n\nconst weekDays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n\nfunction EditWeekPageContent() {\n  const router = useRouter();\n  const searchParams = useSearchParams();\n  const { toast } = useToast();\n  const chatterName = searchParams.get('chatterName') || 'Unknown Chatter';\n  const periodKey = searchParams.get('periodKey') || 'aug1';\n  const week = searchParams.get('week') || '1';\n  const chatterId = searchParams.get('chatterId') || '1';\n  const startDate = searchParams.get('startDate') || '';\n  const endDate = searchParams.get('endDate') || '';\n  const year = searchParams.get('year') || '2025';\n\n  const [dayEntries, setDayEntries] = useState(() => {\n    // Use actual period data if available, otherwise fallback to calculated dates\n    if (startDate && endDate && startDate !== '' && endDate !== '') {\n      const start = new Date(startDate);\n      // Validate the date is valid\n      if (isNaN(start.getTime())) {\n        // Invalid date, use fallback\n        const weekNum = parseInt(week);\n        const baseDate = weekNum === 1 ? 1 : 8;\n        \n        return weekDays.map((day, index) => ({\n          id: `day-${index}`,\n          date: `2025-08-${String(baseDate + index).padStart(2, '0')}`,\n          models: [] as ModelEntry[]\n        }));\n      }\n      \n      return weekDays.map((day, index) => {\n        const date = new Date(start);\n        date.setDate(start.getDate() + index);\n        return {\n          id: `day-${index}`,\n          date: date.toISOString().split('T')[0], // YYYY-MM-DD format\n          models: [] as ModelEntry[]\n        };\n      });\n    } else {\n      // Fallback to calculated dates for Aug 2025\n      const weekNum = parseInt(week);\n      const baseDate = weekNum === 1 ? 1 : 8;\n      \n      return weekDays.map((day, index) => ({\n        id: `day-${index}`,\n        date: `2025-08-${String(baseDate + index).padStart(2, '0')}`,\n        models: [] as ModelEntry[]\n      }));\n    }\n  });\n\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [models, setModels] = useState<Model[]>([]);\n  const [calculating, setCalculating] = useState(false);\n  const [salaryResults, setSalaryResults] = useState<{ [date: string]: any }>({});\n\n  // Load models from API\n  useEffect(() => {\n    loadModels();\n  }, []);\n\n  // Regenerate day entries when period data changes\n  useEffect(() => {\n    if (startDate && endDate && startDate !== '' && endDate !== '') {\n      const start = new Date(startDate);\n      // Validate the date is valid\n      if (!isNaN(start.getTime())) {\n        const newDayEntries = weekDays.map((day, index) => {\n          const date = new Date(start);\n          date.setDate(start.getDate() + index);\n          return {\n            id: `day-${index}`,\n            date: date.toISOString().split('T')[0], // YYYY-MM-DD format\n            models: [] as ModelEntry[]\n          };\n        });\n        setDayEntries(newDayEntries);\n      }\n    }\n  }, [startDate, endDate]);\n\n  // Load existing week report data - independent of models loading\n  useEffect(() => {\n    loadWeekReport();\n  }, [chatterId, periodKey, week, startDate, endDate, year]);\n\n  // Helper function to get date range for display\n  const getDateRange = () => {\n    if (startDate && endDate && startDate !== '' && endDate !== '') {\n      const start = new Date(startDate);\n      const end = new Date(endDate);\n      // Validate dates are valid\n      if (!isNaN(start.getTime()) && !isNaN(end.getTime())) {\n        return `${start.toLocaleDateString('en-US', { month: 'short', day: 'numeric' })} - ${end.toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}, ${year}`;\n      }\n    }\n    // Fallback to calculated dates\n    const weekNum = parseInt(week);\n    if (weekNum === 1) {\n      return \"Aug 1-7, 2025\";\n    } else {\n      return \"Aug 8-15, 2025\";\n    }\n  };\n\n  // Helper function to format period for display\n  const getPeriodDisplay = () => {\n    if (startDate && endDate && startDate !== '' && endDate !== '') {\n      const start = new Date(startDate);\n      const end = new Date(endDate);\n      // Validate dates are valid\n      if (!isNaN(start.getTime()) && !isNaN(end.getTime())) {\n        const month = start.toLocaleDateString('en-US', { month: 'long' });\n        const startDay = start.getDate();\n        const endDay = end.getDate();\n        return `${month} ${startDay}-${endDay}, ${year}`;\n      }\n    }\n    // Fallback to periodKey conversion\n    const month = periodKey.slice(0, 3).charAt(0).toUpperCase() + periodKey.slice(0, 3).slice(1);\n    return `${month} 1-15, ${year}`;\n  };\n\n  const loadModels = async () => {\n    try {\n      const response = await apiService.getAllModels({});\n      if (response.status === 'Success' && response.data) {\n        const activeModels = response.data\n          .filter(model => model.status === 'Active')\n          .map(model => ({\n            id: model.model_id,\n            name: model.modelName,\n            clientAgencyName: model.clientAgencyName,\n            teamLeader: model.teamLeader\n          }));\n        setModels(activeModels);\n      }\n    } catch (error) {\n      console.error('Error loading models:', error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to load models. Please try again.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  const loadWeekReport = async () => {\n    if (!chatterId) return;\n    \n    try {\n      setLoading(true);\n      // Use periodKey directly since it's already in standard format\n      const apiPeriodKey = periodKey;\n      console.log('Loading week report for:', { chatterId, periodKey, apiPeriodKey, week, year: parseInt(year) });\n      \n      const response = await apiService.getChatterWeeklyReport(\n        chatterId, \n        apiPeriodKey, \n        parseInt(year), // year\n        parseInt(week)\n      );\n\n      console.log('Week report response:', response);\n      console.log('Response status:', response.status);\n      console.log('Response data:', response.data);\n      console.log('Data type:', typeof response.data);\n      console.log('Data length:', response.data?.length);\n\n      if (response.status === 'Success' && response.data) {\n        console.log('Week report data:', response.data);\n        // Group data by date\n        const dateMap = new Map<string, ModelEntry[]>();\n        \n        response.data.forEach((row: WeekReportData) => {\n          const date = row.work_date;\n          if (!dateMap.has(date)) {\n            dateMap.set(date, []);\n          }\n          \n          const modelData = models.find(m => m.id === row.model_id);\n          const entry: ModelEntry = {\n            id: row.report_id,\n            modelId: row.model_id,\n            modelName: modelData?.name || '',\n            clientAgencyName: modelData?.clientAgencyName || '',\n            teamLeader: modelData?.teamLeader || '',\n            hours: row.hours,\n            netSales: row.net_sales,\n            total: row.row_total\n          };\n          \n          dateMap.get(date)!.push(entry);\n        });\n\n        // Update day entries with loaded data\n        setDayEntries(prev => prev.map(day => ({\n          ...day,\n          models: dateMap.get(day.date) || []\n        })));\n      } else {\n        console.log('No week report data found, showing empty entries');\n        // If no data exists, show empty entries for the week\n        setDayEntries(prev => prev.map(day => ({\n          ...day,\n          models: []\n        })));\n      }\n    } catch (error) {\n      console.error('Error loading week report:', error);\n      // On error, still show empty entries so user can add data\n      setDayEntries(prev => prev.map(day => ({\n        ...day,\n        models: []\n      })));\n      toast({\n        title: \"Warning\",\n        description: \"No existing week report data found. You can add new entries.\",\n        variant: \"default\",\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addModelEntry = (dayId: string) => {\n    setDayEntries(prev => prev.map(day => {\n      if (day.id === dayId) {\n        return {\n          ...day,\n          models: [...day.models, {\n            id: `model-${Date.now()}-${Math.random()}`,\n            modelId: '',\n            modelName: '',\n            clientAgencyName: '',\n            teamLeader: '',\n            hours: 0,\n            netSales: 0,\n            total: 0\n          }]\n        };\n      }\n      return day;\n    }));\n  };\n\n  const removeModelEntry = (dayId: string, modelId: string) => {\n    setDayEntries(prev => prev.map(day => {\n      if (day.id === dayId) {\n        return {\n          ...day,\n          models: day.models.filter(model => model.id !== modelId)\n        };\n      }\n      return day;\n    }));\n  };\n\n  const updateModelEntry = (dayId: string, modelId: string, field: keyof ModelEntry, value: any) => {\n    setDayEntries(prev => prev.map(day => {\n      if (day.id === dayId) {\n        return {\n          ...day,\n          models: day.models.map(model => {\n            if (model.id === modelId) {\n              const updatedModel = { ...model, [field]: value };\n              \n              if (field === 'modelId') {\n                const selectedModel = models.find(m => m.id === value);\n                updatedModel.modelName = selectedModel?.name || '';\n                updatedModel.clientAgencyName = selectedModel?.clientAgencyName || '';\n                updatedModel.teamLeader = selectedModel?.teamLeader || '';\n              }\n              \n              // Calculate total for this model entry\n              const totalHours = day.models.reduce((sum, m) => sum + m.hours, 0);\n              const modelCount = day.models.length;\n              \n              // Mock rates - in real app this would come from chatter's rate settings\n              const chatterRates = {\n                rate1Model: 3.5,\n                rate2Models: 4.0,\n                rate3Models: 4.5,\n                rate4Models: 5.0,\n                rate5Models: 5.5\n              };\n              \n              // Calculate hourly rate based on number of models\n              let hourlyRate = 3.5; // default\n              switch (modelCount) {\n                case 1: hourlyRate = chatterRates.rate1Model; break;\n                case 2: hourlyRate = chatterRates.rate2Models; break;\n                case 3: hourlyRate = chatterRates.rate3Models; break;\n                case 4: hourlyRate = chatterRates.rate4Models; break;\n                case 5: hourlyRate = chatterRates.rate5Models; break;\n              }\n              \n              // Calculate hourly pay (shared across all models for the day)\n              const hourlyPay = totalHours * hourlyRate;\n              const hourlyPayPerModel = hourlyPay / modelCount;\n              \n              // Calculate commission based on model rules (from Models tab)\n              // In real app, this would fetch the model's commission rules\n              const modelData = models.find(m => m.name === updatedModel.modelName);\n              let commissionRate = 0.03; // default 3%\n              \n              // Mock commission rules - in real app this would come from model data\n              if (modelData) {\n                // Example: If net sales >= $1000, commission is 5%, else 3%\n                commissionRate = updatedModel.netSales >= 1000 ? 0.05 : 0.03;\n              }\n              \n              const commission = updatedModel.netSales * commissionRate;\n              \n              // Total for this model entry\n              updatedModel.total = hourlyPayPerModel + commission;\n              \n              return updatedModel;\n            }\n            return model;\n          })\n        };\n      }\n      return day;\n    }));\n  };\n\n  const getDayTotal = (models: ModelEntry[]) => {\n    return models.reduce((sum, model) => sum + model.total, 0);\n  };\n\n  const getWeekTotal = () => {\n    return dayEntries.reduce((sum, day) => sum + getDayTotal(day.models), 0);\n  };\n\n  const handleSave = async () => {\n    if (!chatterId) {\n      toast({\n        title: \"Error\",\n        description: \"Chatter ID is required\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    try {\n      setSaving(true);\n      \n      console.log('Saving with period:', periodKey);\n      \n      // Prepare payload for API\n      const payload = {\n        chatter_id: chatterId,\n        period: periodKey,\n        year: parseInt(year),\n        week: parseInt(week),\n        date_rows: dayEntries.map(day => ({\n          date: day.date,\n          rows: day.models.map(model => ({\n            model_id: model.modelId,\n            hours: model.hours,\n            net_sales: model.netSales\n          }))\n        }))\n      };\n\n      const response = await apiService.saveChatterWeeklyReport(payload);\n      \n      if (response.status === 'Success') {\n        toast({\n          title: \"Success\",\n          description: \"Week report saved successfully\",\n        });\n        router.push('/dashboard/reports');\n      } else {\n        toast({\n          title: \"Error\",\n          description: response.message || \"Failed to save week report\",\n          variant: \"destructive\",\n        });\n      }\n    } catch (error) {\n      console.error('Error saving week report:', error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to save week report. Please try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const handleCalculateDay = async (dayIndex: number) => {\n    const day = dayEntries[dayIndex];\n    if (!day.models || day.models.length === 0) {\n      toast({\n        title: \"Error\",\n        description: \"No models assigned for this day. Cannot calculate.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    setCalculating(true);\n    try {\n      // Call the backend API for salary calculation\n      const payload = {\n        chatter_id: chatterId,\n        work_date: day.date,\n        work_rows: day.models.map(model => ({\n          model_id: model.modelId,\n          hours: model.hours,\n          net_sales: model.netSales\n        }))\n      };\n\n      // Import the API function directly\n      const { calculateDailySalary } = await import('@/lib/api');\n      const response = await calculateDailySalary(payload);\n\n      if (response.status === 'Success' && response.data) {\n        setSalaryResults(prev => ({\n          ...prev,\n          [day.date]: response.data\n        }));\n        toast({\n          title: \"Success\",\n          description: `Salary calculation for ${day.date} completed.`,\n        });\n      } else {\n        toast({\n          title: \"Error\",\n          description: response.message || \"Failed to calculate daily salary.\",\n          variant: \"destructive\",\n        });\n      }\n    } catch (error) {\n      console.error('Error calculating daily salary:', error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to calculate daily salary. Please try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setCalculating(false);\n    }\n  };\n\n  const handleCalculateAllDays = async () => {\n    if (!chatterId) {\n      toast({\n        title: \"Error\",\n        description: \"Chatter ID is required to calculate all days.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    try {\n      setCalculating(true);\n      const allResults: { [date: string]: any } = {};\n      \n      // Calculate each day individually using the backend API\n      for (const day of dayEntries) {\n        if (day.models && day.models.length > 0) {\n          const payload = {\n            chatter_id: chatterId,\n            work_date: day.date,\n            work_rows: day.models.map(model => ({\n              model_id: model.modelId,\n              hours: model.hours,\n              net_sales: model.netSales\n            }))\n          };\n\n          const { calculateDailySalary } = await import('@/lib/api');\n          const response = await calculateDailySalary(payload);\n          \n          if (response.status === 'Success' && response.data) {\n            allResults[day.date] = response.data;\n          } else {\n            console.error(`Failed to calculate for ${day.date}:`, response.message);\n          }\n        } else {\n          allResults[day.date] = {\n            total_salary: 0,\n            hourly_pay: 0,\n            commission_total: 0,\n            agency_cut: 0,\n            net_earnings: 0,\n            model_count: 0,\n            hourly_rate: 0,\n            total_hours: 0,\n            total_net_sales: 0,\n            row_breakdown: []\n          };\n        }\n      }\n      \n      setSalaryResults(allResults);\n      toast({\n        title: \"Success\",\n        description: \"All days' salary calculations completed.\",\n      });\n    } catch (error) {\n      console.error('Error calculating all days:', error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to calculate all days' salary. Please try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setCalculating(false);\n    }\n  };\n\n  // Calculate cost attribution per model for profit tracking\n  const calculateModelCosts = (day: any) => {\n    const totalHours = day.models.reduce((sum: number, m: any) => sum + m.hours, 0);\n    const modelCount = day.models.length;\n    \n    if (modelCount === 0) return [];\n    \n    // Calculate hourly rate based on number of models\n    const chatterRates = {\n      rate1Model: 3.5,\n      rate2Models: 4.0,\n      rate3Models: 4.5,\n      rate4Models: 5.0,\n      rate5Models: 5.5\n    };\n    \n    let hourlyRate = 3.5;\n    switch (modelCount) {\n      case 1: hourlyRate = chatterRates.rate1Model; break;\n      case 2: hourlyRate = chatterRates.rate2Models; break;\n      case 3: hourlyRate = chatterRates.rate3Models; break;\n      case 4: hourlyRate = chatterRates.rate4Models; break;\n      case 5: hourlyRate = chatterRates.rate5Models; break;\n    }\n    \n    const totalHourlyPay = totalHours * hourlyRate;\n    const hourlyPayPerModel = totalHourlyPay / modelCount;\n    \n    return day.models.map((model: any) => {\n      const modelData = models.find(m => m.name === model.modelName);\n      let commissionRate = 0.03;\n      \n      if (modelData) {\n        commissionRate = model.netSales >= 1000 ? 0.05 : 0.03;\n      }\n      \n      const commission = model.netSales * commissionRate;\n      \n      return {\n        modelName: model.modelName,\n        hourlyCost: hourlyPayPerModel,\n        commission: commission,\n        totalCost: hourlyPayPerModel + commission\n      };\n    });\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <Button\n          variant=\"ghost\"\n          onClick={() => router.push('/dashboard/reports')}\n          className=\"flex items-center space-x-2\"\n        >\n          <ArrowLeft className=\"h-4 w-4\" />\n          <span>Back to Reports</span>\n        </Button>\n        <Button \n          onClick={handleSave} \n          disabled={saving}\n          className=\"flex items-center space-x-2\"\n        >\n          <Save className=\"h-4 w-4\" />\n          <span>{saving ? 'Saving...' : 'Save Week Report'}</span>\n        </Button>\n      </div>\n\n      <div>\n        <h1 className=\"text-3xl font-bold\">{chatterName} Reports</h1>\n        <p className=\"text-muted-foreground\">\n          {periodKey} - Week {week} (date range: {getDateRange()})\n        </p>\n      </div>\n\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <CardTitle>{chatterName} - Week {week} Report</CardTitle>\n            <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n              <Calendar className=\"h-4 w-4\" />\n              <span>{getDateRange()}</span>\n            </div>\n          </div>\n        </CardHeader>\n        <CardContent>\n          {loading ? (\n            <div className=\"flex items-center justify-center py-8\">\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-primary\"></div>\n                <span>Loading week report...</span>\n              </div>\n            </div>\n          ) : (\n            <>\n              {/* Weekly Account Assignment Summary */}\n              <div className=\"mb-6 p-4 bg-green-50 dark:bg-green-950/20 rounded-lg border\">\n                <div className=\"flex items-center gap-2 mb-3\">\n                  <Users className=\"h-4 w-4 text-green-600\" />\n                  <span className=\"text-sm font-medium text-green-800 dark:text-green-200\">\n                    Weekly Account Assignment Summary\n                  </span>\n                </div>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3\">\n                  {Array.from(new Set(dayEntries.flatMap(day => day.models.map(m => m.modelName)).filter(Boolean))).map((modelName) => {\n                    const modelEntries = dayEntries.flatMap(day => day.models).filter(m => m.modelName === modelName);\n                    const totalHours = modelEntries.reduce((sum, m) => sum + m.hours, 0);\n                    const totalSales = modelEntries.reduce((sum, m) => sum + m.netSales, 0);\n                    const firstEntry = modelEntries[0];\n                    \n                    return (\n                      <div key={modelName} className=\"p-3 bg-green-100 dark:bg-green-900/30 rounded border\">\n                        <div className=\"font-medium text-sm\">{modelName}</div>\n                        <div className=\"text-xs text-muted-foreground mt-1\">\n                          {firstEntry?.clientAgencyName} • TL: {firstEntry?.teamLeader}\n                        </div>\n                        <div className=\"text-xs mt-2\">\n                          <span className=\"text-green-600 dark:text-green-400\">Total Hours: {totalHours}</span>\n                          <span className=\"mx-2\">•</span>\n                          <span className=\"text-green-600 dark:text-green-400\">Sales: ${totalSales.toLocaleString()}</span>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n              \n              <div className=\"space-y-6\">\n                {dayEntries.map((day, dayIndex) => (\n                  <div key={day.id} className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <h3 className=\"text-lg font-semibold\">\n                        {weekDays[dayIndex]} - {new Date(day.date).toLocaleDateString('en-GB')}\n                      </h3>\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={() => addModelEntry(day.id)}\n                      >\n                        <Plus className=\"h-4 w-4 mr-2\" />\n                        Add Model Row\n                      </Button>\n                    </div>\n\n                    {day.models.length === 0 ? (\n                      <div className=\"text-center py-8 text-muted-foreground border-2 border-dashed rounded-lg\">\n                        No work entries for this day. Click \"Add Model Row\" to start adding assignments.\n                      </div>\n                    ) : (\n                      <>\n                        {/* Account Assignment Summary */}\n                        <div className=\"mb-4 p-3 bg-blue-50 dark:bg-blue-950/20 rounded-lg\">\n                          <div className=\"flex items-center gap-2 mb-2\">\n                            <Users className=\"h-4 w-4 text-blue-600\" />\n                            <span className=\"text-sm font-medium text-blue-800 dark:text-blue-200\">\n                              Models Assigned Today ({day.models.length} rows):\n                            </span>\n                          </div>\n                          <div className=\"flex flex-wrap gap-2\">\n                            {day.models.map((model) => (\n                              <div key={model.id} className=\"flex items-center gap-1 px-2 py-1 bg-blue-100 dark:bg-blue-900/30 rounded text-xs\">\n                                <span className=\"font-medium\">{model.modelName || 'Unassigned'}</span>\n                                {model.modelName && (\n                                  <>\n                                    <span className=\"text-blue-600 dark:text-blue-400\">•</span>\n                                    <span className=\"text-muted-foreground\">{model.clientAgencyName}</span>\n                                    <span className=\"text-blue-600 dark:text-blue-400\">•</span>\n                                    <span className=\"text-muted-foreground\">TL: {model.teamLeader}</span>\n                                    <span className=\"text-blue-600 dark:text-blue-400\">•</span>\n                                    <span className=\"text-muted-foreground\">${model.netSales.toLocaleString()}</span>\n                                  </>\n                                )}\n                              </div>\n                            ))}\n                          </div>\n                        </div>\n                        \n                        <Table>\n                        <TableHeader>\n                          <TableRow>\n                            <TableHead>Account/Model</TableHead>\n                            <TableHead>Client Agency</TableHead>\n                            <TableHead>Team Leader</TableHead>\n                            <TableHead>Hours</TableHead>\n                            <TableHead>Net Sales</TableHead>\n                            <TableHead>Total</TableHead>\n                            <TableHead>Actions</TableHead>\n                          </TableRow>\n                        </TableHeader>\n                        <TableBody>\n                          {day.models.map((model) => (\n                            <TableRow key={model.id}>\n                              <TableCell>\n                                <Select\n                                  value={model.modelId}\n                                  onValueChange={(value) => updateModelEntry(day.id, model.id, 'modelId', value)}\n                                >\n                                  <SelectTrigger className=\"w-48\">\n                                    <SelectValue placeholder=\"Select a model\" />\n                                  </SelectTrigger>\n                                  <SelectContent>\n                                    {models.map((m) => (\n                                      <SelectItem key={m.id} value={m.id}>\n                                        {m.name}\n                                      </SelectItem>\n                                    ))}\n                                  </SelectContent>\n                                </Select>\n                              </TableCell>\n                              <TableCell className=\"text-sm text-muted-foreground\">\n                                {model.clientAgencyName || '-'}\n                              </TableCell>\n                              <TableCell className=\"text-sm text-muted-foreground\">\n                                {model.teamLeader || '-'}\n                              </TableCell>\n                              <TableCell>\n                                <Input\n                                  type=\"number\"\n                                  min=\"0\"\n                                  max=\"24\"\n                                  value={model.hours}\n                                  onChange={(e) => updateModelEntry(day.id, model.id, 'hours', parseFloat(e.target.value) || 0)}\n                                  className=\"w-20\"\n                                />\n                              </TableCell>\n                              <TableCell>\n                                <Input\n                                  type=\"number\"\n                                  min=\"0\"\n                                  value={model.netSales}\n                                  onChange={(e) => updateModelEntry(day.id, model.id, 'netSales', parseFloat(e.target.value) || 0)}\n                                  className=\"w-24\"\n                                  placeholder=\"Net\"\n                                />\n                              </TableCell>\n                              <TableCell className=\"font-semibold\">\n                                ${model.total.toLocaleString()}\n                              </TableCell>\n                              <TableCell>\n                                <Button\n                                  variant=\"ghost\"\n                                  size=\"sm\"\n                                  onClick={() => removeModelEntry(day.id, model.id)}\n                                >\n                                  <Trash2 className=\"h-4 w-4\" />\n                                </Button>\n                              </TableCell>\n                            </TableRow>\n                          ))}\n                          <TableRow className=\"bg-muted/50\">\n                            <TableCell colSpan={5} className=\"font-semibold text-right\">\n                              Day Total:\n                            </TableCell>\n                            <TableCell className=\"font-bold\">\n                              ${getDayTotal(day.models).toLocaleString()}\n                            </TableCell>\n                            <TableCell></TableCell>\n                          </TableRow>\n                        </TableBody>\n                      </Table>\n                      </>\n                    )}\n                  </div>\n                ))}\n              </div>\n            </>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default function EditWeekPage() {\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <EditWeekPageContent />\n    </Suspense>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}