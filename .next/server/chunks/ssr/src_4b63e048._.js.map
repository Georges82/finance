{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/as941/Downloads/final_Finance_goat%202/Finance_goat/frontend/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/as941/Downloads/final_Finance_goat%202/Finance_goat/frontend/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/as941/Downloads/final_Finance_goat%202/Finance_goat/frontend/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Tabs = TabsPrimitive.Root\r\n\r\nconst TabsList = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.List>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.List\r\n    ref={ref}\r\n    className={cn(\r\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTabsList.displayName = TabsPrimitive.List.displayName\r\n\r\nconst TabsTrigger = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\r\n\r\nconst TabsContent = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.Content\r\n    ref={ref}\r\n    className={cn(\r\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTabsContent.displayName = TabsPrimitive.Content.displayName\r\n\r\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\r\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,gKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,gKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/as941/Downloads/final_Finance_goat%202/Finance_goat/frontend/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst labelVariants = cva(\r\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n)\r\n\r\nconst Label = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\r\n    VariantProps<typeof labelVariants>\r\n>(({ className, ...props }, ref) => (\r\n  <LabelPrimitive.Root\r\n    ref={ref}\r\n    className={cn(labelVariants(), className)}\r\n    {...props}\r\n  />\r\n))\r\nLabel.displayName = LabelPrimitive.Root.displayName\r\n\r\nexport { Label }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 202, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/as941/Downloads/final_Finance_goat%202/Finance_goat/frontend/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport {\r\n  Controller,\r\n  FormProvider,\r\n  useFormContext,\r\n  type ControllerProps,\r\n  type FieldPath,\r\n  type FieldValues,\r\n} from \"react-hook-form\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Label } from \"@/components/ui/label\"\r\n\r\nconst Form = FormProvider\r\n\r\ntype FormFieldContextValue<\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\r\n> = {\r\n  name: TName\r\n}\r\n\r\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\r\n  {} as FormFieldContextValue\r\n)\r\n\r\nconst FormField = <\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\r\n>({\r\n  ...props\r\n}: ControllerProps<TFieldValues, TName>) => {\r\n  return (\r\n    <FormFieldContext.Provider value={{ name: props.name }}>\r\n      <Controller {...props} />\r\n    </FormFieldContext.Provider>\r\n  )\r\n}\r\n\r\nconst useFormField = () => {\r\n  const fieldContext = React.useContext(FormFieldContext)\r\n  const itemContext = React.useContext(FormItemContext)\r\n  const { getFieldState, formState } = useFormContext()\r\n\r\n  const fieldState = getFieldState(fieldContext.name, formState)\r\n\r\n  if (!fieldContext) {\r\n    throw new Error(\"useFormField should be used within <FormField>\")\r\n  }\r\n\r\n  const { id } = itemContext\r\n\r\n  return {\r\n    id,\r\n    name: fieldContext.name,\r\n    formItemId: `${id}-form-item`,\r\n    formDescriptionId: `${id}-form-item-description`,\r\n    formMessageId: `${id}-form-item-message`,\r\n    ...fieldState,\r\n  }\r\n}\r\n\r\ntype FormItemContextValue = {\r\n  id: string\r\n}\r\n\r\nconst FormItemContext = React.createContext<FormItemContextValue>(\r\n  {} as FormItemContextValue\r\n)\r\n\r\nconst FormItem = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => {\r\n  const id = React.useId()\r\n\r\n  return (\r\n    <FormItemContext.Provider value={{ id }}>\r\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\r\n    </FormItemContext.Provider>\r\n  )\r\n})\r\nFormItem.displayName = \"FormItem\"\r\n\r\nconst FormLabel = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\r\n>(({ className, ...props }, ref) => {\r\n  const { error, formItemId } = useFormField()\r\n\r\n  return (\r\n    <Label\r\n      ref={ref}\r\n      className={cn(error && \"text-destructive\", className)}\r\n      htmlFor={formItemId}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nFormLabel.displayName = \"FormLabel\"\r\n\r\nconst FormControl = React.forwardRef<\r\n  React.ElementRef<typeof Slot>,\r\n  React.ComponentPropsWithoutRef<typeof Slot>\r\n>(({ ...props }, ref) => {\r\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\r\n\r\n  return (\r\n    <Slot\r\n      ref={ref}\r\n      id={formItemId}\r\n      aria-describedby={\r\n        !error\r\n          ? `${formDescriptionId}`\r\n          : `${formDescriptionId} ${formMessageId}`\r\n      }\r\n      aria-invalid={!!error}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nFormControl.displayName = \"FormControl\"\r\n\r\nconst FormDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => {\r\n  const { formDescriptionId } = useFormField()\r\n\r\n  return (\r\n    <p\r\n      ref={ref}\r\n      id={formDescriptionId}\r\n      className={cn(\"text-sm text-muted-foreground\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nFormDescription.displayName = \"FormDescription\"\r\n\r\nconst FormMessage = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, children, ...props }, ref) => {\r\n  const { error, formMessageId } = useFormField()\r\n  const body = error ? String(error?.message ?? \"\") : children\r\n\r\n  if (!body) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <p\r\n      ref={ref}\r\n      id={formMessageId}\r\n      className={cn(\"text-sm font-medium text-destructive\", className)}\r\n      {...props}\r\n    >\r\n      {body}\r\n    </p>\r\n  )\r\n})\r\nFormMessage.displayName = \"FormMessage\"\r\n\r\nexport {\r\n  useFormField,\r\n  Form,\r\n  FormItem,\r\n  FormLabel,\r\n  FormControl,\r\n  FormDescription,\r\n  FormMessage,\r\n  FormField,\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 355, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/as941/Downloads/final_Finance_goat%202/Finance_goat/frontend/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\r\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Select = SelectPrimitive.Root\r\n\r\nconst SelectGroup = SelectPrimitive.Group\r\n\r\nconst SelectValue = SelectPrimitive.Value\r\n\r\nconst SelectTrigger = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <SelectPrimitive.Icon asChild>\r\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\r\n    </SelectPrimitive.Icon>\r\n  </SelectPrimitive.Trigger>\r\n))\r\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\r\n\r\nconst SelectScrollUpButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollUpButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronUp className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollUpButton>\r\n))\r\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\r\n\r\nconst SelectScrollDownButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollDownButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronDown className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollDownButton>\r\n))\r\nSelectScrollDownButton.displayName =\r\n  SelectPrimitive.ScrollDownButton.displayName\r\n\r\nconst SelectContent = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\r\n>(({ className, children, position = \"popper\", ...props }, ref) => (\r\n  <SelectPrimitive.Portal>\r\n    <SelectPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        position === \"popper\" &&\r\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\r\n        className\r\n      )}\r\n      position={position}\r\n      {...props}\r\n    >\r\n      <SelectScrollUpButton />\r\n      <SelectPrimitive.Viewport\r\n        className={cn(\r\n          \"p-1\",\r\n          position === \"popper\" &&\r\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\r\n        )}\r\n      >\r\n        {children}\r\n      </SelectPrimitive.Viewport>\r\n      <SelectScrollDownButton />\r\n    </SelectPrimitive.Content>\r\n  </SelectPrimitive.Portal>\r\n))\r\nSelectContent.displayName = SelectPrimitive.Content.displayName\r\n\r\nconst SelectLabel = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectLabel.displayName = SelectPrimitive.Label.displayName\r\n\r\nconst SelectItem = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <SelectPrimitive.ItemIndicator>\r\n        <Check className=\"h-4 w-4\" />\r\n      </SelectPrimitive.ItemIndicator>\r\n    </span>\r\n\r\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n  </SelectPrimitive.Item>\r\n))\r\nSelectItem.displayName = SelectPrimitive.Item.displayName\r\n\r\nconst SelectSeparator = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\r\n\r\nexport {\r\n  Select,\r\n  SelectGroup,\r\n  SelectValue,\r\n  SelectTrigger,\r\n  SelectContent,\r\n  SelectLabel,\r\n  SelectItem,\r\n  SelectSeparator,\r\n  SelectScrollUpButton,\r\n  SelectScrollDownButton,\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 547, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/as941/Downloads/final_Finance_goat%202/Finance_goat/frontend/src/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Separator = React.forwardRef<\r\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\r\n>(\r\n  (\r\n    { className, orientation = \"horizontal\", decorative = true, ...props },\r\n    ref\r\n  ) => (\r\n    <SeparatorPrimitive.Root\r\n      ref={ref}\r\n      decorative={decorative}\r\n      orientation={orientation}\r\n      className={cn(\r\n        \"shrink-0 bg-border\",\r\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n)\r\nSeparator.displayName = SeparatorPrimitive.Root.displayName\r\n\r\nexport { Separator }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI/B,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO,EACtE,oBAEA,8OAAC,qKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;AAIf,UAAU,WAAW,GAAG,qKAAA,CAAA,OAAuB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 578, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/as941/Downloads/final_Finance_goat%202/Finance_goat/frontend/src/components/dashboard/managers/manager-form-sheet.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { Manager } from '@/lib/api';\nimport { Button } from '@/components/ui/button';\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from '@/components/ui/sheet';\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { Switch } from '@/components/ui/switch';\nimport { Separator } from '@/components/ui/separator';\n\nconst managerFormSchema = z.object({\n  name: z.string().min(2, 'Name must be at least 2 characters'),\n  role: z.enum(['Manager', 'Team Leader']),\n  telegramUsername: z.string().min(1, 'Telegram username is required'),\n  status: z.enum(['Active', 'Inactive']),\n  // Salary Rules\n  revenueThreshold: z.number().min(0, 'Revenue threshold must be positive'),\n  commissionRate: z.number().min(0, 'Commission rate must be positive'),\n  fixedSalary: z.number().min(0, 'Fixed salary must be positive'),\n}).refine((data) => {\n  return data.revenueThreshold > 0 && data.commissionRate > 0 && data.fixedSalary > 0;\n}, {\n  message: 'Please fill in all salary rule fields',\n  path: ['revenueThreshold'],\n});\n\ntype ManagerFormData = z.infer<typeof managerFormSchema>;\n\n// Using Manager interface from api.ts instead of local interface\n\ninterface ManagerFormSheetProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  manager?: Manager | null;\n  onSave: (data: ManagerFormData) => void;\n  type?: 'manager' | 'team_leader'; // Add type prop to differentiate\n}\n\nexport function ManagerFormSheet({\n  open,\n  onOpenChange,\n  manager,\n  onSave,\n  type = 'manager', // Default to manager\n}: ManagerFormSheetProps) {\n  const form = useForm<ManagerFormData>({\n    resolver: zodResolver(managerFormSchema),\n    defaultValues: {\n      name: '',\n      role: type === 'team_leader' ? 'Team Leader' : 'Manager',\n      telegramUsername: '',\n      status: 'Active',\n      revenueThreshold: 5000,\n      commissionRate: 8,\n      fixedSalary: 2000,\n    },\n  });\n\n  // Reset form when manager changes or form opens/closes\n  React.useEffect(() => {\n    if (open) {\n      form.reset({\n        name: manager?.name || '',\n        role: manager?.role || (type === 'team_leader' ? 'Team Leader' : 'Manager'),\n        telegramUsername: manager?.telegram_username || '',\n        status: manager?.status || 'Active',\n        revenueThreshold: manager?.revenue_threshold || 5000,\n        commissionRate: manager?.commission_rate || 8,\n        fixedSalary: manager?.fixed_salary || 2000,\n      });\n    }\n  }, [open, manager, form, type]);\n\n  const role = form.watch('role');\n\n  const onSubmit = (data: ManagerFormData) => {\n    onSave(data);\n  };\n\n  const handleOpenChange = (newOpen: boolean) => {\n    if (!newOpen) {\n      form.reset({\n        name: '',\n        role: type === 'team_leader' ? 'Team Leader' : 'Manager',\n        telegramUsername: '',\n        status: 'Active',\n        revenueThreshold: 5000,\n        commissionRate: 8,\n        fixedSalary: 2000,\n      });\n    }\n    onOpenChange(newOpen);\n  };\n\n  return (\n    <Sheet open={open} onOpenChange={handleOpenChange}>\n      <SheetContent className=\"w-[400px] sm:w-[540px] flex flex-col\">\n        <SheetHeader className=\"flex-shrink-0\">\n          <SheetTitle>\n            {manager \n              ? `Edit ${type === 'team_leader' ? 'Team Leader' : 'Manager'}`\n              : `Add ${type === 'team_leader' ? 'Team Leader' : 'Manager'}`\n            }\n          </SheetTitle>\n          <SheetDescription>\n            {manager \n              ? `Update ${type === 'team_leader' ? 'team leader' : 'manager'} information and salary rules.`\n              : `Add a new ${type === 'team_leader' ? 'team leader' : 'manager'} with salary configuration.`\n            }\n          </SheetDescription>\n        </SheetHeader>\n        <div className=\"flex-1 overflow-y-auto mt-6\">\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n              {/* Basic Information */}\n              <div className=\"space-y-4\">\n                <h3 className=\"text-lg font-medium\">Basic Information</h3>\n                \n                <FormField\n                  control={form.control}\n                  name=\"name\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Full Name</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"Enter full name\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                                 <FormField\n                   control={form.control}\n                   name=\"role\"\n                   render={({ field }) => (\n                     <FormItem>\n                       <FormLabel>Role</FormLabel>\n                       <Select onValueChange={field.onChange} defaultValue={field.value}>\n                         <FormControl>\n                           <SelectTrigger>\n                             <SelectValue placeholder=\"Select role\" />\n                           </SelectTrigger>\n                         </FormControl>\n                         <SelectContent>\n                           {type === 'team_leader' ? (\n                             <SelectItem value=\"Team Leader\">Team Leader</SelectItem>\n                           ) : (\n                             <SelectItem value=\"Manager\">Manager</SelectItem>\n                           )}\n                         </SelectContent>\n                       </Select>\n                       <FormDescription>\n                         {type === 'team_leader'\n                           ? 'Team leaders manage specific models and chatters'\n                           : 'Managers are auto-linked to all models'\n                         }\n                       </FormDescription>\n                       <FormMessage />\n                     </FormItem>\n                   )}\n                 />\n\n                 <FormField\n                   control={form.control}\n                   name=\"telegramUsername\"\n                   render={({ field }) => (\n                     <FormItem>\n                       <FormLabel>Telegram Username</FormLabel>\n                       <FormControl>\n                         <Input placeholder=\"@username\" {...field} />\n                       </FormControl>\n                       <FormMessage />\n                     </FormItem>\n                   )}\n                 />\n\n                 <FormField\n                   control={form.control}\n                   name=\"status\"\n                   render={({ field }) => (\n                     <FormItem>\n                       <FormLabel>Status</FormLabel>\n                       <Select onValueChange={field.onChange} defaultValue={field.value}>\n                         <FormControl>\n                           <SelectTrigger>\n                             <SelectValue placeholder=\"Select status\" />\n                           </SelectTrigger>\n                         </FormControl>\n                         <SelectContent>\n                           <SelectItem value=\"Active\">Active</SelectItem>\n                           <SelectItem value=\"Inactive\">Inactive</SelectItem>\n                         </SelectContent>\n                       </Select>\n                       <FormMessage />\n                     </FormItem>\n                   )}\n                 />\n              </div>\n\n              <Separator />\n\n                             {/* Salary Rules */}\n               <div className=\"space-y-4\">\n                 <h3 className=\"text-lg font-medium\">Salary Rules</h3>\n                 <div className=\"p-4 bg-muted/50 rounded-lg border\">\n                   <div className=\"flex items-center gap-2 mb-3\">\n                     <div className=\"w-3 h-3 bg-primary rounded-full\"></div>\n                     <span className=\"font-medium\">Team Leader / Manager (per model)</span>\n                   </div>\n                   \n                   <div className=\"space-y-4\">\n                     <div className=\"space-y-3\">\n                       <h4 className=\"font-medium text-sm\">Rule 1: If net revenue ≥ $____ → %____</h4>\n                       <div className=\"grid grid-cols-2 gap-3\">\n                         <FormField\n                           control={form.control}\n                           name=\"revenueThreshold\"\n                           render={({ field }) => (\n                             <FormItem>\n                               <FormLabel className=\"text-sm\">Revenue Threshold ($)</FormLabel>\n                               <FormControl>\n                                 <Input \n                                   type=\"number\" \n                                   placeholder=\"5000\"\n                                   {...field}\n                                   onChange={(e) => field.onChange(Number(e.target.value))}\n                                 />\n                               </FormControl>\n                               <FormMessage />\n                             </FormItem>\n                           )}\n                         />\n                         \n                         <FormField\n                           control={form.control}\n                           name=\"commissionRate\"\n                           render={({ field }) => (\n                             <FormItem>\n                               <FormLabel className=\"text-sm\">Commission Rate (%)</FormLabel>\n                               <FormControl>\n                                 <Input \n                                   type=\"number\" \n                                   placeholder=\"8\"\n                                   {...field}\n                                   onChange={(e) => field.onChange(Number(e.target.value))}\n                                 />\n                               </FormControl>\n                               <FormMessage />\n                             </FormItem>\n                           )}\n                         />\n                       </div>\n                     </div>\n                     \n                     <div className=\"space-y-3\">\n                       <h4 className=\"font-medium text-sm\">Rule 2: Else → $____ fixed</h4>\n                       <FormField\n                         control={form.control}\n                         name=\"fixedSalary\"\n                         render={({ field }) => (\n                           <FormItem>\n                             <FormLabel className=\"text-sm\">Fixed Salary ($)</FormLabel>\n                             <FormControl>\n                               <Input \n                                 type=\"number\" \n                                 placeholder=\"2000\"\n                                 {...field}\n                                 onChange={(e) => field.onChange(Number(e.target.value))}\n                               />\n                             </FormControl>\n                             <FormMessage />\n                           </FormItem>\n                         )}\n                       />\n                     </div>\n                     \n                     \n                   </div>\n                 </div>\n               </div>\n             </form>\n           </Form>\n         </div>\n         \n         {/* Fixed Footer with Buttons */}\n         <div className=\"flex-shrink-0 border-t pt-4 mt-6\">\n           <div className=\"flex justify-end space-x-2\">\n             <Button\n               type=\"button\"\n               variant=\"outline\"\n               onClick={() => handleOpenChange(false)}\n             >\n               Cancel\n             </Button>\n                                                       <Button \n                 type=\"button\"\n                 onClick={form.handleSubmit(onSubmit)}\n               >\n                 {manager ? 'Update Manager/Team Leader' : 'Add Manager/Team Leader'}\n               </Button>\n           </div>\n         </div>\n       </SheetContent>\n     </Sheet>\n   );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAEA;AACA;AAOA;AASA;AACA;AAQA;AAjCA;;;;;;;;;;;;AAmCA,MAAM,oBAAoB,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,EAAE;IACjC,MAAM,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,GAAG;IACxB,MAAM,CAAA,GAAA,oIAAA,CAAA,OAAM,AAAD,EAAE;QAAC;QAAW;KAAc;IACvC,kBAAkB,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,GAAG;IACpC,QAAQ,CAAA,GAAA,oIAAA,CAAA,OAAM,AAAD,EAAE;QAAC;QAAU;KAAW;IACrC,eAAe;IACf,kBAAkB,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,GAAG;IACpC,gBAAgB,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,GAAG;IAClC,aAAa,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,GAAG;AACjC,GAAG,MAAM,CAAC,CAAC;IACT,OAAO,KAAK,gBAAgB,GAAG,KAAK,KAAK,cAAc,GAAG,KAAK,KAAK,WAAW,GAAG;AACpF,GAAG;IACD,SAAS;IACT,MAAM;QAAC;KAAmB;AAC5B;AAcO,SAAS,iBAAiB,EAC/B,IAAI,EACJ,YAAY,EACZ,OAAO,EACP,MAAM,EACN,OAAO,SAAS,EACM;IACtB,MAAM,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAmB;QACpC,UAAU,CAAA,GAAA,8JAAA,CAAA,cAAW,AAAD,EAAE;QACtB,eAAe;YACb,MAAM;YACN,MAAM,SAAS,gBAAgB,gBAAgB;YAC/C,kBAAkB;YAClB,QAAQ;YACR,kBAAkB;YAClB,gBAAgB;YAChB,aAAa;QACf;IACF;IAEA,uDAAuD;IACvD,qMAAA,CAAA,UAAK,CAAC,SAAS,CAAC;QACd,IAAI,MAAM;YACR,KAAK,KAAK,CAAC;gBACT,MAAM,SAAS,QAAQ;gBACvB,MAAM,SAAS,QAAQ,CAAC,SAAS,gBAAgB,gBAAgB,SAAS;gBAC1E,kBAAkB,SAAS,qBAAqB;gBAChD,QAAQ,SAAS,UAAU;gBAC3B,kBAAkB,SAAS,qBAAqB;gBAChD,gBAAgB,SAAS,mBAAmB;gBAC5C,aAAa,SAAS,gBAAgB;YACxC;QACF;IACF,GAAG;QAAC;QAAM;QAAS;QAAM;KAAK;IAE9B,MAAM,OAAO,KAAK,KAAK,CAAC;IAExB,MAAM,WAAW,CAAC;QAChB,OAAO;IACT;IAEA,MAAM,mBAAmB,CAAC;QACxB,IAAI,CAAC,SAAS;YACZ,KAAK,KAAK,CAAC;gBACT,MAAM;gBACN,MAAM,SAAS,gBAAgB,gBAAgB;gBAC/C,kBAAkB;gBAClB,QAAQ;gBACR,kBAAkB;gBAClB,gBAAgB;gBAChB,aAAa;YACf;QACF;QACA,aAAa;IACf;IAEA,qBACE,8OAAC,iIAAA,CAAA,QAAK;QAAC,MAAM;QAAM,cAAc;kBAC/B,cAAA,8OAAC,iIAAA,CAAA,eAAY;YAAC,WAAU;;8BACtB,8OAAC,iIAAA,CAAA,cAAW;oBAAC,WAAU;;sCACrB,8OAAC,iIAAA,CAAA,aAAU;sCACR,UACG,CAAC,KAAK,EAAE,SAAS,gBAAgB,gBAAgB,WAAW,GAC5D,CAAC,IAAI,EAAE,SAAS,gBAAgB,gBAAgB,WAAW;;;;;;sCAGjE,8OAAC,iIAAA,CAAA,mBAAgB;sCACd,UACG,CAAC,OAAO,EAAE,SAAS,gBAAgB,gBAAgB,UAAU,8BAA8B,CAAC,GAC5F,CAAC,UAAU,EAAE,SAAS,gBAAgB,gBAAgB,UAAU,2BAA2B,CAAC;;;;;;;;;;;;8BAIpG,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,gIAAA,CAAA,OAAI;wBAAE,GAAG,IAAI;kCACZ,cAAA,8OAAC;4BAAK,UAAU,KAAK,YAAY,CAAC;4BAAW,WAAU;;8CAErD,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAG,WAAU;sDAAsB;;;;;;sDAEpC,8OAAC,gIAAA,CAAA,YAAS;4CACR,SAAS,KAAK,OAAO;4CACrB,MAAK;4CACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,gIAAA,CAAA,WAAQ;;sEACP,8OAAC,gIAAA,CAAA,YAAS;sEAAC;;;;;;sEACX,8OAAC,gIAAA,CAAA,cAAW;sEACV,cAAA,8OAAC,iIAAA,CAAA,QAAK;gEAAC,aAAY;gEAAmB,GAAG,KAAK;;;;;;;;;;;sEAEhD,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;sDAKD,8OAAC,gIAAA,CAAA,YAAS;4CACxB,SAAS,KAAK,OAAO;4CACrB,MAAK;4CACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,gIAAA,CAAA,WAAQ;;sEACP,8OAAC,gIAAA,CAAA,YAAS;sEAAC;;;;;;sEACX,8OAAC,kIAAA,CAAA,SAAM;4DAAC,eAAe,MAAM,QAAQ;4DAAE,cAAc,MAAM,KAAK;;8EAC9D,8OAAC,gIAAA,CAAA,cAAW;8EACV,cAAA,8OAAC,kIAAA,CAAA,gBAAa;kFACZ,cAAA,8OAAC,kIAAA,CAAA,cAAW;4EAAC,aAAY;;;;;;;;;;;;;;;;8EAG7B,8OAAC,kIAAA,CAAA,gBAAa;8EACX,SAAS,8BACR,8OAAC,kIAAA,CAAA,aAAU;wEAAC,OAAM;kFAAc;;;;;+FAEhC,8OAAC,kIAAA,CAAA,aAAU;wEAAC,OAAM;kFAAU;;;;;;;;;;;;;;;;;sEAIlC,8OAAC,gIAAA,CAAA,kBAAe;sEACb,SAAS,gBACN,qDACA;;;;;;sEAGN,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;sDAKlB,8OAAC,gIAAA,CAAA,YAAS;4CACR,SAAS,KAAK,OAAO;4CACrB,MAAK;4CACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,gIAAA,CAAA,WAAQ;;sEACP,8OAAC,gIAAA,CAAA,YAAS;sEAAC;;;;;;sEACX,8OAAC,gIAAA,CAAA,cAAW;sEACV,cAAA,8OAAC,iIAAA,CAAA,QAAK;gEAAC,aAAY;gEAAa,GAAG,KAAK;;;;;;;;;;;sEAE1C,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;sDAKlB,8OAAC,gIAAA,CAAA,YAAS;4CACR,SAAS,KAAK,OAAO;4CACrB,MAAK;4CACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,gIAAA,CAAA,WAAQ;;sEACP,8OAAC,gIAAA,CAAA,YAAS;sEAAC;;;;;;sEACX,8OAAC,kIAAA,CAAA,SAAM;4DAAC,eAAe,MAAM,QAAQ;4DAAE,cAAc,MAAM,KAAK;;8EAC9D,8OAAC,gIAAA,CAAA,cAAW;8EACV,cAAA,8OAAC,kIAAA,CAAA,gBAAa;kFACZ,cAAA,8OAAC,kIAAA,CAAA,cAAW;4EAAC,aAAY;;;;;;;;;;;;;;;;8EAG7B,8OAAC,kIAAA,CAAA,gBAAa;;sFACZ,8OAAC,kIAAA,CAAA,aAAU;4EAAC,OAAM;sFAAS;;;;;;sFAC3B,8OAAC,kIAAA,CAAA,aAAU;4EAAC,OAAM;sFAAW;;;;;;;;;;;;;;;;;;sEAGjC,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;;;;;;8CAMrB,8OAAC,qIAAA,CAAA,YAAS;;;;;8CAGT,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAG,WAAU;sDAAsB;;;;;;sDACpC,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAI,WAAU;;sEACb,8OAAC;4DAAI,WAAU;;;;;;sEACf,8OAAC;4DAAK,WAAU;sEAAc;;;;;;;;;;;;8DAGhC,8OAAC;oDAAI,WAAU;;sEACb,8OAAC;4DAAI,WAAU;;8EACb,8OAAC;oEAAG,WAAU;8EAAsB;;;;;;8EACpC,8OAAC;oEAAI,WAAU;;sFACb,8OAAC,gIAAA,CAAA,YAAS;4EACR,SAAS,KAAK,OAAO;4EACrB,MAAK;4EACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,gIAAA,CAAA,WAAQ;;sGACP,8OAAC,gIAAA,CAAA,YAAS;4FAAC,WAAU;sGAAU;;;;;;sGAC/B,8OAAC,gIAAA,CAAA,cAAW;sGACV,cAAA,8OAAC,iIAAA,CAAA,QAAK;gGACJ,MAAK;gGACL,aAAY;gGACX,GAAG,KAAK;gGACT,UAAU,CAAC,IAAM,MAAM,QAAQ,CAAC,OAAO,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;sGAGzD,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;sFAKlB,8OAAC,gIAAA,CAAA,YAAS;4EACR,SAAS,KAAK,OAAO;4EACrB,MAAK;4EACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,gIAAA,CAAA,WAAQ;;sGACP,8OAAC,gIAAA,CAAA,YAAS;4FAAC,WAAU;sGAAU;;;;;;sGAC/B,8OAAC,gIAAA,CAAA,cAAW;sGACV,cAAA,8OAAC,iIAAA,CAAA,QAAK;gGACJ,MAAK;gGACL,aAAY;gGACX,GAAG,KAAK;gGACT,UAAU,CAAC,IAAM,MAAM,QAAQ,CAAC,OAAO,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;sGAGzD,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;sEAOtB,8OAAC;4DAAI,WAAU;;8EACb,8OAAC;oEAAG,WAAU;8EAAsB;;;;;;8EACpC,8OAAC,gIAAA,CAAA,YAAS;oEACR,SAAS,KAAK,OAAO;oEACrB,MAAK;oEACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,gIAAA,CAAA,WAAQ;;8FACP,8OAAC,gIAAA,CAAA,YAAS;oFAAC,WAAU;8FAAU;;;;;;8FAC/B,8OAAC,gIAAA,CAAA,cAAW;8FACV,cAAA,8OAAC,iIAAA,CAAA,QAAK;wFACJ,MAAK;wFACL,aAAY;wFACX,GAAG,KAAK;wFACT,UAAU,CAAC,IAAM,MAAM,QAAQ,CAAC,OAAO,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;8FAGzD,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAehC,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,kIAAA,CAAA,SAAM;gCACL,MAAK;gCACL,SAAQ;gCACR,SAAS,IAAM,iBAAiB;0CACjC;;;;;;0CAGyC,8OAAC,kIAAA,CAAA,SAAM;gCAC7C,MAAK;gCACL,SAAS,KAAK,YAAY,CAAC;0CAE1B,UAAU,+BAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO3D","debugId":null}},
    {"offset": {"line": 1292, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/as941/Downloads/final_Finance_goat%202/Finance_goat/frontend/src/components/dashboard/managers/assistant-form-sheet.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport * as z from \"zod\"\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\"\nimport { Input } from \"@/components/ui/input\"\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\"\nimport { Switch } from \"@/components/ui/switch\"\nimport { Separator } from \"@/components/ui/separator\"\nimport { Assistant } from \"@/lib/api\"\n\n// Using Assistant interface from api.ts instead of local interface\n\n// Form schema for assistant\nconst assistantFormSchema = z.object({\n  fullName: z.string().min(1, \"Full name is required\"),\n  role: z.literal('Assistant'),\n  telegramUsername: z.string().min(1, \"Telegram username is required\"),\n  status: z.enum(['Active', 'Inactive']),\n  salaryType: z.literal('Fixed'),\n  fixedSalary: z.number().min(0, \"Fixed salary must be positive\"),\n  salaryPeriod: z.enum(['Weekly', 'Bi-weekly', 'Monthly']),\n})\n\ntype AssistantFormValues = z.infer<typeof assistantFormSchema>\n\ninterface AssistantFormSheetProps {\n  open: boolean\n  onOpenChange: (open: boolean) => void\n  assistant?: Assistant | null\n  onSubmit: (data: AssistantFormValues) => void\n}\n\nexport function AssistantFormSheet({\n  open,\n  onOpenChange,\n  assistant,\n  onSubmit,\n}: AssistantFormSheetProps) {\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  const form = useForm<AssistantFormValues>({\n    resolver: zodResolver(assistantFormSchema),\n    defaultValues: {\n      fullName: \"\",\n      role: 'Assistant',\n      telegramUsername: \"\",\n      status: 'Active',\n      salaryType: 'Fixed',\n      fixedSalary: 0,\n      salaryPeriod: 'Weekly',\n    },\n  })\n\n  // Reset form when assistant changes\n  useEffect(() => {\n    if (assistant) {\n      form.reset({\n        fullName: assistant.name,\n        role: assistant.role,\n        telegramUsername: assistant.telegram_username,\n        status: assistant.status,\n        salaryType: assistant.salary_type,\n        fixedSalary: assistant.fixed_salary,\n        salaryPeriod: assistant.salary_period,\n      })\n    } else {\n      form.reset({\n        fullName: \"\",\n        role: 'Assistant',\n        telegramUsername: \"\",\n        status: 'Active',\n        salaryType: 'Fixed',\n        fixedSalary: 0,\n        salaryPeriod: 'Weekly',\n      })\n    }\n  }, [assistant, form])\n\n  const handleOpenChange = (newOpen: boolean) => {\n    if (!newOpen) {\n      form.reset()\n    }\n    onOpenChange(newOpen)\n  }\n\n  const handleSubmit = async (data: AssistantFormValues) => {\n    setIsSubmitting(true)\n    try {\n      await onSubmit(data)\n      handleOpenChange(false)\n    } catch (error) {\n      console.error(\"Error submitting assistant form:\", error)\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  return (\n    <Sheet open={open} onOpenChange={handleOpenChange}>\n      <SheetContent className=\"w-[400px] sm:w-[540px] flex flex-col\">\n        <SheetHeader className=\"flex-shrink-0\">\n          <SheetTitle>\n            {assistant ? 'Edit Assistant' : 'Add Assistant'}\n          </SheetTitle>\n          <SheetDescription>\n            {assistant \n              ? 'Update assistant information and salary configuration.'\n              : 'Add a new assistant with fixed salary configuration.'\n            }\n          </SheetDescription>\n        </SheetHeader>\n        <div className=\"flex-1 overflow-y-auto mt-6\">\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(handleSubmit)} className=\"space-y-6\">\n              {/* Basic Information */}\n              <div className=\"space-y-4\">\n                <h3 className=\"text-lg font-medium\">Basic Information</h3>\n                \n                <FormField\n                  control={form.control}\n                  name=\"fullName\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Full Name</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"Enter full name\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"role\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Role</FormLabel>\n                      <Select onValueChange={field.onChange} defaultValue={field.value}>\n                        <FormControl>\n                          <SelectTrigger>\n                            <SelectValue placeholder=\"Select role\" />\n                          </SelectTrigger>\n                        </FormControl>\n                        <SelectContent>\n                          <SelectItem value=\"Assistant\">Assistant</SelectItem>\n                        </SelectContent>\n                      </Select>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"telegramUsername\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Telegram Username</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"@username\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"status\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Status</FormLabel>\n                      <Select onValueChange={field.onChange} defaultValue={field.value}>\n                        <FormControl>\n                          <SelectTrigger>\n                            <SelectValue placeholder=\"Select status\" />\n                          </SelectTrigger>\n                        </FormControl>\n                        <SelectContent>\n                          <SelectItem value=\"Active\">Active</SelectItem>\n                          <SelectItem value=\"Inactive\">Inactive</SelectItem>\n                        </SelectContent>\n                      </Select>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              <Separator />\n\n              {/* Salary Rules */}\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center space-x-2\">\n                  <div className=\"w-3 h-3 rounded-full bg-primary\"></div>\n                  <h3 className=\"text-lg font-medium\">Salary Rules</h3>\n                </div>\n                \n                <div className=\"bg-muted/50 border rounded-lg p-4 space-y-4\">\n                  <div className=\"flex items-center space-x-2\">\n                    <div className=\"w-2 h-2 rounded-full bg-primary\"></div>\n                    <span className=\"font-medium\">Assistant</span>\n                  </div>\n                  \n                  <div className=\"space-y-4\">\n                    <FormField\n                      control={form.control}\n                      name=\"fixedSalary\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Fixed Salary</FormLabel>\n                          <FormControl>\n                            <Input \n                              type=\"number\"\n                              placeholder=\"0.00\"\n                              {...field}\n                              onChange={(e) => field.onChange(parseFloat(e.target.value) || 0)}\n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    <FormField\n                      control={form.control}\n                      name=\"salaryPeriod\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Salary Period</FormLabel>\n                          <Select onValueChange={field.onChange} defaultValue={field.value}>\n                            <FormControl>\n                              <SelectTrigger>\n                                <SelectValue placeholder=\"Select period\" />\n                              </SelectTrigger>\n                            </FormControl>\n                            <SelectContent>\n                              <SelectItem value=\"Weekly\">per week</SelectItem>\n                              <SelectItem value=\"Bi-weekly\">per bi-weekly</SelectItem>\n                              <SelectItem value=\"Monthly\">per monthly</SelectItem>\n                            </SelectContent>\n                          </Select>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                  </div>\n\n                  \n                </div>\n              </div>\n            </form>\n          </Form>\n        </div>\n\n        <div className=\"flex-shrink-0 flex justify-end space-x-2 pt-6 border-t\">\n          <Button\n            type=\"button\"\n            variant=\"outline\"\n            onClick={() => handleOpenChange(false)}\n          >\n            Cancel\n          </Button>\n          <Button \n            type=\"button\"\n            onClick={form.handleSubmit(handleSubmit)}\n            disabled={isSubmitting}\n          >\n            {assistant ? 'Update Assistant' : 'Add Assistant'}\n          </Button>\n        </div>\n      </SheetContent>\n    </Sheet>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1960, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/as941/Downloads/final_Finance_goat%202/Finance_goat/frontend/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Table = React.forwardRef<\r\n  HTMLTableElement,\r\n  React.HTMLAttributes<HTMLTableElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div className=\"relative w-full overflow-auto\">\r\n    <table\r\n      ref={ref}\r\n      className={cn(\"w-full caption-bottom text-sm\", className)}\r\n      {...props}\r\n    />\r\n  </div>\r\n))\r\nTable.displayName = \"Table\"\r\n\r\nconst TableHeader = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\r\n))\r\nTableHeader.displayName = \"TableHeader\"\r\n\r\nconst TableBody = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tbody\r\n    ref={ref}\r\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableBody.displayName = \"TableBody\"\r\n\r\nconst TableFooter = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tfoot\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableFooter.displayName = \"TableFooter\"\r\n\r\nconst TableRow = React.forwardRef<\r\n  HTMLTableRowElement,\r\n  React.HTMLAttributes<HTMLTableRowElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tr\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableRow.displayName = \"TableRow\"\r\n\r\nconst TableHead = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.ThHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <th\r\n    ref={ref}\r\n    className={cn(\r\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableHead.displayName = \"TableHead\"\r\n\r\nconst TableCell = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.TdHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <td\r\n    ref={ref}\r\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCell.displayName = \"TableCell\"\r\n\r\nconst TableCaption = React.forwardRef<\r\n  HTMLTableCaptionElement,\r\n  React.HTMLAttributes<HTMLTableCaptionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <caption\r\n    ref={ref}\r\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCaption.displayName = \"TableCaption\"\r\n\r\nexport {\r\n  Table,\r\n  TableHeader,\r\n  TableBody,\r\n  TableFooter,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableCaption,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2070, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/as941/Downloads/final_Finance_goat%202/Finance_goat/frontend/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\r\n        outline: \"text-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface BadgeProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof badgeVariants> {}\r\n\r\nfunction Badge({ className, variant, ...props }: BadgeProps) {\r\n  return (\r\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\r\n  )\r\n}\r\n\r\nexport { Badge, badgeVariants }\r\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 2112, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/as941/Downloads/final_Finance_goat%202/Finance_goat/frontend/src/components/dashboard/managers/manager-period-table.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Badge } from '@/components/ui/badge';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Button } from '@/components/ui/button';\nimport { Edit, Trash2 } from 'lucide-react';\nimport { Manager } from '@/lib/api';\n\ninterface ManagerWithSalaries extends Manager {\n  period_salaries: {\n    [periodId: string]: {\n      week1_salary: number;\n      week2_salary: number;\n      total_salary: number;\n      payment_status: 'Paid' | 'Not Paid';\n    };\n  };\n}\n\ninterface Period {\n  id: string;\n  name: string;\n}\n\ninterface ManagerPeriodTableProps {\n  managers: ManagerWithSalaries[];\n  selectedPeriods: Period[];\n  loading: boolean;\n  onEditManager: (manager: Manager) => void;\n  onDeleteManager: (manager: Manager) => void;\n  getStatusColor: (status: string) => string;\n  onUpdatePaymentStatus: (managerId: string, periodId: string, status: 'Paid' | 'Not Paid') => void;\n  roleFilter?: 'Manager' | 'Team Leader';\n}\n\nexport function ManagerPeriodTable({\n  managers,\n  selectedPeriods,\n  loading,\n  onEditManager,\n  onDeleteManager,\n  getStatusColor,\n  onUpdatePaymentStatus,\n  roleFilter = 'Manager'\n}: ManagerPeriodTableProps) {\n  const getPeriodData = (manager: ManagerWithSalaries, periodId: string) => {\n    return manager.period_salaries?.[periodId] || {\n      week1_salary: 0,\n      week2_salary: 0,\n      total_salary: 0,\n      payment_status: 'Not Paid' as const\n    };\n  };\n\n  const filteredManagers = managers.filter(m => m.role === roleFilter);\n\n  return (\n    <div className=\"overflow-x-auto\">\n      <Table>\n        <TableHeader>\n          <TableRow>\n            <TableHead className=\"sticky left-0 bg-background z-10\">Name</TableHead>\n            <TableHead>Contact</TableHead>\n            <TableHead>Salary Type</TableHead>\n            <TableHead>Salary Details</TableHead>\n            <TableHead>Status</TableHead>\n            {selectedPeriods.map((period) => (\n              <TableHead key={period.id} colSpan={4} className=\"text-center border-l\">\n                {period.name}\n                <div className=\"text-xs text-muted-foreground mt-1\">\n                  Week 1 | Week 2 | Total | Paid\n                </div>\n              </TableHead>\n            ))}\n            <TableHead className=\"sticky right-0 bg-background z-10\">Actions</TableHead>\n          </TableRow>\n        </TableHeader>\n        <TableBody>\n          {loading ? (\n            <TableRow key=\"loading-managers\">\n              <TableCell colSpan={6 + selectedPeriods.length * 4} className=\"text-center py-8\">\n                <div className=\"flex items-center justify-center space-x-2\">\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-primary\"></div>\n                  <span>Loading managers...</span>\n                </div>\n              </TableCell>\n            </TableRow>\n          ) : filteredManagers.length === 0 ? (\n            <TableRow key=\"no-managers\">\n              <TableCell colSpan={6 + selectedPeriods.length * 4} className=\"text-center py-8\">\n                <div className=\"text-muted-foreground\">\n                  No managers found\n                </div>\n              </TableCell>\n            </TableRow>\n          ) : (\n            filteredManagers.map((manager) => (\n              <TableRow key={`manager-${manager.manager_id}`} className=\"hover:bg-muted/50\">\n                <TableCell className=\"font-medium sticky left-0 bg-background z-10\">\n                  {manager.name}\n                </TableCell>\n                <TableCell>{manager.telegram_username}</TableCell>\n                <TableCell>\n                  <Badge variant=\"outline\">{manager.salary_type}</Badge>\n                </TableCell>\n                <TableCell>\n                  {manager.salary_type === 'Commission-based' ? (\n                    <div className=\"text-sm\">\n                      <div className=\"font-medium\">Commission-based</div>\n                      <div className=\"text-xs text-muted-foreground\">\n                        ≥${manager.revenue_threshold?.toLocaleString()} → {manager.commission_rate}%\n                      </div>\n                      <div className=\"text-xs text-muted-foreground\">\n                        Else → ${manager.fixed_salary?.toLocaleString()}\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"text-sm\">\n                      <div className=\"font-medium\">Fixed Salary</div>\n                      <div className=\"text-xs text-muted-foreground\">\n                        ${manager.fixed_salary?.toLocaleString()}\n                      </div>\n                    </div>\n                  )}\n                </TableCell>\n                <TableCell>\n                  <Badge className={getStatusColor(manager.status)}>\n                    {manager.status}\n                  </Badge>\n                </TableCell>\n                {selectedPeriods.map((period) => {\n                  const periodData = getPeriodData(manager, period.id);\n                  return (\n                    <React.Fragment key={period.id}>\n                      <TableCell className=\"text-center text-sm border-l\">\n                        <div className=\"font-mono\">\n                          ${periodData.week1_salary.toLocaleString()}\n                        </div>\n                      </TableCell>\n                      <TableCell className=\"text-center text-sm\">\n                        <div className=\"font-mono\">\n                          ${periodData.week2_salary.toLocaleString()}\n                        </div>\n                      </TableCell>\n                      <TableCell className=\"text-center font-medium\">\n                        <div className=\"font-mono text-primary\">\n                          ${periodData.total_salary.toLocaleString()}\n                        </div>\n                      </TableCell>\n                      <TableCell className=\"text-center\">\n                        <Select\n                          value={periodData.payment_status}\n                          onValueChange={(val) => {\n                            onUpdatePaymentStatus(manager.manager_id, period.id, val as 'Paid' | 'Not Paid');\n                          }}\n                        >\n                          <SelectTrigger className=\"h-7 w-28 text-xs\">\n                            <SelectValue />\n                          </SelectTrigger>\n                          <SelectContent>\n                            <SelectItem value=\"Not Paid\">Not Paid</SelectItem>\n                            <SelectItem value=\"Paid\">Paid</SelectItem>\n                          </SelectContent>\n                        </Select>\n                      </TableCell>\n                    </React.Fragment>\n                  );\n                })}\n                <TableCell className=\"sticky right-0 bg-background z-10\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => onEditManager(manager)}\n                      className=\"h-8 w-8 p-0\"\n                    >\n                      <Edit className=\"h-4 w-4\" />\n                    </Button>\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => onDeleteManager(manager)}\n                      className=\"h-8 w-8 p-0 text-destructive hover:text-destructive\"\n                    >\n                      <Trash2 className=\"h-4 w-4\" />\n                    </Button>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))\n          )}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n\n\n\n\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2600, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/as941/Downloads/final_Finance_goat%202/Finance_goat/frontend/src/components/dashboard/managers/assistant-period-table.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Badge } from '@/components/ui/badge';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Assistant } from '@/lib/api';\nimport { Button } from '@/components/ui/button';\nimport { Edit, Trash2 } from 'lucide-react';\n\ninterface AssistantWithSalaries extends Assistant {\n  period_salaries: {\n    [periodId: string]: {\n      week1_salary: number;\n      week2_salary: number;\n      total_salary: number;\n      payment_status: 'Paid' | 'Not Paid';\n    };\n  };\n}\n\ninterface Period {\n  id: string;\n  name: string;\n}\n\ninterface AssistantPeriodTableProps {\n  assistants: AssistantWithSalaries[];\n  selectedPeriods: Period[];\n  loading: boolean;\n  getStatusColor: (status: string) => string;\n  onUpdatePaymentStatus: (assistantId: string, periodId: string, status: 'Paid' | 'Not Paid') => void;\n  onEditAssistant: (assistant: Assistant) => void;\n  onDeleteAssistant: (assistant: Assistant) => void;\n}\n\nexport function AssistantPeriodTable({\n  assistants,\n  selectedPeriods,\n  loading,\n  getStatusColor,\n  onUpdatePaymentStatus,\n  onEditAssistant,\n  onDeleteAssistant\n}: AssistantPeriodTableProps) {\n  const getPeriodData = (assistant: AssistantWithSalaries, periodId: string) => {\n    return assistant.period_salaries?.[periodId] || {\n      week1_salary: 0,\n      week2_salary: 0,\n      total_salary: 0,\n      payment_status: 'Not Paid' as const\n    };\n  };\n\n  return (\n    <div className=\"overflow-x-auto\">\n      <Table>\n        <TableHeader>\n          <TableRow>\n            <TableHead className=\"sticky left-0 bg-background z-10\">Name</TableHead>\n            <TableHead>Contact</TableHead>\n            <TableHead>Salary Type</TableHead>\n            <TableHead>Salary Details</TableHead>\n            <TableHead>Status</TableHead>\n            {selectedPeriods.map((period) => (\n              <TableHead key={period.id} colSpan={4} className=\"text-center border-l\">\n                {period.name}\n                <div className=\"text-xs text-muted-foreground mt-1\">\n                  Week 1 | Week 2 | Total | Paid\n                </div>\n              </TableHead>\n            ))}\n            <TableHead className=\"sticky right-0 bg-background z-10\">Actions</TableHead>\n          </TableRow>\n        </TableHeader>\n        <TableBody>\n          {loading ? (\n            <TableRow key=\"loading-assistants\">\n              <TableCell colSpan={5 + selectedPeriods.length * 4} className=\"text-center py-8\">\n                <div className=\"flex items-center justify-center space-x-2\">\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-primary\"></div>\n                  <span>Loading assistants...</span>\n                </div>\n              </TableCell>\n            </TableRow>\n          ) : assistants.length === 0 ? (\n            <TableRow key=\"no-assistants\">\n              <TableCell colSpan={5 + selectedPeriods.length * 4} className=\"text-center py-8\">\n                <div className=\"text-muted-foreground\">\n                  No assistants found\n                </div>\n              </TableCell>\n            </TableRow>\n          ) : (\n            assistants.map((assistant) => (\n              <TableRow key={`assistant-${assistant.assistant_id}`} className=\"hover:bg-muted/50\">\n                <TableCell className=\"font-medium sticky left-0 bg-background z-10\">\n                  {assistant.name}\n                </TableCell>\n                <TableCell>{assistant.telegram_username}</TableCell>\n                <TableCell>\n                  <Badge variant=\"outline\">{assistant.salary_type}</Badge>\n                </TableCell>\n                <TableCell>\n                  <div className=\"text-sm\">\n                    <div className=\"font-medium\">Fixed Salary</div>\n                    <div className=\"text-xs text-muted-foreground\">\n                      ${assistant.fixed_salary?.toLocaleString()}\n                    </div>\n                    <div className=\"text-xs text-muted-foreground\">\n                      {assistant.salary_period} payment\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <Badge className={getStatusColor(assistant.status)}>\n                    {assistant.status}\n                  </Badge>\n                </TableCell>\n                {selectedPeriods.map((period) => {\n                  const periodData = getPeriodData(assistant, period.id);\n                  return (\n                    <React.Fragment key={period.id}>\n                      <TableCell className=\"text-center text-sm border-l\">\n                        <div className=\"font-mono\">\n                          ${periodData.week1_salary.toLocaleString()}\n                        </div>\n                      </TableCell>\n                      <TableCell className=\"text-center text-sm\">\n                        <div className=\"font-mono\">\n                          ${periodData.week2_salary.toLocaleString()}\n                        </div>\n                      </TableCell>\n                      <TableCell className=\"text-center font-medium\">\n                        <div className=\"font-mono text-primary\">\n                          ${periodData.total_salary.toLocaleString()}\n                        </div>\n                      </TableCell>\n                      <TableCell className=\"text-center\">\n                        <Select\n                          value={periodData.payment_status}\n                          onValueChange={(val) => {\n                            onUpdatePaymentStatus(assistant.assistant_id, period.id, val as 'Paid' | 'Not Paid');\n                          }}\n                        >\n                          <SelectTrigger className=\"h-7 w-28 text-xs\">\n                            <SelectValue />\n                          </SelectTrigger>\n                          <SelectContent>\n                            <SelectItem value=\"Not Paid\">Not Paid</SelectItem>\n                            <SelectItem value=\"Paid\">Paid</SelectItem>\n                          </SelectContent>\n                        </Select>\n                      </TableCell>\n                    </React.Fragment>\n                  );\n                })}\n                <TableCell className=\"sticky right-0 bg-background z-10\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => onEditAssistant(assistant)}\n                      className=\"h-8 w-8 p-0\"\n                    >\n                      <Edit className=\"h-4 w-4\" />\n                    </Button>\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => onDeleteAssistant(assistant)}\n                      className=\"h-8 w-8 p-0 text-destructive hover:text-destructive\"\n                    >\n                      <Trash2 className=\"h-4 w-4\" />\n                    </Button>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))\n          )}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3057, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/as941/Downloads/final_Finance_goat%202/Finance_goat/frontend/src/app/dashboard/managers/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Badge } from '@/components/ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Search, Plus, Edit, Trash2, DollarSign, Users } from 'lucide-react';\nimport { ManagerFormSheet } from '@/components/dashboard/managers/manager-form-sheet';\nimport { AssistantFormSheet } from '@/components/dashboard/managers/assistant-form-sheet';\nimport { ManagerPeriodTable } from '@/components/dashboard/managers/manager-period-table';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { AssistantPeriodTable } from '@/components/dashboard/managers/assistant-period-table';\nimport { useToast } from '@/hooks/use-toast';\nimport { apiService, Manager, Assistant, TeamLeader } from '@/lib/api';\n\ninterface ManagerWithSalaries extends Manager {\n  period_salaries: {\n    [periodId: string]: {\n      week1_salary: number;\n      week2_salary: number;\n      total_salary: number;\n      payment_status: 'Paid' | 'Not Paid';\n    };\n  };\n}\n\ninterface Period {\n  id: string;\n  name: string;\n}\n\nexport default function ManagersPage() {\n  const { toast } = useToast();\n  const [activeTab, setActiveTab] = useState('managers');\n  const [managers, setManagers] = useState<ManagerWithSalaries[]>([]);\n  const [baseManagers, setBaseManagers] = useState<ManagerWithSalaries[]>([]);\n  const [assistants, setAssistants] = useState<Assistant[]>([]);\n  const [assistantsWithSalaries, setAssistantsWithSalaries] = useState<any[]>([]);\n  const [teamLeaders, setTeamLeaders] = useState<TeamLeader[]>([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [availablePeriods, setAvailablePeriods] = useState<Period[]>([]);\n  const [selectedPeriod1Id, setSelectedPeriod1Id] = useState<string>('');\n  const [selectedPeriod2Id, setSelectedPeriod2Id] = useState<string>('');\n  const [selectedYear, setSelectedYear] = useState<number>(new Date().getFullYear());\n  const [loading, setLoading] = useState(true);\n  const [loadingPeriods, setLoadingPeriods] = useState(false);\n  const [salariesLoaded, setSalariesLoaded] = useState(false);\n  \n  // Form state management\n  const [isManagerFormOpen, setIsManagerFormOpen] = useState(false);\n  const [isAssistantFormOpen, setIsAssistantFormOpen] = useState(false);\n  const [editingManager, setEditingManager] = useState<Manager | null>(null);\n  const [editingAssistant, setEditingAssistant] = useState<Assistant | null>(null);\n\n  // Load data on component mount\n  useEffect(() => {\n    loadPeriods();\n    loadManagers();\n    loadAssistants();\n    loadTeamLeaders();\n  }, []);\n\n  // Ensure selected periods are valid strictly within their half-year groups\n  useEffect(() => {\n    const monthKey = (p: Period) => (p.id || p.name || '').toLowerCase().substring(0,3);\n    const h1 = availablePeriods.filter(p => ['jan','feb','mar','apr','may','jun'].includes(monthKey(p)));\n    const h2 = availablePeriods.filter(p => ['jul','aug','sep','oct','nov','dec'].includes(monthKey(p)));\n    if (selectedPeriod1Id && !h1.some(p => p.id === selectedPeriod1Id)) {\n      setSelectedPeriod1Id(h1[0]?.id || '');\n    }\n    if (selectedPeriod2Id && !h2.some(p => p.id === selectedPeriod2Id)) {\n      setSelectedPeriod2Id(h2[0]?.id || '');\n    }\n  }, [availablePeriods, selectedPeriod1Id, selectedPeriod2Id]);\n\n  // Reload managers when search term changes\n  useEffect(() => {\n    if (activeTab !== 'managers') return;\n    if (selectedPeriod1Id || selectedPeriod2Id) {\n      loadManagersWithSalaries();\n    } else {\n      loadManagers();\n    }\n  }, [searchTerm]);\n\n  // Load assistants with salaries when tab is switched to assistants\n  useEffect(() => {\n    if (activeTab !== 'assistants') return;\n    const periodIds = [selectedPeriod1Id, selectedPeriod2Id].filter(Boolean);\n    (async () => {\n      if (periodIds.length > 0) {\n        const resp = await apiService.getAssistantsWithPeriodSalaries(periodIds, selectedYear);\n        if ((resp as any).status === 'Success' && (resp as any).data) {\n          setAssistantsWithSalaries(((resp as any).data.assistants) || []);\n        }\n      } else {\n        // If no periods selected, load basic assistant data\n        loadAssistants();\n      }\n    })();\n  }, [activeTab]);\n\n  // Reload assistants salaries when periods change\n  useEffect(() => {\n    if (activeTab !== 'assistants') return;\n    const periodIds = [selectedPeriod1Id, selectedPeriod2Id].filter(Boolean);\n    (async () => {\n      if (periodIds.length > 0) {\n        const resp = await apiService.getAssistantsWithPeriodSalaries(periodIds, selectedYear);\n        if ((resp as any).status === 'Success' && (resp as any).data) {\n          setAssistantsWithSalaries(((resp as any).data.assistants) || []);\n        }\n      }\n    })();\n  }, [selectedPeriod1Id, selectedPeriod2Id, selectedYear]);\n\n  // Reload managers with salaries when selected periods change\n  useEffect(() => {\n    if (activeTab === 'managers' && (selectedPeriod1Id || selectedPeriod2Id)) {\n      loadManagersWithSalaries();\n    }\n  }, [selectedPeriod1Id, selectedPeriod2Id, activeTab]);\n\n  // Ensure initial salaries fetch after base managers and period defaults are ready\n  useEffect(() => {\n    if (activeTab !== 'managers') return;\n    if (baseManagers.length === 0) return;\n    if (!selectedPeriod1Id && !selectedPeriod2Id) return;\n    if (salariesLoaded) return;\n    loadManagersWithSalaries();\n  }, [baseManagers.length, selectedPeriod1Id, selectedPeriod2Id, activeTab, salariesLoaded]);\n\n  const loadPeriods = async () => {\n    try {\n      setLoadingPeriods(true);\n      const resp = await apiService.getManagerSalaryPeriods();\n      if ((resp as any).status === 'Success' && (resp as any).data) {\n        const periods = (resp as any).data.periods as Period[];\n        setAvailablePeriods(periods);\n        setSelectedYear((resp as any).data.year || new Date().getFullYear());\n        // Strict split: Period 1 (Jan–Jun), Period 2 (Jul–Dec)\n        const monthKey = (p: Period) => (p.id || p.name || '').toLowerCase().substring(0,3);\n        const half1 = periods.filter(p => ['jan','feb','mar','apr','may','jun'].includes(monthKey(p)));\n        const half2 = periods.filter(p => ['jul','aug','sep','oct','nov','dec'].includes(monthKey(p)));\n        setSelectedPeriod1Id(half1[0]?.id || '');\n        setSelectedPeriod2Id(half2[0]?.id || '');\n      }\n    } catch (e) {\n      console.error('Error loading periods:', e);\n    } finally {\n      setLoadingPeriods(false);\n    }\n  };\n\n  const loadManagers = async () => {\n    try {\n      // Always load all managers for the table display\n      const response = await apiService.getAllManagers({\n        limit: 100,\n        offset: 0,\n        query: searchTerm,\n        sort: 'desc',\n        sort_by: 'created_at'\n      });\n      \n      if (response.status === 'Success' && response.data) {\n        // Add empty period_salaries to each manager for consistency\n        const managersWithSalaries = response.data.map(m => ({ ...m, period_salaries: {} }));\n        setBaseManagers(managersWithSalaries);\n        // Do not overwrite the salary-enriched list if periods are selected\n        if (!selectedPeriod1Id && !selectedPeriod2Id && !salariesLoaded) {\n          setManagers(managersWithSalaries);\n        }\n      } else {\n        toast({\n          title: \"Error\",\n          description: response.message || \"Failed to load managers\",\n          variant: \"destructive\",\n        });\n      }\n    } catch (error) {\n      console.error('Error loading managers:', error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to load managers. Please try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadManagersWithSalaries = async () => {\n    try {\n      const periodIds = [selectedPeriod1Id, selectedPeriod2Id].filter(Boolean);\n      if (periodIds.length === 0) return;\n      setLoading(true);\n      setSalariesLoaded(false);\n      const resp = await apiService.getManagersWithPeriodSalaries(periodIds, selectedYear);\n      if ((resp as any).status === 'Success' && (resp as any).data) {\n        const payload = (resp as any).data;\n        const salaryById: Record<string, any> = {};\n        (payload.managers || []).forEach((m: any) => {\n          salaryById[m.manager_id] = m.period_salaries || {};\n        });\n        // Merge with base list and PRESERVE any existing in-memory statuses to avoid flicker\n        const sourceList = baseManagers.length ? baseManagers : managers;\n        const merged = sourceList.map((bm) => {\n          const existingPS = (managers.find(m => m.manager_id === bm.manager_id)?.period_salaries) || {};\n          const fetchedPS = salaryById[bm.manager_id] || {};\n          return {\n            ...bm,\n            period_salaries: {\n              ...existingPS,\n              ...fetchedPS\n            }\n          };\n        });\n        setManagers(merged);\n        setSalariesLoaded(true);\n      }\n    } catch (e) {\n      console.error('Error loading managers with salaries:', e);\n      // On error, keep base managers to still render rows with zeros\n      if (baseManagers.length) {\n        setManagers(baseManagers);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadAssistants = async () => {\n    try {\n      const response = await apiService.getAllAssistants({\n        limit: 100,\n        offset: 0,\n        query: searchTerm,\n        sort: 'desc',\n        sort_by: 'created_at'\n      });\n      \n      if (response.status === 'Success' && response.data) {\n        setAssistants(response.data);\n        // If periods are selected, also fetch assistants with salaries\n        const periodIds = [selectedPeriod1Id, selectedPeriod2Id].filter(Boolean);\n        if (periodIds.length > 0) {\n          const resp2 = await apiService.getAssistantsWithPeriodSalaries(periodIds, selectedYear);\n          if ((resp2 as any).status === 'Success' && (resp2 as any).data) {\n            setAssistantsWithSalaries(((resp2 as any).data.assistants) || []);\n          }\n        } else {\n          setAssistantsWithSalaries([]);\n        }\n      }\n    } catch (error) {\n      console.error('Error loading assistants:', error);\n    }\n  };\n\n  const loadTeamLeaders = async () => {\n    try {\n      const response = await apiService.getAllTeamLeaders();\n      \n      if (response.status === 'Success' && response.data) {\n        setTeamLeaders(response.data);\n      }\n    } catch (error) {\n      console.error('Error loading team leaders:', error);\n    }\n  };\n\n  // Period management removed - no longer needed for managers table\n\n  // Managers filtering and calculations\n  const filteredManagers = managers.filter(manager =>\n    manager.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    manager.telegram_username.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    manager.role.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const totalManagers = managers.filter(m => m.role === 'Manager').length;\n  const activeManagers = managers.filter(m => m.role === 'Manager' && m.status === 'Active').length;\n  const totalManagerSalary = managers.reduce((sum, manager) => {\n    // Calculate total from period salaries\n    const periodTotal = Object.values(manager.period_salaries || {}).reduce((periodSum, salary) => {\n      return periodSum + salary.total_salary;\n    }, 0);\n    return sum + periodTotal;\n  }, 0);\n\n  // Team Leaders filtering and calculations\n  const filteredLeaders = teamLeaders.filter(leader => \n    leader.name.toLowerCase().includes(searchTerm.toLowerCase()) || \n    leader.telegram_username.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n  const totalLeaders = teamLeaders.length;\n  const activeLeaders = teamLeaders.filter(l => l.status === 'Active').length;\n  const totalLeaderPeriodSalary = managers\n    .filter(m => m.role === 'Team Leader')\n    .reduce((sum, m) => {\n      const periodTotal = Object.values(m.period_salaries || {}).reduce((acc, ps) => acc + (ps as any).total_salary, 0);\n      return sum + periodTotal;\n    }, 0);\n\n  // Assistants filtering and calculations\n  const filteredAssistants = assistants.filter(assistant =>\n    assistant.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    assistant.telegram_username.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n  const totalAssistants = assistants.length;\n  const activeAssistants = assistants.filter(a => a.status === 'Active').length;\n  const totalAssistantSalary = assistantsWithSalaries.reduce((sum, assistant) => {\n    // Calculate total from period salaries if available, otherwise use fixed salary\n    if (assistant.period_salaries && Object.keys(assistant.period_salaries).length > 0) {\n      const periodTotal = Object.values(assistant.period_salaries).reduce((periodSum, salary) => {\n        return periodSum + (salary.total_salary || 0);\n      }, 0);\n      return sum + periodTotal;\n    }\n    // Fallback to fixed salary if no period salaries are available\n    return sum + (assistant.fixed_salary || 0);\n  }, 0);\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'Active': return 'bg-green-100 text-green-800';\n      case 'Inactive': return 'bg-red-100 text-red-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const formatSalary = (amount: number) => `$${amount.toLocaleString()}`;\n\n  const handleDeleteManager = async (manager: Manager) => {\n    try {\n      const res = await apiService.deleteManager(manager.manager_id);\n      if (res.status === 'Success') {\n        toast({ title: 'Deleted', description: `${manager.name} deleted.` });\n        loadManagersWithSalaries();\n      } else {\n        toast({ title: 'Error', description: res.message || 'Failed to delete', variant: 'destructive' });\n      }\n    } catch (e) {\n      toast({ title: 'Error', description: 'Failed to delete manager', variant: 'destructive' });\n    }\n  };\n\n  const handleUpdatePaymentStatus = async (managerId: string, periodId: string, status: 'Paid' | 'Not Paid') => {\n    try {\n      console.log('Updating manager payment status', { managerId, periodId, status, year: selectedYear });\n      const params = new URLSearchParams({\n        manager_id: managerId,\n        period: periodId,\n        year: selectedYear.toString(),\n        payment_status: status\n      });\n      await (apiService as any)['request'](`/manager/salary/payment-status?${params.toString()}`, { method: 'PUT' });\n      console.log('Manager payment status updated OK');\n      setManagers(prev => prev.map(m => {\n        if (m.manager_id !== managerId) return m;\n        const current = (m.period_salaries && m.period_salaries[periodId]) || {\n          week1_salary: 0,\n          week2_salary: 0,\n          total_salary: 0,\n          payment_status: 'Not Paid' as const\n        };\n        return {\n          ...m,\n          period_salaries: {\n            ...(m.period_salaries || {}),\n            [periodId]: { ...current, payment_status: status }\n          }\n        };\n      }));\n    } catch (e) {\n      console.error('Failed to update payment status', e);\n      toast({ title: 'Error', description: 'Failed to update payment status', variant: 'destructive' });\n    }\n  };\n\n  const handleUpdateAssistantPaymentStatus = async (assistantId: string, periodId: string, status: 'Paid' | 'Not Paid') => {\n    try {\n      await apiService.updateAssistantPaymentStatus(assistantId, periodId, selectedYear, status);\n      setAssistantsWithSalaries(prev => prev.map(a => {\n        if (a.assistant_id !== assistantId) return a;\n        const current = (a.period_salaries && a.period_salaries[periodId]) || {\n          week1_salary: 0,\n          week2_salary: 0,\n          total_salary: 0,\n          payment_status: 'Not Paid' as const\n        };\n        return {\n          ...a,\n          period_salaries: {\n            ...(a.period_salaries || {}),\n            [periodId]: { ...current, payment_status: status }\n          }\n        };\n      }));\n    } catch (e) {\n      toast({ title: 'Error', description: 'Failed to update payment status', variant: 'destructive' });\n    }\n  };\n\n  // Form handlers\n  const handleAddManager = () => {\n    setEditingManager(null);\n    setIsManagerFormOpen(true);\n  };\n\n  const handleEditManager = (manager: Manager) => {\n    setEditingManager(manager);\n    setIsManagerFormOpen(true);\n  };\n\n  const handleEditTeamLeader = (leader: TeamLeader) => {\n    setEditingManager(leader as Manager); // Cast to Manager since they share the same structure\n    setIsManagerFormOpen(true);\n  };\n\n  const handleAddAssistant = () => {\n    setEditingAssistant(null);\n    setIsAssistantFormOpen(true);\n  };\n\n  const handleEditAssistant = (assistant: Assistant) => {\n    setEditingAssistant(assistant);\n    setIsAssistantFormOpen(true);\n  };\n\n  const getAddButtonLabel = () => {\n    switch (activeTab) {\n      case 'managers':\n        return 'Add Manager';\n      case 'team_leaders':\n        return 'Add Team Leader';\n      case 'assistants':\n        return 'Add Assistant';\n      default:\n        return 'Add';\n    }\n  };\n\n  const handleAddClick = () => {\n    switch (activeTab) {\n      case 'managers':\n        handleAddManager();\n        break;\n      case 'team_leaders':\n        handleAddManager(); // Use manager form for team leaders\n        break;\n      case 'assistants':\n        handleAddAssistant();\n        break;\n    }\n  };\n\n  const getFormType = () => {\n    switch (activeTab) {\n      case 'managers':\n        return 'manager';\n      case 'team_leaders':\n        return 'team_leader';\n      default:\n        return 'manager';\n    }\n  };\n\n  // getPeriodData function removed - no longer needed for managers table\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">Management</h1>\n          <p className=\"text-muted-foreground\">\n            Manage managers, team leaders, and assistants with salary rules and period tracking\n          </p>\n        </div>\n        <Button onClick={handleAddClick}>\n          <Plus className=\"mr-2 h-4 w-4\" />\n          {getAddButtonLabel()}\n        </Button>\n      </div>\n\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-6\">\n        <TabsList className=\"grid w-full grid-cols-3\">\n          <TabsTrigger value=\"managers\">Managers</TabsTrigger>\n          <TabsTrigger value=\"team_leaders\">Team Leaders</TabsTrigger>\n          <TabsTrigger value=\"assistants\">Assistants</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"managers\" className=\"space-y-6\">\n          {/* Managers KPI Cards */}\n          <div className=\"grid gap-4 md:grid-cols-3\">\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Total Managers</CardTitle>\n                <Users className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">{totalManagers}</div>\n                <p className=\"text-xs text-muted-foreground\">\n                  {activeManagers} active\n                </p>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Total Salary</CardTitle>\n                <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">{formatSalary(totalManagerSalary)}</div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Combined payroll\n                </p>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Loading Status</CardTitle>\n                <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">{loading ? 'Loading...' : 'Ready'}</div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Data status\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Period Selectors (match chatter page style) */}\n          <div className=\"flex flex-wrap gap-4 items-center\">\n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-sm text-muted-foreground\">Period 1</span>\n              <Select value={selectedPeriod1Id} onValueChange={setSelectedPeriod1Id}>\n                <SelectTrigger className=\"w-32\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  {availablePeriods\n                    .filter((p) => {\n                      const m = (p.id || p.name || '').toLowerCase().substring(0,3);\n                      return ['jan','feb','mar','apr','may','jun'].includes(m);\n                    })\n                    .map((p) => (\n                      <SelectItem key={p.id} value={p.id}>{p.name}</SelectItem>\n                    ))}\n                </SelectContent>\n              </Select>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-sm text-muted-foreground\">Period 2</span>\n              <Select value={selectedPeriod2Id} onValueChange={setSelectedPeriod2Id}>\n                <SelectTrigger className=\"w-32\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  {availablePeriods\n                    .filter((p) => {\n                      const m = (p.id || p.name || '').toLowerCase().substring(0,3);\n                      return ['jul','aug','sep','oct','nov','dec'].includes(m);\n                    })\n                    .map((p) => (\n                      <SelectItem key={p.id} value={p.id}>{p.name}</SelectItem>\n                    ))}\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n\n          {/* Search */}\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"relative flex-1\">\n              <Search className=\"absolute left-2 top-2.5 h-4 w-4 text-muted-foreground\" />\n              <Input\n                placeholder=\"Search managers...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"pl-8\"\n              />\n            </div>\n          </div>\n\n          {/* Managers Table with dynamic periods */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Managers</CardTitle>\n            </CardHeader>\n            <CardContent>\n              {(!selectedPeriod1Id && !selectedPeriod2Id) || !salariesLoaded ? (\n                <div className=\"flex items-center justify-center py-8 text-sm text-muted-foreground\">\n                  Loading salaries...\n                </div>\n              ) : (\n                <ManagerPeriodTable\n                  key={`${selectedPeriod1Id}-${selectedPeriod2Id}-${salariesLoaded}`}\n                  managers={filteredManagers as any}\n                  selectedPeriods={[selectedPeriod1Id, selectedPeriod2Id]\n                    .filter(Boolean)\n                    .map((id) => ({ id, name: availablePeriods.find(p => p.id === id)?.name || id }))}\n                  loading={loading || loadingPeriods}\n                  onEditManager={handleEditManager}\n                  onDeleteManager={handleDeleteManager}\n                  getStatusColor={getStatusColor}\n                  onUpdatePaymentStatus={handleUpdatePaymentStatus}\n                />\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"team_leaders\" className=\"space-y-6\">\n          {/* Team Leaders KPI Cards */}\n          <div className=\"grid gap-4 md:grid-cols-3\">\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Total Team Leaders</CardTitle>\n                <Users className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">{totalLeaders}</div>\n                <p className=\"text-xs text-muted-foreground\">\n                  {activeLeaders} active\n                </p>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Total Salary</CardTitle>\n                <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">{formatSalary(totalLeaderPeriodSalary)}</div>\n                <p className=\"text-xs text-muted-foreground\">Current period</p>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Period Selectors (match manager tab style) */}\n          <div className=\"flex flex-wrap gap-4 items-center\">\n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-sm text-muted-foreground\">Period 1</span>\n              <Select value={selectedPeriod1Id} onValueChange={setSelectedPeriod1Id}>\n                <SelectTrigger className=\"w-32\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  {availablePeriods\n                    .filter((p) => {\n                      const m = (p.id || p.name || '').toLowerCase().substring(0,3);\n                      return ['jan','feb','mar','apr','may','jun'].includes(m);\n                    })\n                    .map((p) => (\n                      <SelectItem key={p.id} value={p.id}>{p.name}</SelectItem>\n                    ))}\n                </SelectContent>\n              </Select>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-sm text-muted-foreground\">Period 2</span>\n              <Select value={selectedPeriod2Id} onValueChange={setSelectedPeriod2Id}>\n                <SelectTrigger className=\"w-32\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  {availablePeriods\n                    .filter((p) => {\n                      const m = (p.id || p.name || '').toLowerCase().substring(0,3);\n                      return ['jul','aug','sep','oct','nov','dec'].includes(m);\n                    })\n                    .map((p) => (\n                      <SelectItem key={p.id} value={p.id}>{p.name}</SelectItem>\n                    ))}\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n\n          {/* Team Leaders Table */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Team Leaders</CardTitle>\n            </CardHeader>\n            <CardContent>\n              {(!selectedPeriod1Id && !selectedPeriod2Id) || !salariesLoaded ? (\n                <div className=\"flex items-center justify-center py-8 text-sm text-muted-foreground\">\n                  Loading salaries...\n                </div>\n              ) : (\n                <ManagerPeriodTable\n                  key={`tl-${selectedPeriod1Id}-${selectedPeriod2Id}-${salariesLoaded}`}\n                  managers={filteredManagers as any}\n                  selectedPeriods={[selectedPeriod1Id, selectedPeriod2Id]\n                    .filter(Boolean)\n                    .map((id) => ({ id, name: availablePeriods.find(p => p.id === id)?.name || id }))}\n                  loading={loading || loadingPeriods}\n                  onEditManager={(m) => handleEditTeamLeader(m as any)}\n                  onDeleteManager={() => {}}\n                  getStatusColor={getStatusColor}\n                  onUpdatePaymentStatus={handleUpdatePaymentStatus}\n                  roleFilter=\"Team Leader\"\n                />\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"assistants\" className=\"space-y-6\">\n          {/* Assistants KPI Cards */}\n          <div className=\"grid gap-4 md:grid-cols-3\">\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Total Assistants</CardTitle>\n                <Users className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">{totalAssistants}</div>\n                <p className=\"text-xs text-muted-foreground\">\n                  {activeAssistants} active\n                </p>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Total Salary</CardTitle>\n                <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">{formatSalary(totalAssistantSalary)}</div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Combined payroll\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Period Selectors (match manager tab style) */}\n          <div className=\"flex flex-wrap gap-4 items-center\">\n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-sm text-muted-foreground\">Period 1</span>\n              <Select value={selectedPeriod1Id} onValueChange={setSelectedPeriod1Id}>\n                <SelectTrigger className=\"w-32\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  {availablePeriods\n                    .filter((p) => {\n                      const m = (p.id || p.name || '').toLowerCase().substring(0,3);\n                      return ['jan','feb','mar','apr','may','jun'].includes(m);\n                    })\n                    .map((p) => (\n                      <SelectItem key={p.id} value={p.id}>{p.name}</SelectItem>\n                    ))}\n                </SelectContent>\n              </Select>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-sm text-muted-foreground\">Period 2</span>\n              <Select value={selectedPeriod2Id} onValueChange={setSelectedPeriod2Id}>\n                <SelectTrigger className=\"w-32\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  {availablePeriods\n                    .filter((p) => {\n                      const m = (p.id || p.name || '').toLowerCase().substring(0,3);\n                      return ['jul','aug','sep','oct','nov','dec'].includes(m);\n                    })\n                    .map((p) => (\n                      <SelectItem key={p.id} value={p.id}>{p.name}</SelectItem>\n                    ))}\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n\n          {/* Assistants Table with dynamic periods */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Assistants</CardTitle>\n            </CardHeader>\n            <CardContent>\n              {(!selectedPeriod1Id && !selectedPeriod2Id) || !salariesLoaded ? (\n                <div className=\"flex items-center justify-center py-8 text-sm text-muted-foreground\">\n                  Loading salaries...\n                </div>\n              ) : (\n                <AssistantPeriodTable\n                  assistants={assistantsWithSalaries as any}\n                  selectedPeriods={[selectedPeriod1Id, selectedPeriod2Id]\n                    .filter(Boolean)\n                    .map((id) => ({ id, name: availablePeriods.find(p => p.id === id)?.name || id }))}\n                  loading={loading || loadingPeriods}\n                  getStatusColor={getStatusColor}\n                  onUpdatePaymentStatus={handleUpdateAssistantPaymentStatus}\n                  onEditAssistant={handleEditAssistant}\n                  onDeleteAssistant={async (a) => {\n                    const res = await apiService.deleteAssistant(a.assistant_id);\n                    if (res.status === 'Success') {\n                      toast({ title: 'Deleted', description: `${a.name} deleted.` });\n                      setAssistants(prev => prev.filter(x => x.assistant_id !== a.assistant_id));\n                      setAssistantsWithSalaries(prev => prev.filter(x => x.assistant_id !== a.assistant_id));\n                    } else {\n                      toast({ title: 'Error', description: res.message || 'Failed to delete', variant: 'destructive' });\n                    }\n                  }}\n                />\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n\n      {/* Form Components */}\n      <ManagerFormSheet\n        open={isManagerFormOpen}\n        onOpenChange={setIsManagerFormOpen}\n        manager={editingManager}\n        type={getFormType()}\n        onSave={async (data) => {\n          try {\n            if (editingManager) {\n              // Update existing manager\n              const response = await apiService.updateManager(editingManager.manager_id, {\n                name: data.name,\n                role: data.role,\n                telegram_username: data.telegramUsername,\n                status: data.status,\n                salary_type: 'Commission-based',\n                revenue_threshold: data.revenueThreshold,\n                commission_rate: data.commissionRate,\n                fixed_salary: data.fixedSalary,\n              });\n              \n              if (response.status === 'Success') {\n                toast({\n                  title: \"Success\",\n                  description: `${data.role} updated successfully!`,\n                });\n                // Optimistically update in-memory managers and baseManagers\n                setManagers(prev => prev.map(m => m.manager_id === editingManager.manager_id ? ({\n                  ...m,\n                  name: data.name,\n                  role: data.role,\n                  telegram_username: data.telegramUsername,\n                  status: data.status,\n                  salary_type: 'Commission-based',\n                  revenue_threshold: data.revenueThreshold,\n                  commission_rate: data.commissionRate,\n                  fixed_salary: data.fixedSalary,\n                }) : m));\n                setBaseManagers(prev => prev.map(m => m.manager_id === editingManager.manager_id ? ({\n                  ...m,\n                  name: data.name,\n                  role: data.role,\n                  telegram_username: data.telegramUsername,\n                  status: data.status,\n                  salary_type: 'Commission-based',\n                  revenue_threshold: data.revenueThreshold,\n                  commission_rate: data.commissionRate,\n                  fixed_salary: data.fixedSalary,\n                }) : m));\n              } else {\n                toast({\n                  title: \"Error\",\n                  description: response.message || \"Failed to update manager\",\n                  variant: \"destructive\",\n                });\n                return;\n              }\n            } else {\n              // Create new manager\n              const response = await apiService.createManager({\n                name: data.name,\n                role: data.role,\n                telegram_username: data.telegramUsername,\n                status: data.status,\n                salary_type: 'Commission-based',\n                revenue_threshold: data.revenueThreshold,\n                commission_rate: data.commissionRate,\n                fixed_salary: data.fixedSalary,\n              });\n              \n              if (response.status === 'Success') {\n                toast({\n                  title: \"Success\",\n                  description: `${data.role} created successfully!`,\n                });\n                // Optimistically add new manager to lists\n                const newManager: ManagerWithSalaries = {\n                  manager_id: (response.data as any)?.manager_id || `temp_${Date.now()}`,\n                  name: data.name,\n                  role: data.role,\n                  telegram_username: data.telegramUsername,\n                  status: data.status,\n                  salary_type: 'Commission-based',\n                  revenue_threshold: data.revenueThreshold,\n                  commission_rate: data.commissionRate,\n                  fixed_salary: data.fixedSalary,\n                  assigned_models: [],\n                  period_salaries: {}\n                } as ManagerWithSalaries;\n                setBaseManagers(prev => [newManager, ...prev]);\n                setManagers(prev => [newManager, ...prev]);\n              } else {\n                toast({\n                  title: \"Error\",\n                  description: response.message || \"Failed to create manager\",\n                  variant: \"destructive\",\n                });\n                return;\n              }\n            }\n            \n            setIsManagerFormOpen(false);\n            setEditingManager(null);\n            // Keep UI responsive without refetch conflict; refresh team leaders if needed\n            loadTeamLeaders();\n          } catch (error) {\n            console.error('Error saving manager:', error);\n            toast({\n              title: \"Error\",\n              description: \"An unexpected error occurred. Please try again.\",\n              variant: \"destructive\",\n            });\n          }\n        }}\n      />\n\n      <AssistantFormSheet\n        open={isAssistantFormOpen}\n        onOpenChange={setIsAssistantFormOpen}\n        assistant={editingAssistant}\n        onSubmit={async (data) => {\n          try {\n            if (editingAssistant) {\n              // Update existing assistant\n              const response = await apiService.updateAssistant(editingAssistant.assistant_id, {\n                name: data.fullName,\n                telegram_username: data.telegramUsername,\n                status: data.status,\n                fixed_salary: data.fixedSalary,\n                salary_period: data.salaryPeriod,\n              });\n              \n              if (response.status === 'Success') {\n                toast({\n                  title: \"Success\",\n                  description: \"Assistant updated successfully!\",\n                });\n              } else {\n                toast({\n                  title: \"Error\",\n                  description: response.message || \"Failed to update assistant\",\n                  variant: \"destructive\",\n                });\n                return;\n              }\n            } else {\n              // Create new assistant\n              const response = await apiService.createAssistant({\n                name: data.fullName,\n                telegram_username: data.telegramUsername,\n                status: data.status,\n                salary_type: 'Fixed',\n                fixed_salary: data.fixedSalary,\n                salary_period: data.salaryPeriod,\n              });\n              \n              if (response.status === 'Success') {\n                toast({\n                  title: \"Success\",\n                  description: \"Assistant created successfully!\",\n                });\n              } else {\n                toast({\n                  title: \"Error\",\n                  description: response.message || \"Failed to create assistant\",\n                  variant: \"destructive\",\n                });\n                return;\n              }\n            }\n            \n            setIsAssistantFormOpen(false);\n            setEditingAssistant(null);\n            loadAssistants();\n          } catch (error) {\n            console.error('Error saving assistant:', error);\n            toast({\n              title: \"Error\",\n              description: \"An unexpected error occurred. Please try again.\",\n              variant: \"destructive\",\n            });\n          }\n        }}\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}