{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/as941/Downloads/final_Finance_goat%202/Finance_goat/frontend/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/as941/Downloads/final_Finance_goat%202/Finance_goat/frontend/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Table = React.forwardRef<\r\n  HTMLTableElement,\r\n  React.HTMLAttributes<HTMLTableElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div className=\"relative w-full overflow-auto\">\r\n    <table\r\n      ref={ref}\r\n      className={cn(\"w-full caption-bottom text-sm\", className)}\r\n      {...props}\r\n    />\r\n  </div>\r\n))\r\nTable.displayName = \"Table\"\r\n\r\nconst TableHeader = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\r\n))\r\nTableHeader.displayName = \"TableHeader\"\r\n\r\nconst TableBody = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tbody\r\n    ref={ref}\r\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableBody.displayName = \"TableBody\"\r\n\r\nconst TableFooter = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tfoot\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableFooter.displayName = \"TableFooter\"\r\n\r\nconst TableRow = React.forwardRef<\r\n  HTMLTableRowElement,\r\n  React.HTMLAttributes<HTMLTableRowElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tr\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableRow.displayName = \"TableRow\"\r\n\r\nconst TableHead = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.ThHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <th\r\n    ref={ref}\r\n    className={cn(\r\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableHead.displayName = \"TableHead\"\r\n\r\nconst TableCell = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.TdHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <td\r\n    ref={ref}\r\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCell.displayName = \"TableCell\"\r\n\r\nconst TableCaption = React.forwardRef<\r\n  HTMLTableCaptionElement,\r\n  React.HTMLAttributes<HTMLTableCaptionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <caption\r\n    ref={ref}\r\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCaption.displayName = \"TableCaption\"\r\n\r\nexport {\r\n  Table,\r\n  TableHeader,\r\n  TableBody,\r\n  TableFooter,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableCaption,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/as941/Downloads/final_Finance_goat%202/Finance_goat/frontend/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\r\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Select = SelectPrimitive.Root\r\n\r\nconst SelectGroup = SelectPrimitive.Group\r\n\r\nconst SelectValue = SelectPrimitive.Value\r\n\r\nconst SelectTrigger = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <SelectPrimitive.Icon asChild>\r\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\r\n    </SelectPrimitive.Icon>\r\n  </SelectPrimitive.Trigger>\r\n))\r\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\r\n\r\nconst SelectScrollUpButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollUpButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronUp className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollUpButton>\r\n))\r\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\r\n\r\nconst SelectScrollDownButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollDownButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronDown className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollDownButton>\r\n))\r\nSelectScrollDownButton.displayName =\r\n  SelectPrimitive.ScrollDownButton.displayName\r\n\r\nconst SelectContent = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\r\n>(({ className, children, position = \"popper\", ...props }, ref) => (\r\n  <SelectPrimitive.Portal>\r\n    <SelectPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        position === \"popper\" &&\r\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\r\n        className\r\n      )}\r\n      position={position}\r\n      {...props}\r\n    >\r\n      <SelectScrollUpButton />\r\n      <SelectPrimitive.Viewport\r\n        className={cn(\r\n          \"p-1\",\r\n          position === \"popper\" &&\r\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\r\n        )}\r\n      >\r\n        {children}\r\n      </SelectPrimitive.Viewport>\r\n      <SelectScrollDownButton />\r\n    </SelectPrimitive.Content>\r\n  </SelectPrimitive.Portal>\r\n))\r\nSelectContent.displayName = SelectPrimitive.Content.displayName\r\n\r\nconst SelectLabel = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectLabel.displayName = SelectPrimitive.Label.displayName\r\n\r\nconst SelectItem = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <SelectPrimitive.ItemIndicator>\r\n        <Check className=\"h-4 w-4\" />\r\n      </SelectPrimitive.ItemIndicator>\r\n    </span>\r\n\r\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n  </SelectPrimitive.Item>\r\n))\r\nSelectItem.displayName = SelectPrimitive.Item.displayName\r\n\r\nconst SelectSeparator = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\r\n\r\nexport {\r\n  Select,\r\n  SelectGroup,\r\n  SelectValue,\r\n  SelectTrigger,\r\n  SelectContent,\r\n  SelectLabel,\r\n  SelectItem,\r\n  SelectSeparator,\r\n  SelectScrollUpButton,\r\n  SelectScrollDownButton,\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 390, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/as941/Downloads/final_Finance_goat%202/Finance_goat/frontend/src/lib/shared-data.ts"],"sourcesContent":["export interface TeamLeader {\n  id: string;\n  name: string;\n  email: string;\n  phone: string;\n  salaryType: 'Commission-based' | 'Fixed';\n  commissionRate?: number;\n  fixedSalary?: number;\n  week1Salary: number;\n  week2Salary: number;\n  totalSalary: number;\n  paymentStatus: 'Paid' | 'Not Paid';\n  assignedModels: string[];\n  status: 'Active' | 'Inactive';\n}\n\nexport interface Model {\n  id: string;\n  modelName: string;\n  clientAgencyName: string;\n  managerName: string;\n  teamLeader: string;\n  earningsType: 'Type 1' | 'Type 2';\n  status: 'Active' | 'Inactive';\n  paymentStatus: 'Paid' | 'Not Paid';\n  cutLogic: {\n    type: 'Type 1' | 'Type 2';\n    percentage1: number;\n    threshold: number;\n    fixedAmount: number;\n    percentage2: number;\n  };\n  commissionRules: {\n    baseCommission: number;\n    bonusEnabled: boolean;\n    bonusThreshold: number;\n    bonusCommission: number;\n  };\n  notes: string;\n}\n\nexport const teamLeaders: TeamLeader[] = [\n  {\n    id: '1',\n    name: 'Alex Johnson',\n    email: 'alex.johnson@agency.com',\n    phone: '+1 (555) 123-4567',\n    salaryType: 'Commission-based',\n    commissionRate: 15,\n    week1Salary: 1200,\n    week2Salary: 1350,\n    totalSalary: 2550,\n    paymentStatus: 'Paid',\n    assignedModels: ['Anastasia', 'Sophie'],\n    status: 'Active'\n  },\n  {\n    id: '2',\n    name: 'Samantha Ray',\n    email: 'samantha.ray@agency.com',\n    phone: '+1 (555) 234-5678',\n    salaryType: 'Fixed',\n    fixedSalary: 3000,\n    week1Salary: 1500,\n    week2Salary: 1500,\n    totalSalary: 3000,\n    paymentStatus: 'Not Paid',\n    assignedModels: ['Isabella', 'Valentina'],\n    status: 'Active'\n  },\n  {\n    id: '3',\n    name: 'Mike Williams',\n    email: 'mike.williams@agency.com',\n    phone: '+1 (555) 345-6789',\n    salaryType: 'Commission-based',\n    commissionRate: 12,\n    week1Salary: 980,\n    week2Salary: 1100,\n    totalSalary: 2080,\n    paymentStatus: 'Paid',\n    assignedModels: ['Elena', 'Maria'],\n    status: 'Active'\n  },\n  {\n    id: '4',\n    name: 'Sarah Chen',\n    email: 'sarah.chen@agency.com',\n    phone: '+1 (555) 456-7890',\n    salaryType: 'Fixed',\n    fixedSalary: 2800,\n    week1Salary: 1400,\n    week2Salary: 1400,\n    totalSalary: 2800,\n    paymentStatus: 'Not Paid',\n    assignedModels: ['Sophia', 'Emma'],\n    status: 'Inactive'\n  }\n];\n\nexport const models: Model[] = [\n  {\n    id: '1',\n    modelName: 'Anastasia',\n    clientAgencyName: 'Celestial Models',\n    managerName: 'Admin',\n    teamLeader: 'Alex Johnson',\n    earningsType: 'Type 1',\n    status: 'Active',\n    paymentStatus: 'Paid',\n    cutLogic: {\n      type: 'Type 1',\n      percentage1: 20,\n      threshold: 5000,\n      fixedAmount: 1000,\n      percentage2: 0,\n    },\n    commissionRules: {\n      baseCommission: 3,\n      bonusEnabled: true,\n      bonusThreshold: 1000,\n      bonusCommission: 5,\n    },\n    notes: 'Top performing model.',\n  },\n  {\n    id: '2',\n    modelName: 'Isabella',\n    clientAgencyName: 'Starlight Agency',\n    managerName: 'Admin',\n    teamLeader: 'Samantha Ray',\n    earningsType: 'Type 2',\n    status: 'Active',\n    paymentStatus: 'Not Paid',\n    cutLogic: {\n      type: 'Type 2',\n      percentage1: 0,\n      threshold: 0,\n      fixedAmount: 0,\n      percentage2: 25,\n    },\n    commissionRules: {\n      baseCommission: 4,\n      bonusEnabled: false,\n      bonusThreshold: 0,\n      bonusCommission: 0,\n    },\n    notes: '',\n  },\n  {\n    id: '3',\n    modelName: 'Sophie',\n    clientAgencyName: 'Celestial Models',\n    managerName: 'Admin',\n    teamLeader: 'Alex Johnson',\n    earningsType: 'Type 1',\n    status: 'Inactive',\n    paymentStatus: 'Not Paid',\n    cutLogic: {\n      type: 'Type 1',\n      percentage1: 15,\n      threshold: 4000,\n      fixedAmount: 800,\n      percentage2: 0,\n    },\n    commissionRules: {\n      baseCommission: 3,\n      bonusEnabled: false,\n      bonusThreshold: 0,\n      bonusCommission: 0,\n    },\n    notes: 'On break.',\n  },\n  {\n    id: '4',\n    modelName: 'Valentina',\n    clientAgencyName: 'Galaxy Management',\n    managerName: 'Admin',\n    teamLeader: 'Samantha Ray',\n    earningsType: 'Type 2',\n    status: 'Active',\n    paymentStatus: 'Paid',\n    cutLogic: {\n      type: 'Type 2',\n      percentage1: 0,\n      threshold: 0,\n      fixedAmount: 0,\n      percentage2: 30,\n    },\n     commissionRules: {\n      baseCommission: 3.5,\n      bonusEnabled: true,\n      bonusThreshold: 1200,\n      bonusCommission: 6,\n    },\n    notes: '',\n  },\n  {\n    id: '5',\n    modelName: 'Elena',\n    clientAgencyName: 'Starlight Agency',\n    managerName: 'Admin',\n    teamLeader: 'Mike Williams',\n    earningsType: 'Type 1',\n    status: 'Active',\n    paymentStatus: 'Not Paid',\n    cutLogic: {\n      type: 'Type 1',\n      percentage1: 18,\n      threshold: 4500,\n      fixedAmount: 900,\n      percentage2: 0,\n    },\n    commissionRules: {\n      baseCommission: 3.5,\n      bonusEnabled: true,\n      bonusThreshold: 800,\n      bonusCommission: 4.5,\n    },\n    notes: 'New model, performing well.',\n  },\n  {\n    id: '6',\n    modelName: 'Maria',\n    clientAgencyName: 'Galaxy Management',\n    managerName: 'Admin',\n    teamLeader: 'Mike Williams',\n    earningsType: 'Type 2',\n    status: 'Active',\n    paymentStatus: 'Paid',\n    cutLogic: {\n      type: 'Type 2',\n      percentage1: 0,\n      threshold: 0,\n      fixedAmount: 0,\n      percentage2: 22,\n    },\n    commissionRules: {\n      baseCommission: 3,\n      bonusEnabled: false,\n      bonusThreshold: 0,\n      bonusCommission: 0,\n    },\n    notes: '',\n  },\n  {\n    id: '7',\n    modelName: 'Sophia',\n    clientAgencyName: 'Celestial Models',\n    managerName: 'Admin',\n    teamLeader: 'Sarah Chen',\n    earningsType: 'Type 1',\n    status: 'Inactive',\n    paymentStatus: 'Not Paid',\n    cutLogic: {\n      type: 'Type 1',\n      percentage1: 16,\n      threshold: 4200,\n      fixedAmount: 850,\n      percentage2: 0,\n    },\n    commissionRules: {\n      baseCommission: 3.2,\n      bonusEnabled: true,\n      bonusThreshold: 900,\n      bonusCommission: 4.8,\n    },\n    notes: 'Temporarily inactive.',\n  },\n  {\n    id: '8',\n    modelName: 'Emma',\n    clientAgencyName: 'Starlight Agency',\n    managerName: 'Admin',\n    teamLeader: 'Sarah Chen',\n    earningsType: 'Type 2',\n    status: 'Inactive',\n    paymentStatus: 'Paid',\n    cutLogic: {\n      type: 'Type 2',\n      percentage1: 0,\n      threshold: 0,\n      fixedAmount: 0,\n      percentage2: 28,\n    },\n    commissionRules: {\n      baseCommission: 3.8,\n      bonusEnabled: false,\n      bonusThreshold: 0,\n      bonusCommission: 0,\n    },\n    notes: 'On extended break.',\n  }\n];\n\n// Helper functions\nexport const getActiveTeamLeaders = () => teamLeaders.filter(tl => tl.status === 'Active');\nexport const getActiveModels = () => models.filter(model => model.status === 'Active');\nexport const getActiveChatters = () => chatters.filter(chatter => chatter.status === 'active');\nexport const getModelNames = () => models.map(model => model.modelName);\nexport const getTeamLeaderNames = () => teamLeaders.map(tl => tl.name);\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 674, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/as941/Downloads/final_Finance_goat%202/Finance_goat/frontend/src/lib/insights-calculations.ts"],"sourcesContent":["// Insights Calculations Utility\n// This file contains all the business logic for insights and statistics calculations\n\nimport { models, teamLeaders } from './shared-data';\nimport { ModelRevenueCalculator } from './salary-calculations';\n\nexport interface ModelInsightData {\n  id: string;\n  modelName: string;\n  managerName: string;\n  period: string;\n  netSales: number;\n  invoiceValue: number;\n  invoiceStatus: 'Paid' | 'Not Paid';\n  revenue: number;\n  realRevenue: number;\n  cost: number;\n  profit: number;\n  realProfit: number;\n  chatterCost: number;\n  managerCost: number;\n  assistantCost: number;\n}\n\nexport interface PeriodFinancialData {\n  id: string;\n  period: string;\n  revenue: number;\n  realRevenue: number;\n  cost: number;\n  realCost: number;\n  profit: number;\n  realProfit: number;\n  modelBreakdown: ModelInsightData[];\n}\n\nexport interface ChatterCostData {\n  id: string;\n  name: string;\n  hours: number;\n  hourlyCost: number;\n  commission: number;\n  totalCost: number;\n  modelId: string;\n  modelName: string;\n}\n\nexport class InsightsCalculator {\n  // Calculate invoice value based on model rules\n  static calculateInvoiceValue(netSales: number, modelId: string): number {\n    const model = models.find(m => m.id === modelId);\n    if (!model) return 0;\n\n    if (model.earningsType === 'Type 1') {\n      return netSales >= model.cutLogic.threshold \n        ? netSales * (model.cutLogic.percentage1 / 100)\n        : model.cutLogic.fixedAmount;\n    } else {\n      return netSales * (model.cutLogic.percentage2 / 100);\n    }\n  }\n\n  // Calculate real revenue based on invoice status\n  static calculateRealRevenue(invoiceValue: number, status: 'Paid' | 'Not Paid'): number {\n    return status === 'Paid' ? invoiceValue : 0;\n  }\n\n  // Calculate profit\n  static calculateProfit(revenue: number, cost: number): number {\n    return revenue - cost;\n  }\n\n  // Calculate real profit\n  static calculateRealProfit(realRevenue: number, cost: number): number {\n    return realRevenue - cost;\n  }\n\n  // Get model manager name\n  static getModelManager(modelId: string): string {\n    const model = models.find(m => m.id === modelId);\n    if (!model) return 'Unknown';\n    \n    const teamLeader = teamLeaders.find(tl => tl.name === model.teamLeader);\n    return teamLeader ? teamLeader.name : model.teamLeader;\n  }\n\n  // Calculate cost attribution for a model\n  static calculateModelCosts(\n    modelId: string,\n    period: string,\n    chatterCosts: ChatterCostData[]\n  ): { chatterCost: number; managerCost: number; assistantCost: number; totalCost: number } {\n    // Filter costs for this model and period\n    const modelChatterCosts = chatterCosts.filter(cost => cost.modelId === modelId);\n    \n    const chatterCost = modelChatterCosts.reduce((sum, cost) => sum + cost.totalCost, 0);\n    \n    // Get manager cost (simplified - in real app this would be more complex)\n    const model = models.find(m => m.id === modelId);\n    const managerCost = model ? 400 : 0; // Mock value\n    \n    // Get assistant cost (simplified)\n    const assistantCost = 250; // Mock value\n    \n    const totalCost = chatterCost + managerCost + assistantCost;\n    \n    return {\n      chatterCost,\n      managerCost,\n      assistantCost,\n      totalCost\n    };\n  }\n\n  // Generate period financial data\n  static generatePeriodFinancialData(\n    period: string,\n    modelData: ModelInsightData[]\n  ): PeriodFinancialData {\n    const revenue = modelData.reduce((sum, model) => sum + model.revenue, 0);\n    const realRevenue = modelData.reduce((sum, model) => sum + model.realRevenue, 0);\n    const cost = modelData.reduce((sum, model) => sum + model.cost, 0);\n    const profit = modelData.reduce((sum, model) => sum + model.profit, 0);\n    const realProfit = modelData.reduce((sum, model) => sum + model.realProfit, 0);\n\n    return {\n      id: period,\n      period,\n      revenue,\n      realRevenue,\n      cost,\n      realCost: cost, // Simplified - real cost might be different\n      profit,\n      realProfit,\n      modelBreakdown: modelData\n    };\n  }\n\n  // Update model insight data when net sales changes\n  static updateModelInsightData(\n    modelId: string,\n    period: string,\n    netSales: number,\n    invoiceStatus: 'Paid' | 'Not Paid',\n    chatterCosts: ChatterCostData[]\n  ): ModelInsightData {\n    const model = models.find(m => m.id === modelId);\n    if (!model) {\n      throw new Error(`Model with ID ${modelId} not found`);\n    }\n\n    const invoiceValue = this.calculateInvoiceValue(netSales, modelId);\n    const revenue = invoiceValue;\n    const realRevenue = this.calculateRealRevenue(invoiceValue, invoiceStatus);\n    \n    const costs = this.calculateModelCosts(modelId, period, chatterCosts);\n    const profit = this.calculateProfit(revenue, costs.totalCost);\n    const realProfit = this.calculateRealProfit(realRevenue, costs.totalCost);\n\n    return {\n      id: modelId,\n      modelName: model.modelName,\n      managerName: this.getModelManager(modelId),\n      period,\n      netSales,\n      invoiceValue,\n      invoiceStatus,\n      revenue,\n      realRevenue,\n      cost: costs.totalCost,\n      profit,\n      realProfit,\n      chatterCost: costs.chatterCost,\n      managerCost: costs.managerCost,\n      assistantCost: costs.assistantCost\n    };\n  }\n\n  // Get Y-axis scale based on period type\n  static getYAxisScale(period: string): number {\n    if (period.includes('Week')) return 1000; // 1K per grid line for weeks\n    if (period.includes('1') || period.includes('2')) return 2000; // 2K per grid line for half-months\n    return 4000; // 4K per grid line for full months\n  }\n\n  // Validate period format\n  static isValidPeriod(period: string): boolean {\n    const validPeriods = [\n      'July', 'July 1', 'July 2', 'July 1 - Week 1', 'July 1 - Week 2', 'July 2 - Week 1', 'July 2 - Week 2',\n      'August', 'August 1', 'August 2', 'August 1 - Week 1', 'August 1 - Week 2', 'August 2 - Week 1', 'August 2 - Week 2',\n      'September', 'September 1', 'September 2', 'September 1 - Week 1', 'September 1 - Week 2', 'September 2 - Week 1', 'September 2 - Week 2'\n    ];\n    return validPeriods.includes(period);\n  }\n\n  // Get all available periods\n  static getAvailablePeriods(): string[] {\n    const months = [\n      'January','February','March','April','May','June','July','August','September','October','November','December'\n    ];\n    const periods: string[] = [];\n    for (const m of months) {\n      periods.push(m);\n      periods.push(`${m} 1`);\n      periods.push(`${m} 2`);\n      periods.push(`${m} 1 - Week 1`);\n      periods.push(`${m} 1 - Week 2`);\n      periods.push(`${m} 2 - Week 1`);\n      periods.push(`${m} 2 - Week 2`);\n    }\n    return periods;\n  }\n\n  // Calculate performance rating based on profit\n  static calculatePerformanceRating(profit: number, averageProfit: number): 'High' | 'Medium' | 'Low' {\n    if (profit >= averageProfit * 1.2) return 'High';\n    if (profit >= averageProfit * 0.8) return 'Medium';\n    return 'Low';\n  }\n\n  // Get mock chatter costs for demonstration\n  static getMockChatterCosts(modelId: string): ChatterCostData[] {\n    return [\n      {\n        id: '1',\n        name: 'John Doe',\n        hours: 32,\n        hourlyCost: 480,\n        commission: 120,\n        totalCost: 600,\n        modelId,\n        modelName: models.find(m => m.id === modelId)?.modelName || 'Unknown'\n      },\n      {\n        id: '2',\n        name: 'Jane Smith',\n        hours: 28,\n        hourlyCost: 420,\n        commission: 105,\n        totalCost: 525,\n        modelId,\n        modelName: models.find(m => m.id === modelId)?.modelName || 'Unknown'\n      }\n    ];\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 877, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/as941/Downloads/final_Finance_goat%202/Finance_goat/frontend/src/components/dashboard/RevenueChart.tsx"],"sourcesContent":["'use client';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\r\n\r\ninterface RevenueChartProps {\r\n  data: Array<{\r\n    period: string;\r\n    revenue: number;\r\n    costs: number;\r\n    profit: number;\r\n  }>;\r\n  title?: string;\r\n  description?: string;\r\n}\r\n\r\nexport function RevenueChart({ data, title = \"Revenue vs Costs\", description = \"Period comparison\" }: RevenueChartProps) {\r\n  if (!data || data.length === 0) {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>{title}</CardTitle>\r\n          <CardDescription>{description}</CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"h-[300px] flex items-center justify-center text-muted-foreground\">\r\n            No data available for this period\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle>{title}</CardTitle>\r\n        <CardDescription>{description}</CardDescription>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"h-[300px]\">\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <BarChart data={data} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"period\" />\r\n              <YAxis tickFormatter={(value) => `$${(value / 1000).toFixed(0)}k`} />\r\n              <Tooltip \r\n                formatter={(value: number, name: string) => [\r\n                  `$${value.toLocaleString()}`, \r\n                  name.charAt(0).toUpperCase() + name.slice(1)\r\n                ]}\r\n                labelFormatter={(label) => `Period: ${label}`}\r\n              />\r\n              <Legend />\r\n              <Bar dataKey=\"revenue\" fill=\"#10b981\" name=\"Revenue\" />\r\n              <Bar dataKey=\"costs\" fill=\"#ef4444\" name=\"Costs\" />\r\n              <Bar dataKey=\"profit\" fill=\"#3b82f6\" name=\"Profit\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;;;;AAeO,SAAS,aAAa,EAAE,IAAI,EAAE,QAAQ,kBAAkB,EAAE,cAAc,mBAAmB,EAAqB;IACrH,IAAI,CAAC,QAAQ,KAAK,MAAM,KAAK,GAAG;QAC9B,qBACE,8OAAC,gIAAA,CAAA,OAAI;;8BACH,8OAAC,gIAAA,CAAA,aAAU;;sCACT,8OAAC,gIAAA,CAAA,YAAS;sCAAE;;;;;;sCACZ,8OAAC,gIAAA,CAAA,kBAAe;sCAAE;;;;;;;;;;;;8BAEpB,8OAAC,gIAAA,CAAA,cAAW;8BACV,cAAA,8OAAC;wBAAI,WAAU;kCAAmE;;;;;;;;;;;;;;;;;IAM1F;IAEA,qBACE,8OAAC,gIAAA,CAAA,OAAI;;0BACH,8OAAC,gIAAA,CAAA,aAAU;;kCACT,8OAAC,gIAAA,CAAA,YAAS;kCAAE;;;;;;kCACZ,8OAAC,gIAAA,CAAA,kBAAe;kCAAE;;;;;;;;;;;;0BAEpB,8OAAC,gIAAA,CAAA,cAAW;0BACV,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,mKAAA,CAAA,sBAAmB;wBAAC,OAAM;wBAAO,QAAO;kCACvC,cAAA,8OAAC,oJAAA,CAAA,WAAQ;4BAAC,MAAM;4BAAM,QAAQ;gCAAE,KAAK;gCAAI,OAAO;gCAAI,MAAM;gCAAI,QAAQ;4BAAE;;8CACtE,8OAAC,6JAAA,CAAA,gBAAa;oCAAC,iBAAgB;;;;;;8CAC/B,8OAAC,qJAAA,CAAA,QAAK;oCAAC,SAAQ;;;;;;8CACf,8OAAC,qJAAA,CAAA,QAAK;oCAAC,eAAe,CAAC,QAAU,CAAC,CAAC,EAAE,CAAC,QAAQ,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;;;;;;8CACjE,8OAAC,uJAAA,CAAA,UAAO;oCACN,WAAW,CAAC,OAAe,OAAiB;4CAC1C,CAAC,CAAC,EAAE,MAAM,cAAc,IAAI;4CAC5B,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC;yCAC3C;oCACD,gBAAgB,CAAC,QAAU,CAAC,QAAQ,EAAE,OAAO;;;;;;8CAE/C,8OAAC,sJAAA,CAAA,SAAM;;;;;8CACP,8OAAC,mJAAA,CAAA,MAAG;oCAAC,SAAQ;oCAAU,MAAK;oCAAU,MAAK;;;;;;8CAC3C,8OAAC,mJAAA,CAAA,MAAG;oCAAC,SAAQ;oCAAQ,MAAK;oCAAU,MAAK;;;;;;8CACzC,8OAAC,mJAAA,CAAA,MAAG;oCAAC,SAAQ;oCAAS,MAAK;oCAAU,MAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOxD","debugId":null}},
    {"offset": {"line": 1078, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/as941/Downloads/final_Finance_goat%202/Finance_goat/frontend/src/components/dashboard/ProfitTrendChart.tsx"],"sourcesContent":["'use client';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\r\n\r\ninterface ProfitTrendChartProps {\r\n  data: Array<{\r\n    period: string;\r\n    revenue: number;\r\n    costs: number;\r\n    profit: number;\r\n  }>;\r\n  title?: string;\r\n  description?: string;\r\n}\r\n\r\nexport function ProfitTrendChart({ data, title = \"Profit Trend\", description = \"Revenue and profit over time\" }: ProfitTrendChartProps) {\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle>{title}</CardTitle>\r\n        <CardDescription>{description}</CardDescription>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"h-[300px]\">\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <LineChart data={data} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"period\" />\r\n              <YAxis tickFormatter={(value) => `$${(value / 1000).toFixed(0)}k`} />\r\n              <Tooltip \r\n                formatter={(value: number, name: string) => [\r\n                  `$${value.toLocaleString()}`, \r\n                  name.charAt(0).toUpperCase() + name.slice(1)\r\n                ]}\r\n                labelFormatter={(label) => `Period: ${label}`}\r\n              />\r\n              <Legend />\r\n              <Line \r\n                type=\"monotone\" \r\n                dataKey=\"revenue\" \r\n                stroke=\"#10b981\" \r\n                strokeWidth={3}\r\n                name=\"Revenue\"\r\n                dot={{ fill: '#10b981', strokeWidth: 2, r: 4 }}\r\n              />\r\n              <Line \r\n                type=\"monotone\" \r\n                dataKey=\"profit\" \r\n                stroke=\"#3b82f6\" \r\n                strokeWidth={3}\r\n                name=\"Profit\"\r\n                dot={{ fill: '#3b82f6', strokeWidth: 2, r: 4 }}\r\n              />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;;;;AAeO,SAAS,iBAAiB,EAAE,IAAI,EAAE,QAAQ,cAAc,EAAE,cAAc,8BAA8B,EAAyB;IACpI,qBACE,8OAAC,gIAAA,CAAA,OAAI;;0BACH,8OAAC,gIAAA,CAAA,aAAU;;kCACT,8OAAC,gIAAA,CAAA,YAAS;kCAAE;;;;;;kCACZ,8OAAC,gIAAA,CAAA,kBAAe;kCAAE;;;;;;;;;;;;0BAEpB,8OAAC,gIAAA,CAAA,cAAW;0BACV,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,mKAAA,CAAA,sBAAmB;wBAAC,OAAM;wBAAO,QAAO;kCACvC,cAAA,8OAAC,qJAAA,CAAA,YAAS;4BAAC,MAAM;4BAAM,QAAQ;gCAAE,KAAK;gCAAI,OAAO;gCAAI,MAAM;gCAAI,QAAQ;4BAAE;;8CACvE,8OAAC,6JAAA,CAAA,gBAAa;oCAAC,iBAAgB;;;;;;8CAC/B,8OAAC,qJAAA,CAAA,QAAK;oCAAC,SAAQ;;;;;;8CACf,8OAAC,qJAAA,CAAA,QAAK;oCAAC,eAAe,CAAC,QAAU,CAAC,CAAC,EAAE,CAAC,QAAQ,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;;;;;;8CACjE,8OAAC,uJAAA,CAAA,UAAO;oCACN,WAAW,CAAC,OAAe,OAAiB;4CAC1C,CAAC,CAAC,EAAE,MAAM,cAAc,IAAI;4CAC5B,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC;yCAC3C;oCACD,gBAAgB,CAAC,QAAU,CAAC,QAAQ,EAAE,OAAO;;;;;;8CAE/C,8OAAC,sJAAA,CAAA,SAAM;;;;;8CACP,8OAAC,oJAAA,CAAA,OAAI;oCACH,MAAK;oCACL,SAAQ;oCACR,QAAO;oCACP,aAAa;oCACb,MAAK;oCACL,KAAK;wCAAE,MAAM;wCAAW,aAAa;wCAAG,GAAG;oCAAE;;;;;;8CAE/C,8OAAC,oJAAA,CAAA,OAAI;oCACH,MAAK;oCACL,SAAQ;oCACR,QAAO;oCACP,aAAa;oCACb,MAAK;oCACL,KAAK;wCAAE,MAAM;wCAAW,aAAa;wCAAG,GAAG;oCAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ7D","debugId":null}},
    {"offset": {"line": 1238, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/as941/Downloads/final_Finance_goat%202/Finance_goat/frontend/src/components/dashboard/KPIPieChart.tsx"],"sourcesContent":["'use client';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Cell } from 'recharts';\r\n\r\ninterface KPIPieChartProps {\r\n  data: Array<{\r\n    name: string;\r\n    value: number;\r\n    color: string;\r\n  }>;\r\n  title?: string;\r\n  description?: string;\r\n}\r\n\r\nconst COLORS = ['#10b981', '#3b82f6', '#f59e0b', '#ef4444', '#8b5cf6', '#06b6d4'];\r\n\r\nexport function KPIPieChart({ data, title = \"Resource Distribution\", description = \"Count of active resources\" }: KPIPieChartProps) {\r\n  if (!data || data.length === 0) {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>{title}</CardTitle>\r\n          <CardDescription>{description}</CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"h-[300px] flex items-center justify-center text-muted-foreground\">\r\n            No data available\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle>{title}</CardTitle>\r\n        <CardDescription>{description}</CardDescription>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"h-[300px]\">\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <BarChart data={data} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" />\r\n              <YAxis \r\n                domain={[0, 'dataMax']}\r\n                tickFormatter={(value) => Math.round(value).toString()}\r\n                allowDecimals={false}\r\n              />\r\n              <Tooltip \r\n                formatter={(value: number, name: string) => [\r\n                  value.toLocaleString(), \r\n                  'Count'\r\n                ]}\r\n                labelFormatter={(label) => `Resource: ${label}`}\r\n              />\r\n              <Bar dataKey=\"value\">\r\n                {data.map((entry, index) => (\r\n                  <Cell key={`cell-${index}`} fill={entry.color || COLORS[index % COLORS.length]} />\r\n                ))}\r\n              </Bar>\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;;;;AAcA,MAAM,SAAS;IAAC;IAAW;IAAW;IAAW;IAAW;IAAW;CAAU;AAE1E,SAAS,YAAY,EAAE,IAAI,EAAE,QAAQ,uBAAuB,EAAE,cAAc,2BAA2B,EAAoB;IAChI,IAAI,CAAC,QAAQ,KAAK,MAAM,KAAK,GAAG;QAC9B,qBACE,8OAAC,gIAAA,CAAA,OAAI;;8BACH,8OAAC,gIAAA,CAAA,aAAU;;sCACT,8OAAC,gIAAA,CAAA,YAAS;sCAAE;;;;;;sCACZ,8OAAC,gIAAA,CAAA,kBAAe;sCAAE;;;;;;;;;;;;8BAEpB,8OAAC,gIAAA,CAAA,cAAW;8BACV,cAAA,8OAAC;wBAAI,WAAU;kCAAmE;;;;;;;;;;;;;;;;;IAM1F;IAEA,qBACE,8OAAC,gIAAA,CAAA,OAAI;;0BACH,8OAAC,gIAAA,CAAA,aAAU;;kCACT,8OAAC,gIAAA,CAAA,YAAS;kCAAE;;;;;;kCACZ,8OAAC,gIAAA,CAAA,kBAAe;kCAAE;;;;;;;;;;;;0BAEpB,8OAAC,gIAAA,CAAA,cAAW;0BACV,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,mKAAA,CAAA,sBAAmB;wBAAC,OAAM;wBAAO,QAAO;kCACvC,cAAA,8OAAC,oJAAA,CAAA,WAAQ;4BAAC,MAAM;4BAAM,QAAQ;gCAAE,KAAK;gCAAI,OAAO;gCAAI,MAAM;gCAAI,QAAQ;4BAAE;;8CACtE,8OAAC,6JAAA,CAAA,gBAAa;oCAAC,iBAAgB;;;;;;8CAC/B,8OAAC,qJAAA,CAAA,QAAK;oCAAC,SAAQ;;;;;;8CACf,8OAAC,qJAAA,CAAA,QAAK;oCACJ,QAAQ;wCAAC;wCAAG;qCAAU;oCACtB,eAAe,CAAC,QAAU,KAAK,KAAK,CAAC,OAAO,QAAQ;oCACpD,eAAe;;;;;;8CAEjB,8OAAC,uJAAA,CAAA,UAAO;oCACN,WAAW,CAAC,OAAe,OAAiB;4CAC1C,MAAM,cAAc;4CACpB;yCACD;oCACD,gBAAgB,CAAC,QAAU,CAAC,UAAU,EAAE,OAAO;;;;;;8CAEjD,8OAAC,mJAAA,CAAA,MAAG;oCAAC,SAAQ;8CACV,KAAK,GAAG,CAAC,CAAC,OAAO,sBAChB,8OAAC,oJAAA,CAAA,OAAI;4CAAuB,MAAM,MAAM,KAAK,IAAI,MAAM,CAAC,QAAQ,OAAO,MAAM,CAAC;2CAAnE,CAAC,KAAK,EAAE,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAS5C","debugId":null}},
    {"offset": {"line": 1434, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/as941/Downloads/final_Finance_goat%202/Finance_goat/frontend/src/components/dashboard/LeaderboardChart.tsx"],"sourcesContent":["'use client';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\r\n\r\ninterface LeaderboardChartProps {\r\n  data: Array<{\r\n    name: string;\r\n    value: number;\r\n    id: string;\r\n  }>;\r\n  title?: string;\r\n  description?: string;\r\n  valueLabel?: string;\r\n  color?: string;\r\n}\r\n\r\nexport function LeaderboardChart({ \r\n  data, \r\n  title = \"Top Performers\", \r\n  description = \"Performance comparison\",\r\n  valueLabel = \"Value\",\r\n  color = \"#3b82f6\"\r\n}: LeaderboardChartProps) {\r\n  // Take top 5 items for better visualization\r\n  const chartData = data.slice(0, 5).map(item => ({\r\n    name: item.name.length > 15 ? `${item.name.substring(0, 15)}...` : item.name,\r\n    value: item.value,\r\n    fullName: item.name,\r\n    id: item.id\r\n  }));\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle>{title}</CardTitle>\r\n        <CardDescription>{description}</CardDescription>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"h-[300px]\">\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <BarChart data={chartData} layout=\"horizontal\" margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis type=\"number\" tickFormatter={(value) => `$${(value / 1000).toFixed(0)}k`} />\r\n              <YAxis type=\"category\" dataKey=\"name\" width={100} />\r\n              <Tooltip \r\n                formatter={(value: number) => [`$${value.toLocaleString()}`, valueLabel]}\r\n                labelFormatter={(label, payload) => {\r\n                  if (payload && payload[0]) {\r\n                    return `Name: ${payload[0].payload.fullName}`;\r\n                  }\r\n                  return `Name: ${label}`;\r\n                }}\r\n              />\r\n              <Bar dataKey=\"value\" fill={color} />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;;;;AAgBO,SAAS,iBAAiB,EAC/B,IAAI,EACJ,QAAQ,gBAAgB,EACxB,cAAc,wBAAwB,EACtC,aAAa,OAAO,EACpB,QAAQ,SAAS,EACK;IACtB,4CAA4C;IAC5C,MAAM,YAAY,KAAK,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAA,OAAQ,CAAC;YAC9C,MAAM,KAAK,IAAI,CAAC,MAAM,GAAG,KAAK,GAAG,KAAK,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,KAAK,IAAI;YAC5E,OAAO,KAAK,KAAK;YACjB,UAAU,KAAK,IAAI;YACnB,IAAI,KAAK,EAAE;QACb,CAAC;IAED,qBACE,8OAAC,gIAAA,CAAA,OAAI;;0BACH,8OAAC,gIAAA,CAAA,aAAU;;kCACT,8OAAC,gIAAA,CAAA,YAAS;kCAAE;;;;;;kCACZ,8OAAC,gIAAA,CAAA,kBAAe;kCAAE;;;;;;;;;;;;0BAEpB,8OAAC,gIAAA,CAAA,cAAW;0BACV,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,mKAAA,CAAA,sBAAmB;wBAAC,OAAM;wBAAO,QAAO;kCACvC,cAAA,8OAAC,oJAAA,CAAA,WAAQ;4BAAC,MAAM;4BAAW,QAAO;4BAAa,QAAQ;gCAAE,KAAK;gCAAI,OAAO;gCAAI,MAAM;gCAAI,QAAQ;4BAAE;;8CAC/F,8OAAC,6JAAA,CAAA,gBAAa;oCAAC,iBAAgB;;;;;;8CAC/B,8OAAC,qJAAA,CAAA,QAAK;oCAAC,MAAK;oCAAS,eAAe,CAAC,QAAU,CAAC,CAAC,EAAE,CAAC,QAAQ,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;;;;;;8CAC/E,8OAAC,qJAAA,CAAA,QAAK;oCAAC,MAAK;oCAAW,SAAQ;oCAAO,OAAO;;;;;;8CAC7C,8OAAC,uJAAA,CAAA,UAAO;oCACN,WAAW,CAAC,QAAkB;4CAAC,CAAC,CAAC,EAAE,MAAM,cAAc,IAAI;4CAAE;yCAAW;oCACxE,gBAAgB,CAAC,OAAO;wCACtB,IAAI,WAAW,OAAO,CAAC,EAAE,EAAE;4CACzB,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,EAAE;wCAC/C;wCACA,OAAO,CAAC,MAAM,EAAE,OAAO;oCACzB;;;;;;8CAEF,8OAAC,mJAAA,CAAA,MAAG;oCAAC,SAAQ;oCAAQ,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOzC","debugId":null}},
    {"offset": {"line": 1580, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/as941/Downloads/final_Finance_goat%202/Finance_goat/frontend/src/components/dashboard/MetricsOverviewChart.tsx"],"sourcesContent":["'use client';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\r\n\r\ninterface MetricsOverviewChartProps {\r\n  data: Array<{\r\n    period: string;\r\n    revenue: number;\r\n    costs: number;\r\n    profit: number;\r\n  }>;\r\n  title?: string;\r\n  description?: string;\r\n}\r\n\r\nexport function MetricsOverviewChart({ data, title = \"Financial Overview\", description = \"Revenue, costs, and profit trends\" }: MetricsOverviewChartProps) {\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle>{title}</CardTitle>\r\n        <CardDescription>{description}</CardDescription>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"h-[400px]\">\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <AreaChart data={data} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\r\n              <defs>\r\n                <linearGradient id=\"colorRevenue\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                  <stop offset=\"5%\" stopColor=\"#10b981\" stopOpacity={0.8}/>\r\n                  <stop offset=\"95%\" stopColor=\"#10b981\" stopOpacity={0.1}/>\r\n                </linearGradient>\r\n                <linearGradient id=\"colorCosts\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                  <stop offset=\"5%\" stopColor=\"#ef4444\" stopOpacity={0.8}/>\r\n                  <stop offset=\"95%\" stopColor=\"#ef4444\" stopOpacity={0.1}/>\r\n                </linearGradient>\r\n                <linearGradient id=\"colorProfit\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                  <stop offset=\"5%\" stopColor=\"#3b82f6\" stopOpacity={0.8}/>\r\n                  <stop offset=\"95%\" stopColor=\"#3b82f6\" stopOpacity={0.1}/>\r\n                </linearGradient>\r\n              </defs>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"period\" />\r\n              <YAxis tickFormatter={(value) => `$${(value / 1000).toFixed(0)}k`} />\r\n              <Tooltip \r\n                formatter={(value: number, name: string) => [\r\n                  `$${value.toLocaleString()}`, \r\n                  name.charAt(0).toUpperCase() + name.slice(1)\r\n                ]}\r\n                labelFormatter={(label) => `Period: ${label}`}\r\n              />\r\n              <Legend />\r\n              <Area\r\n                type=\"monotone\"\r\n                dataKey=\"revenue\"\r\n                stackId=\"1\"\r\n                stroke=\"#10b981\"\r\n                fillOpacity={1}\r\n                fill=\"url(#colorRevenue)\"\r\n                name=\"Revenue\"\r\n              />\r\n              <Area\r\n                type=\"monotone\"\r\n                dataKey=\"costs\"\r\n                stackId=\"2\"\r\n                stroke=\"#ef4444\"\r\n                fillOpacity={1}\r\n                fill=\"url(#colorCosts)\"\r\n                name=\"Costs\"\r\n              />\r\n              <Area\r\n                type=\"monotone\"\r\n                dataKey=\"profit\"\r\n                stackId=\"3\"\r\n                stroke=\"#3b82f6\"\r\n                fillOpacity={1}\r\n                fill=\"url(#colorProfit)\"\r\n                name=\"Profit\"\r\n              />\r\n            </AreaChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;;;;AAeO,SAAS,qBAAqB,EAAE,IAAI,EAAE,QAAQ,oBAAoB,EAAE,cAAc,mCAAmC,EAA6B;IACvJ,qBACE,8OAAC,gIAAA,CAAA,OAAI;;0BACH,8OAAC,gIAAA,CAAA,aAAU;;kCACT,8OAAC,gIAAA,CAAA,YAAS;kCAAE;;;;;;kCACZ,8OAAC,gIAAA,CAAA,kBAAe;kCAAE;;;;;;;;;;;;0BAEpB,8OAAC,gIAAA,CAAA,cAAW;0BACV,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,mKAAA,CAAA,sBAAmB;wBAAC,OAAM;wBAAO,QAAO;kCACvC,cAAA,8OAAC,qJAAA,CAAA,YAAS;4BAAC,MAAM;4BAAM,QAAQ;gCAAE,KAAK;gCAAI,OAAO;gCAAI,MAAM;gCAAI,QAAQ;4BAAE;;8CACvE,8OAAC;;sDACC,8OAAC;4CAAe,IAAG;4CAAe,IAAG;4CAAI,IAAG;4CAAI,IAAG;4CAAI,IAAG;;8DACxD,8OAAC;oDAAK,QAAO;oDAAK,WAAU;oDAAU,aAAa;;;;;;8DACnD,8OAAC;oDAAK,QAAO;oDAAM,WAAU;oDAAU,aAAa;;;;;;;;;;;;sDAEtD,8OAAC;4CAAe,IAAG;4CAAa,IAAG;4CAAI,IAAG;4CAAI,IAAG;4CAAI,IAAG;;8DACtD,8OAAC;oDAAK,QAAO;oDAAK,WAAU;oDAAU,aAAa;;;;;;8DACnD,8OAAC;oDAAK,QAAO;oDAAM,WAAU;oDAAU,aAAa;;;;;;;;;;;;sDAEtD,8OAAC;4CAAe,IAAG;4CAAc,IAAG;4CAAI,IAAG;4CAAI,IAAG;4CAAI,IAAG;;8DACvD,8OAAC;oDAAK,QAAO;oDAAK,WAAU;oDAAU,aAAa;;;;;;8DACnD,8OAAC;oDAAK,QAAO;oDAAM,WAAU;oDAAU,aAAa;;;;;;;;;;;;;;;;;;8CAGxD,8OAAC,6JAAA,CAAA,gBAAa;oCAAC,iBAAgB;;;;;;8CAC/B,8OAAC,qJAAA,CAAA,QAAK;oCAAC,SAAQ;;;;;;8CACf,8OAAC,qJAAA,CAAA,QAAK;oCAAC,eAAe,CAAC,QAAU,CAAC,CAAC,EAAE,CAAC,QAAQ,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;;;;;;8CACjE,8OAAC,uJAAA,CAAA,UAAO;oCACN,WAAW,CAAC,OAAe,OAAiB;4CAC1C,CAAC,CAAC,EAAE,MAAM,cAAc,IAAI;4CAC5B,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC;yCAC3C;oCACD,gBAAgB,CAAC,QAAU,CAAC,QAAQ,EAAE,OAAO;;;;;;8CAE/C,8OAAC,sJAAA,CAAA,SAAM;;;;;8CACP,8OAAC,oJAAA,CAAA,OAAI;oCACH,MAAK;oCACL,SAAQ;oCACR,SAAQ;oCACR,QAAO;oCACP,aAAa;oCACb,MAAK;oCACL,MAAK;;;;;;8CAEP,8OAAC,oJAAA,CAAA,OAAI;oCACH,MAAK;oCACL,SAAQ;oCACR,SAAQ;oCACR,QAAO;oCACP,aAAa;oCACb,MAAK;oCACL,MAAK;;;;;;8CAEP,8OAAC,oJAAA,CAAA,OAAI;oCACH,MAAK;oCACL,SAAQ;oCACR,SAAQ;oCACR,QAAO;oCACP,aAAa;oCACb,MAAK;oCACL,MAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQrB","debugId":null}},
    {"offset": {"line": 1848, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/as941/Downloads/final_Finance_goat%202/Finance_goat/frontend/src/components/dashboard/ComparisonChart.tsx"],"sourcesContent":["'use client';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { ComposedChart, Line, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\r\n\r\ninterface ComparisonChartProps {\r\n  data: Array<{\r\n    period: string;\r\n    revenue: number;\r\n    costs: number;\r\n    profit: number;\r\n    profitMargin: number;\r\n  }>;\r\n  title?: string;\r\n  description?: string;\r\n}\r\n\r\nexport function ComparisonChart({ data, title = \"Revenue vs Profit Margin\", description = \"Combined view of revenue and profitability\" }: ComparisonChartProps) {\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle>{title}</CardTitle>\r\n        <CardDescription>{description}</CardDescription>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"h-[350px]\">\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <ComposedChart data={data} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"period\" />\r\n              <YAxis yAxisId=\"left\" tickFormatter={(value) => `$${(value / 1000).toFixed(0)}k`} />\r\n              <YAxis yAxisId=\"right\" orientation=\"right\" tickFormatter={(value) => `${value}%`} />\r\n              <Tooltip \r\n                formatter={(value: number, name: string) => {\r\n                  if (name === 'profitMargin') {\r\n                    return [`${value.toFixed(1)}%`, 'Profit Margin'];\r\n                  }\r\n                  return [`$${value.toLocaleString()}`, name.charAt(0).toUpperCase() + name.slice(1)];\r\n                }}\r\n                labelFormatter={(label) => `Period: ${label}`}\r\n              />\r\n              <Legend />\r\n              <Bar yAxisId=\"left\" dataKey=\"revenue\" fill=\"#10b981\" name=\"Revenue\" />\r\n              <Bar yAxisId=\"left\" dataKey=\"costs\" fill=\"#ef4444\" name=\"Costs\" />\r\n              <Line \r\n                yAxisId=\"right\" \r\n                type=\"monotone\" \r\n                dataKey=\"profitMargin\" \r\n                stroke=\"#3b82f6\" \r\n                strokeWidth={3}\r\n                name=\"Profit Margin\"\r\n                dot={{ fill: '#3b82f6', strokeWidth: 2, r: 4 }}\r\n              />\r\n            </ComposedChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;;;;AAgBO,SAAS,gBAAgB,EAAE,IAAI,EAAE,QAAQ,0BAA0B,EAAE,cAAc,4CAA4C,EAAwB;IAC5J,qBACE,8OAAC,gIAAA,CAAA,OAAI;;0BACH,8OAAC,gIAAA,CAAA,aAAU;;kCACT,8OAAC,gIAAA,CAAA,YAAS;kCAAE;;;;;;kCACZ,8OAAC,gIAAA,CAAA,kBAAe;kCAAE;;;;;;;;;;;;0BAEpB,8OAAC,gIAAA,CAAA,cAAW;0BACV,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,mKAAA,CAAA,sBAAmB;wBAAC,OAAM;wBAAO,QAAO;kCACvC,cAAA,8OAAC,yJAAA,CAAA,gBAAa;4BAAC,MAAM;4BAAM,QAAQ;gCAAE,KAAK;gCAAI,OAAO;gCAAI,MAAM;gCAAI,QAAQ;4BAAE;;8CAC3E,8OAAC,6JAAA,CAAA,gBAAa;oCAAC,iBAAgB;;;;;;8CAC/B,8OAAC,qJAAA,CAAA,QAAK;oCAAC,SAAQ;;;;;;8CACf,8OAAC,qJAAA,CAAA,QAAK;oCAAC,SAAQ;oCAAO,eAAe,CAAC,QAAU,CAAC,CAAC,EAAE,CAAC,QAAQ,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;;;;;;8CAChF,8OAAC,qJAAA,CAAA,QAAK;oCAAC,SAAQ;oCAAQ,aAAY;oCAAQ,eAAe,CAAC,QAAU,GAAG,MAAM,CAAC,CAAC;;;;;;8CAChF,8OAAC,uJAAA,CAAA,UAAO;oCACN,WAAW,CAAC,OAAe;wCACzB,IAAI,SAAS,gBAAgB;4CAC3B,OAAO;gDAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC;gDAAE;6CAAgB;wCAClD;wCACA,OAAO;4CAAC,CAAC,CAAC,EAAE,MAAM,cAAc,IAAI;4CAAE,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC;yCAAG;oCACrF;oCACA,gBAAgB,CAAC,QAAU,CAAC,QAAQ,EAAE,OAAO;;;;;;8CAE/C,8OAAC,sJAAA,CAAA,SAAM;;;;;8CACP,8OAAC,mJAAA,CAAA,MAAG;oCAAC,SAAQ;oCAAO,SAAQ;oCAAU,MAAK;oCAAU,MAAK;;;;;;8CAC1D,8OAAC,mJAAA,CAAA,MAAG;oCAAC,SAAQ;oCAAO,SAAQ;oCAAQ,MAAK;oCAAU,MAAK;;;;;;8CACxD,8OAAC,oJAAA,CAAA,OAAI;oCACH,SAAQ;oCACR,MAAK;oCACL,SAAQ;oCACR,QAAO;oCACP,aAAa;oCACb,MAAK;oCACL,KAAK;wCAAE,MAAM;wCAAW,aAAa;wCAAG,GAAG;oCAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ7D","debugId":null}},
    {"offset": {"line": 2032, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/as941/Downloads/final_Finance_goat%202/Finance_goat/frontend/src/app/dashboard/page.tsx"],"sourcesContent":["'use client';\nimport { useState, useEffect } from 'react';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { DollarSign, Users, Star, TrendingUp, TrendingDown, RefreshCw } from 'lucide-react';\nimport { useRouter } from 'next/navigation';\nimport { Button } from '@/components/ui/button';\nimport { useToast } from '@/hooks/use-toast';\nimport { apiService } from '@/lib/api';\nimport { InsightsCalculator } from '@/lib/insights-calculations';\nimport { RevenueChart } from '@/components/dashboard/RevenueChart';\nimport { ProfitTrendChart } from '@/components/dashboard/ProfitTrendChart';\nimport { KPIPieChart } from '@/components/dashboard/KPIPieChart';\nimport { LeaderboardChart } from '@/components/dashboard/LeaderboardChart';\nimport { MetricsOverviewChart } from '@/components/dashboard/MetricsOverviewChart';\nimport { ComparisonChart } from '@/components/dashboard/ComparisonChart';\n\ninterface DashboardData {\n  kpis: {\n    total_chatters: number;\n    total_models: number;\n    total_clients: number;\n  };\n  snapshot: {\n    revenue: number;\n    real_revenue: number;\n    cost: number;\n    profit: number;\n    real_profit: number;\n  };\n  month_kpis?: {\n    period_breakdown: {\n      period_1: { revenue: number; profit: number };\n      period_2: { revenue: number; profit: number };\n    };\n    growth_metrics: {\n      revenue_growth_pct: number;\n      profit_growth_pct: number;\n    };\n  };\n}\n\ninterface LeaderboardData {\n  top_model_by_revenue: Array<{ id: string; value: number }>;\n  top_model_by_profit: Array<{ id: string; value: number }>;\n  most_expensive_chatter: Array<{ id: string; value: number }>;\n}\n\n// Get available periods from utility\nconst availablePeriods = InsightsCalculator.getAvailablePeriods();\n\nexport default function DashboardPage() {\n  const { toast } = useToast();\n  const [selectedPeriod, setSelectedPeriod] = useState(new Date().toLocaleString('default', { month: 'long' }));\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [dashboardData, setDashboardData] = useState<DashboardData | null>(null);\n  const [leaderboardData, setLeaderboardData] = useState<LeaderboardData | null>(null);\n  const [models, setModels] = useState<any[]>([]);\n  const [chatters, setChatters] = useState<any[]>([]);\n\n  const currentYear = new Date().getFullYear();\n\n  const loadDashboardData = async () => {\n    try {\n      setLoading(true);\n      \n      // Parse week period if it's a week-level period\n      const parseWeekPeriod = (label: string): { period: string; week?: number } => {\n        if (label.includes(' - Week ')) {\n          const [p, wk] = label.split(' - Week ');\n          const weekNum = parseInt(wk, 10);\n          return { period: p, week: isNaN(weekNum) ? undefined : weekNum };\n        }\n        return { period: label };\n      };\n\n      const { period, week } = parseWeekPeriod(selectedPeriod);\n      \n      // Load dashboard KPIs and snapshot\n      const [kpisResponse, leaderboardResponse, modelsResponse, chattersResponse] = await Promise.all([\n        apiService.getDashboardKPIs(period, currentYear, week),\n        apiService.getLeaderboards(period, currentYear, week),\n        apiService.getAllModels({ status_filter: 'Active' }),\n        apiService.getAllChatters({ status_filter: 'active' })\n      ]);\n\n      if (kpisResponse.status === 'Success' && kpisResponse.data) {\n        setDashboardData(kpisResponse.data);\n      }\n\n      if (leaderboardResponse.status === 'Success' && leaderboardResponse.data) {\n        setLeaderboardData(leaderboardResponse.data);\n      }\n\n      if (modelsResponse.status === 'Success' && modelsResponse.data) {\n        setModels(modelsResponse.data);\n      }\n\n      if (chattersResponse.status === 'Success' && chattersResponse.data) {\n        setChatters(chattersResponse.data);\n      }\n    } catch (error) {\n      console.error('Error loading dashboard data:', error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to load dashboard data. Please try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadDashboardData();\n  }, [selectedPeriod]);\n\n  const handleRefresh = async () => {\n    setIsRefreshing(true);\n    await loadDashboardData();\n    setIsRefreshing(false);\n  };\n\n  // Calculate unique clients from models\n  const uniqueClients = models.length > 0 \n    ? [...new Set(models.map(model => model.clientAgencyName))].length \n    : 0;\n\n  // Prepare KPIs data\n  const kpis = [\n    {\n      icon: <Users className=\"h-6 w-6 text-muted-foreground\" />,\n      title: 'Total Chatters',\n      value: chatters.length.toString(),\n      change: 'Active chatters only',\n    },\n    {\n      icon: <Star className=\"h-6 w-6 text-muted-foreground\" />,\n      title: 'Total Models',\n      value: models.length.toString(),\n      change: 'Active models only',\n    },\n    {\n      icon: <DollarSign className=\"h-6 w-6 text-muted-foreground\" />,\n      title: 'Total Clients',\n      value: uniqueClients.toString(),\n      change: 'Unique client agencies',\n    },\n  ];\n\n  // Prepare weekly snapshot data with enhanced metrics\n  const weeklySnapshot = (() => {\n    // If we have month KPIs with period breakdown, use that\n    if (dashboardData?.month_kpis?.period_breakdown) {\n      const period1 = dashboardData.month_kpis.period_breakdown.period_1;\n      const period2 = dashboardData.month_kpis.period_breakdown.period_2;\n      \n      return [\n        {\n          period: 'Period 1',\n          week: 'Period 1',\n          revenue: period1?.revenue || 0,\n          costs: period1?.cost || 0,\n          profit: period1?.profit || 0,\n          profitMargin: period1?.revenue ? ((period1.profit / period1.revenue) * 100) : 0,\n          change: dashboardData.month_kpis.growth_metrics ? \n            `${(dashboardData.month_kpis.growth_metrics.revenue_growth_pct || 0) >= 0 ? '+' : ''}${(dashboardData.month_kpis.growth_metrics.revenue_growth_pct || 0).toFixed(1)}%` : \n            'N/A'\n        },\n        {\n          period: 'Period 2',\n          week: 'Period 2',\n          revenue: period2?.revenue || 0,\n          costs: period2?.cost || 0,\n          profit: period2?.profit || 0,\n          profitMargin: period2?.revenue ? ((period2.profit / period2.revenue) * 100) : 0,\n          change: dashboardData.month_kpis.growth_metrics ? \n            `${(dashboardData.month_kpis.growth_metrics.profit_growth_pct || 0) >= 0 ? '+' : ''}${(dashboardData.month_kpis.growth_metrics.profit_growth_pct || 0).toFixed(1)}%` : \n            'N/A'\n        }\n      ];\n    }\n    \n    // If we have basic snapshot data, show that as a single period\n    if (dashboardData?.snapshot) {\n      const snapshot = dashboardData.snapshot;\n      return [\n        {\n          period: 'Total Period',\n          week: 'Total Period',\n          revenue: snapshot.revenue || 0,\n          costs: snapshot.cost || 0,\n          profit: snapshot.profit || 0,\n          profitMargin: snapshot.revenue ? ((snapshot.profit / snapshot.revenue) * 100) : 0,\n          change: 'N/A'\n        }\n      ];\n    }\n    \n    // No data available\n    return [];\n  })();\n\n  const totalRevenue = dashboardData?.snapshot?.revenue || 0;\n  const totalCosts = dashboardData?.snapshot?.cost || 0;\n  const totalProfit = dashboardData?.snapshot?.profit || 0;\n\n  if (loading) {\n    return (\n      <div className=\"flex flex-col gap-6\">\n        <header className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-3xl font-bold font-headline\">Dashboard</h1>\n            <p className=\"text-muted-foreground\">\n              Loading your finance overview...\n            </p>\n          </div>\n        </header>\n        <div className=\"flex items-center justify-center py-12\">\n          <div className=\"flex items-center space-x-2\">\n            <RefreshCw className=\"h-6 w-6 animate-spin\" />\n            <span>Loading dashboard data...</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex flex-col gap-6\">\n      <header className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold font-headline\">Dashboard</h1>\n          <p className=\"text-muted-foreground\">\n            Welcome back! Here's your finance overview for {selectedPeriod}.\n          </p>\n        </div>\n        <div className=\"flex items-center gap-2\">\n          <Select value={selectedPeriod} onValueChange={setSelectedPeriod}>\n            <SelectTrigger className=\"w-48\">\n              <SelectValue />\n            </SelectTrigger>\n            <SelectContent>\n              {availablePeriods.map((period) => (\n                <SelectItem key={period} value={period}>\n                  {period}\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n          <Button\n            variant=\"outline\"\n            size=\"icon\"\n            onClick={handleRefresh}\n            disabled={isRefreshing}\n          >\n            <RefreshCw className={`h-4 w-4 ${isRefreshing ? 'animate-spin' : ''}`} />\n          </Button>\n        </div>\n      </header>\n\n      <section className=\"grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-3\">\n        {kpis.map((kpi) => (\n          <Card key={kpi.title}>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">\n                {kpi.title}\n              </CardTitle>\n              {kpi.icon}\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold\">{kpi.value}</div>\n              <p className=\"text-xs text-muted-foreground\">{kpi.change}</p>\n            </CardContent>\n          </Card>\n        ))}\n      </section>\n\n      <section className=\"grid grid-cols-1 gap-4 md:grid-cols-3\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Monthly Revenue</CardTitle>\n            <TrendingUp className=\"h-4 w-4 text-green-600\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">${totalRevenue.toLocaleString()}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              {selectedPeriod} total revenue\n            </p>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Monthly Costs</CardTitle>\n            <TrendingDown className=\"h-4 w-4 text-red-600\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">${totalCosts.toLocaleString()}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              {selectedPeriod} total costs\n            </p>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Monthly Profit</CardTitle>\n            <TrendingUp className=\"h-4 w-4 text-green-600\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">${totalProfit.toLocaleString()}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              {selectedPeriod} total profit\n            </p>\n          </CardContent>\n        </Card>\n      </section>\n\n      <section>\n        <Card>\n          <CardHeader>\n            <CardTitle>Period Snapshot</CardTitle>\n            <CardDescription>\n              Performance breakdown for {selectedPeriod}.\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            {weeklySnapshot.length > 0 ? (\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead>Period</TableHead>\n                    <TableHead className=\"text-right\">Revenue</TableHead>\n                    <TableHead className=\"text-right\">Costs</TableHead>\n                    <TableHead className=\"text-right\">Profit</TableHead>\n                    <TableHead className=\"text-right\">Growth</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {weeklySnapshot.map((item) => (\n                    <TableRow key={item.week}>\n                      <TableCell>{item.week}</TableCell>\n                      <TableCell className=\"text-right text-green-500\">\n                        ${item.revenue.toLocaleString()}\n                      </TableCell>\n                      <TableCell className=\"text-right text-red-500\">\n                        ${item.costs.toLocaleString()}\n                      </TableCell>\n                      <TableCell className=\"text-right font-bold\">\n                        ${item.profit.toLocaleString()}\n                      </TableCell>\n                      <TableCell className=\"text-right\">\n                        <span className={`text-xs ${item.change.startsWith('+') ? 'text-green-600' : 'text-red-600'}`}>\n                          {item.change}\n                        </span>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            ) : (\n              <div className=\"text-center py-8 text-muted-foreground\">\n                No period data available for {selectedPeriod}.\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </section>\n\n      {/* Interactive Charts Section */}\n      {loading ? (\n        <section className=\"grid grid-cols-1 gap-6 lg:grid-cols-2\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Revenue vs Costs Analysis</CardTitle>\n              <CardDescription>Loading chart data...</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"h-[300px] flex items-center justify-center\">\n                <div className=\"flex items-center space-x-2\">\n                  <RefreshCw className=\"h-6 w-6 animate-spin\" />\n                  <span>Loading chart...</span>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n          <Card>\n            <CardHeader>\n              <CardTitle>Profit Trend Analysis</CardTitle>\n              <CardDescription>Loading chart data...</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"h-[300px] flex items-center justify-center\">\n                <div className=\"flex items-center space-x-2\">\n                  <RefreshCw className=\"h-6 w-6 animate-spin\" />\n                  <span>Loading chart...</span>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </section>\n      ) : (\n        <section className=\"grid grid-cols-1 gap-6 lg:grid-cols-2\">\n          <RevenueChart \n            data={weeklySnapshot}\n            title=\"Revenue vs Costs Analysis\"\n            description={`Financial breakdown for ${selectedPeriod}`}\n          />\n          <ProfitTrendChart \n            data={weeklySnapshot}\n            title=\"Profit Trend Analysis\"\n            description={`Revenue and profit trends for ${selectedPeriod}`}\n          />\n        </section>\n      )}\n\n      <section className=\"grid grid-cols-1 gap-6\">\n        <MetricsOverviewChart \n          data={weeklySnapshot}\n          title=\"Financial Overview\"\n          description={`Complete financial metrics for ${selectedPeriod}`}\n        />\n      </section>\n\n      <section className=\"grid grid-cols-1 gap-6 lg:grid-cols-2\">\n        <ComparisonChart \n          data={weeklySnapshot}\n          title=\"Revenue vs Profit Margin\"\n          description={`Revenue performance and profitability analysis for ${selectedPeriod}`}\n        />\n        <KPIPieChart \n          data={[\n            { name: 'Chatters', value: chatters.length, color: '#10b981' },\n            { name: 'Models', value: models.length, color: '#3b82f6' },\n            { name: 'Clients', value: uniqueClients, color: '#f59e0b' }\n          ]}\n          title=\"Resource Distribution\"\n          description=\"Count of active resources by type\"\n        />\n      </section>\n\n      <section className=\"grid grid-cols-1 gap-6 lg:grid-cols-2\">\n        <LeaderboardChart \n          data={(leaderboardData?.top_model_by_revenue || []).map(item => ({\n            name: models.find(m => m.model_id === item.id)?.modelName || `Model ${item.id}`,\n            value: item.value,\n            id: item.id\n          }))}\n          title=\"Top Models by Revenue\"\n          description=\"Revenue performance comparison\"\n          valueLabel=\"Revenue\"\n          color=\"#10b981\"\n        />\n        <LeaderboardChart \n          data={(leaderboardData?.top_model_by_profit || []).map(item => ({\n            name: models.find(m => m.model_id === item.id)?.modelName || `Model ${item.id}`,\n            value: item.value,\n            id: item.id\n          }))}\n          title=\"Top Models by Profit\"\n          description=\"Profit performance comparison\"\n          valueLabel=\"Profit\"\n          color=\"#3b82f6\"\n        />\n      </section>\n\n      <section className=\"grid grid-cols-1 gap-6 lg:grid-cols-3\">\n        <LeaderboardCard \n          title=\"Top Model by Revenue\" \n          data={leaderboardData?.top_model_by_revenue || []} \n          models={models}\n          valueKey=\"value\" \n          valueHeader=\"Revenue\" \n          linkPrefix='/dashboard/models' \n          linkKey='id' \n        />\n        <LeaderboardCard \n          title=\"Top Model by Profit\" \n          data={leaderboardData?.top_model_by_profit || []} \n          models={models}\n          valueKey=\"value\" \n          valueHeader=\"Profit\" \n          linkPrefix='/dashboard/models' \n          linkKey='id' \n        />\n        <LeaderboardCard \n          title=\"Most Expensive Chatter\" \n          data={leaderboardData?.most_expensive_chatter || []} \n          chatters={chatters}\n          valueKey=\"value\" \n          valueHeader=\"Pay\" \n          linkPrefix='/dashboard/chatters' \n        />\n      </section>\n    </div>\n  );\n}\n\ninterface LeaderboardCardProps {\n    title: string;\n    data: Array<{ id: string; value: number }>;\n    models?: any[];\n    chatters?: any[];\n    valueKey: string;\n    valueHeader: string;\n    linkPrefix: string;\n    linkKey?: string;\n}\n\nfunction LeaderboardCard({ title, data, models = [], chatters = [], valueKey, valueHeader, linkPrefix, linkKey }: LeaderboardCardProps) {\n  const router = useRouter();\n\n  const handleRowClick = (item: any) => {\n      if (linkKey) {\n          router.push(`${linkPrefix}/${item[linkKey]}/insights`);\n      } else {\n          router.push(linkPrefix);\n      }\n  }\n\n  const getEntityName = (id: string) => {\n    // Try to find in models first\n    const model = models.find(m => m.model_id === id);\n    if (model) return model.modelName;\n    \n    // Then try chatters\n    const chatter = chatters.find(c => c.chatter_id === id);\n    if (chatter) return chatter.name;\n    \n    return `Entity ${id}`;\n  }\n\n  const formatValue = (value: number) => {\n    if (valueKey === 'value') {\n      return `$${value.toLocaleString()}`;\n    }\n    return value.toString();\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>{title}</CardTitle>\n      </CardHeader>\n      <CardContent>\n        {data.length > 0 ? (\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHead>Rank</TableHead>\n                <TableHead>Name</TableHead>\n                <TableHead className=\"text-right\">{valueHeader}</TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {data.map((item, index) => (\n                <TableRow key={item.id}>\n                  <TableCell>{index + 1}</TableCell>\n                  <TableCell>\n                      <Button variant='link' className='p-0 h-auto' onClick={() => handleRowClick(item)}>\n                          {getEntityName(item.id)}\n                      </Button>\n                  </TableCell>\n                  <TableCell className=\"text-right\">{formatValue(item.value)}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        ) : (\n          <div className=\"text-center py-8 text-muted-foreground\">\n            No data available\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}