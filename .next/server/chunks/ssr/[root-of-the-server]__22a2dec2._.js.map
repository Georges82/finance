{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///Users/skysha/Downloads/GoatFinance/frontend/src/hooks/use-toast.ts"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\n\r\nimport type {\r\n  ToastActionElement,\r\n  ToastProps,\r\n} from \"@/components/ui/toast\"\r\n\r\nconst TOAST_LIMIT = 1\r\nconst TOAST_REMOVE_DELAY = 1000000\r\n\r\ntype ToasterToast = ToastProps & {\r\n  id: string\r\n  title?: React.ReactNode\r\n  description?: React.ReactNode\r\n  action?: ToastActionElement\r\n}\r\n\r\nconst actionTypes = {\r\n  ADD_TOAST: \"ADD_TOAST\",\r\n  UPDATE_TOAST: \"UPDATE_TOAST\",\r\n  DISMISS_TOAST: \"DISMISS_TOAST\",\r\n  REMOVE_TOAST: \"REMOVE_TOAST\",\r\n} as const\r\n\r\nlet count = 0\r\n\r\nfunction genId() {\r\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\r\n  return count.toString()\r\n}\r\n\r\ntype ActionType = typeof actionTypes\r\n\r\ntype Action =\r\n  | {\r\n      type: ActionType[\"ADD_TOAST\"]\r\n      toast: ToasterToast\r\n    }\r\n  | {\r\n      type: ActionType[\"UPDATE_TOAST\"]\r\n      toast: Partial<ToasterToast>\r\n    }\r\n  | {\r\n      type: ActionType[\"DISMISS_TOAST\"]\r\n      toastId?: ToasterToast[\"id\"]\r\n    }\r\n  | {\r\n      type: ActionType[\"REMOVE_TOAST\"]\r\n      toastId?: ToasterToast[\"id\"]\r\n    }\r\n\r\ninterface State {\r\n  toasts: ToasterToast[]\r\n}\r\n\r\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\r\n\r\nconst addToRemoveQueue = (toastId: string) => {\r\n  if (toastTimeouts.has(toastId)) {\r\n    return\r\n  }\r\n\r\n  const timeout = setTimeout(() => {\r\n    toastTimeouts.delete(toastId)\r\n    dispatch({\r\n      type: \"REMOVE_TOAST\",\r\n      toastId: toastId,\r\n    })\r\n  }, TOAST_REMOVE_DELAY)\r\n\r\n  toastTimeouts.set(toastId, timeout)\r\n}\r\n\r\nexport const reducer = (state: State, action: Action): State => {\r\n  switch (action.type) {\r\n    case \"ADD_TOAST\":\r\n      return {\r\n        ...state,\r\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\r\n      }\r\n\r\n    case \"UPDATE_TOAST\":\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map((t) =>\r\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\r\n        ),\r\n      }\r\n\r\n    case \"DISMISS_TOAST\": {\r\n      const { toastId } = action\r\n\r\n      if (toastId) {\r\n        addToRemoveQueue(toastId)\r\n      } else {\r\n        state.toasts.forEach((toast) => {\r\n          addToRemoveQueue(toast.id)\r\n        })\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map((t) =>\r\n          t.id === toastId || toastId === undefined\r\n            ? {\r\n                ...t,\r\n                open: false,\r\n              }\r\n            : t\r\n        ),\r\n      }\r\n    }\r\n    case \"REMOVE_TOAST\":\r\n      if (action.toastId === undefined) {\r\n        return {\r\n          ...state,\r\n          toasts: [],\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\r\n      }\r\n  }\r\n}\r\n\r\nconst listeners: Array<(state: State) => void> = []\r\n\r\nlet memoryState: State = { toasts: [] }\r\n\r\nfunction dispatch(action: Action) {\r\n  memoryState = reducer(memoryState, action)\r\n  listeners.forEach((listener) => {\r\n    listener(memoryState)\r\n  })\r\n}\r\n\r\ntype Toast = Omit<ToasterToast, \"id\">\r\n\r\nfunction toast({ ...props }: Toast) {\r\n  const id = genId()\r\n\r\n  const update = (props: ToasterToast) =>\r\n    dispatch({\r\n      type: \"UPDATE_TOAST\",\r\n      toast: { ...props, id },\r\n    })\r\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\r\n\r\n  dispatch({\r\n    type: \"ADD_TOAST\",\r\n    toast: {\r\n      ...props,\r\n      id,\r\n      open: true,\r\n      onOpenChange: (open) => {\r\n        if (!open) dismiss()\r\n      },\r\n    },\r\n  })\r\n\r\n  return {\r\n    id: id,\r\n    dismiss,\r\n    update,\r\n  }\r\n}\r\n\r\nfunction useToast() {\r\n  const [state, setState] = React.useState<State>(memoryState)\r\n\r\n  React.useEffect(() => {\r\n    listeners.push(setState)\r\n    return () => {\r\n      const index = listeners.indexOf(setState)\r\n      if (index > -1) {\r\n        listeners.splice(index, 1)\r\n      }\r\n    }\r\n  }, [state])\r\n\r\n  return {\r\n    ...state,\r\n    toast,\r\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\r\n  }\r\n}\r\n\r\nexport { useToast, toast }\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///Users/skysha/Downloads/GoatFinance/frontend/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,8MAAO,EAAC,IAAA,qLAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"sources":["file:///Users/skysha/Downloads/GoatFinance/frontend/src/components/ui/toast.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\nimport { X } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst ToastProvider = ToastPrimitives.Provider\r\n\r\nconst ToastViewport = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Viewport\r\n    ref={ref}\r\n    className={cn(\r\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\r\n\r\nconst toastVariants = cva(\r\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"border bg-background text-foreground\",\r\n        destructive:\r\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nconst Toast = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Root>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\r\n    VariantProps<typeof toastVariants>\r\n>(({ className, variant, ...props }, ref) => {\r\n  return (\r\n    <ToastPrimitives.Root\r\n      ref={ref}\r\n      className={cn(toastVariants({ variant }), className)}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nToast.displayName = ToastPrimitives.Root.displayName\r\n\r\nconst ToastAction = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Action>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Action\r\n    ref={ref}\r\n    className={cn(\r\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nToastAction.displayName = ToastPrimitives.Action.displayName\r\n\r\nconst ToastClose = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Close>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Close\r\n    ref={ref}\r\n    className={cn(\r\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\r\n      className\r\n    )}\r\n    toast-close=\"\"\r\n    {...props}\r\n  >\r\n    <X className=\"h-4 w-4\" />\r\n  </ToastPrimitives.Close>\r\n))\r\nToastClose.displayName = ToastPrimitives.Close.displayName\r\n\r\nconst ToastTitle = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Title>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Title\r\n    ref={ref}\r\n    className={cn(\"text-sm font-semibold\", className)}\r\n    {...props}\r\n  />\r\n))\r\nToastTitle.displayName = ToastPrimitives.Title.displayName\r\n\r\nconst ToastDescription = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Description>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm opacity-90\", className)}\r\n    {...props}\r\n  />\r\n))\r\nToastDescription.displayName = ToastPrimitives.Description.displayName\r\n\r\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\r\n\r\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\r\n\r\nexport {\r\n  type ToastProps,\r\n  type ToastActionElement,\r\n  ToastProvider,\r\n  ToastViewport,\r\n  Toast,\r\n  ToastTitle,\r\n  ToastDescription,\r\n  ToastClose,\r\n  ToastAction,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AAEA;AAPA;;;;;;;AASA,MAAM,gBAAgB,qNAAwB;AAE9C,MAAM,8BAAgB,2PAAgB,CAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,sRAAC,qNAAwB;QACvB,KAAK;QACL,WAAW,IAAA,iKAAE,EACX,qIACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,qNAAwB,CAAC,WAAW;AAEhE,MAAM,gBAAgB,IAAA,+MAAG,EACvB,6lBACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,2PAAgB,CAI5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE;IACnC,qBACE,sRAAC,iNAAoB;QACnB,KAAK;QACL,WAAW,IAAA,iKAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;AACA,MAAM,WAAW,GAAG,iNAAoB,CAAC,WAAW;AAEpD,MAAM,4BAAc,2PAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,sRAAC,mNAAsB;QACrB,KAAK;QACL,WAAW,IAAA,iKAAE,EACX,sgBACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,mNAAsB,CAAC,WAAW;AAE5D,MAAM,2BAAa,2PAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,sRAAC,kNAAqB;QACpB,KAAK;QACL,WAAW,IAAA,iKAAE,EACX,yVACA;QAEF,eAAY;QACX,GAAG,KAAK;kBAET,cAAA,sRAAC,yOAAC;YAAC,WAAU;;;;;;;;;;;AAGjB,WAAW,WAAW,GAAG,kNAAqB,CAAC,WAAW;AAE1D,MAAM,2BAAa,2PAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,sRAAC,kNAAqB;QACpB,KAAK;QACL,WAAW,IAAA,iKAAE,EAAC,yBAAyB;QACtC,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG,kNAAqB,CAAC,WAAW;AAE1D,MAAM,iCAAmB,2PAAgB,CAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,sRAAC,wNAA2B;QAC1B,KAAK;QACL,WAAW,IAAA,iKAAE,EAAC,sBAAsB;QACnC,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG,wNAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"sources":["file:///Users/skysha/Downloads/GoatFinance/frontend/src/components/ui/toaster.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useToast } from \"@/hooks/use-toast\"\r\nimport {\r\n  Toast,\r\n  ToastClose,\r\n  ToastDescription,\r\n  ToastProvider,\r\n  ToastTitle,\r\n  ToastViewport,\r\n} from \"@/components/ui/toast\"\r\n\r\nexport function Toaster() {\r\n  const { toasts } = useToast()\r\n\r\n  return (\r\n    <ToastProvider>\r\n      {toasts.map(function ({ id, title, description, action, ...props }) {\r\n        return (\r\n          <Toast key={id} {...props}>\r\n            <div className=\"grid gap-1\">\r\n              {title && <ToastTitle>{title}</ToastTitle>}\r\n              {description && (\r\n                <ToastDescription>{description}</ToastDescription>\r\n              )}\r\n            </div>\r\n            {action}\r\n            <ToastClose />\r\n          </Toast>\r\n        )\r\n      })}\r\n      <ToastViewport />\r\n    </ToastProvider>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAYO,SAAS;IACd,MAAM,EAAE,MAAM,EAAE,GAAG,IAAA,gLAAQ;IAE3B,qBACE,sRAAC,0LAAa;;YACX,OAAO,GAAG,CAAC,SAAU,EAAE,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,GAAG,OAAO;gBAChE,qBACE,sRAAC,kLAAK;oBAAW,GAAG,KAAK;;sCACvB,sRAAC;4BAAI,WAAU;;gCACZ,uBAAS,sRAAC,uLAAU;8CAAE;;;;;;gCACtB,6BACC,sRAAC,6LAAgB;8CAAE;;;;;;;;;;;;wBAGtB;sCACD,sRAAC,uLAAU;;;;;;mBARD;;;;;YAWhB;0BACA,sRAAC,0LAAa;;;;;;;;;;;AAGpB","debugId":null}},
    {"offset": {"line": 368, "column": 0}, "map": {"version":3,"sources":["file:///Users/skysha/Downloads/GoatFinance/frontend/src/components/theme-provider.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { ThemeProvider as NextThemesProvider } from \"next-themes\"\r\nimport { type ThemeProviderProps } from \"next-themes/dist/types\"\r\n\r\nexport function ThemeProvider({ children, ...props }: ThemeProviderProps) {\r\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>\r\n}\r\n"],"names":[],"mappings":";;;;;AAGA;AAHA;;;AAMO,SAAS,cAAc,EAAE,QAAQ,EAAE,GAAG,OAA2B;IACtE,qBAAO,sRAAC,yMAAkB;QAAE,GAAG,KAAK;kBAAG;;;;;;AACzC","debugId":null}},
    {"offset": {"line": 391, "column": 0}, "map": {"version":3,"sources":["file:///Users/skysha/Downloads/GoatFinance/frontend/src/lib/api.ts"],"sourcesContent":["// Environment-aware API configuration\nconst getApiBaseUrl = () => {\n  // Check for environment variable first (production)\n  if (process.env.NEXT_PUBLIC_API_BASE_URL) {\n    return process.env.NEXT_PUBLIC_API_BASE_URL;\n  }\n  \n  // Development fallback\n  return 'http://localhost:8000';\n};\n\nconst API_BASE_URL = getApiBaseUrl();\nconst API_PREFIX = '/api/v1';\n\nconsole.log('API Service initialized with base URL:', API_BASE_URL);\nconsole.log('Environment:', process.env.NODE_ENV);\n\nexport interface AdminCreatePayload {\n  admin_email: string;\n  admin_username: string;\n  admin_password: string;\n  admin_first_name: string;\n  admin_last_name: string;\n  admin_role: 'admin' | 'super admin';\n  status?: 'active' | 'deleted';\n}\n\nexport interface AdminUpdatePayload {\n  admin_email?: string;\n  admin_username?: string;\n  admin_password?: string;\n  admin_first_name?: string;\n  admin_last_name?: string;\n  admin_role?: 'admin' | 'super admin';\n  status?: 'active' | 'deleted';\n}\n\nexport interface LoginPayload {\n  email_or_username: string;\n  password: string;\n}\n\n// Chatter Management Interfaces\nexport interface ChatterCreatePayload {\n  name: string;\n  telegram_username: string;\n  country: string;\n  shift: 'A' | 'B' | 'C';\n  notes?: string;\n  status?: 'active' | 'inactive';\n  payment_status?: 'Paid' | 'Not Paid';\n}\n\nexport interface ChatterUpdatePayload {\n  name?: string;\n  telegram_username?: string;\n  country?: string;\n  shift?: 'A' | 'B' | 'C';\n  notes?: string;\n  status?: 'active' | 'inactive';\n  payment_status?: 'Paid' | 'Not Paid';\n  last_salary_period?: string;\n  amount_for_period?: number;\n}\n\nexport interface ChatterRatePayload {\n  models_count: number;\n  hourly_rate: number;\n}\n\nexport interface ChatterRateUpdatePayload {\n  rates: ChatterRatePayload[];\n}\n\nexport interface Chatter {\n  chatter_id: string;\n  name: string;\n  telegram_username: string;\n  country: string;\n  shift: 'A' | 'B' | 'C';\n  status: 'active' | 'inactive';\n  notes?: string;\n  last_salary_period?: string;\n  amount_for_period?: number;\n  payment_status: 'Paid' | 'Not Paid';\n  created_at?: string;\n  updated_at?: string;\n  rates?: ChatterRate[];\n}\n\nexport interface ChatterRate {\n  rate_id: string;\n  chatter_id: string;\n  models_count: number;\n  hourly_rate: number;\n  created_at?: string;\n  updated_at?: string;\n}\n\n// Manager Management Interfaces\nexport interface ManagerCreatePayload {\n  name: string;\n  role: 'Manager' | 'Team Leader';\n  telegram_username: string;\n  email?: string;\n  phone?: string;\n  status?: 'Active' | 'Inactive';\n  salary_type: 'Commission-based' | 'Fixed';\n  revenue_threshold?: number;\n  commission_rate?: number;\n  fixed_salary?: number;\n  assigned_models?: string[];\n}\n\nexport interface ManagerUpdatePayload {\n  name?: string;\n  role?: 'Manager' | 'Team Leader';\n  telegram_username?: string;\n  email?: string;\n  phone?: string;\n  status?: 'Active' | 'Inactive';\n  salary_type?: 'Commission-based' | 'Fixed';\n  revenue_threshold?: number;\n  commission_rate?: number;\n  fixed_salary?: number;\n  assigned_models?: string[];\n}\n\nexport interface Manager {\n  manager_id: string;\n  name: string;\n  role: 'Manager' | 'Team Leader';\n  telegram_username: string;\n  email?: string;\n  phone?: string;\n  status: 'Active' | 'Inactive';\n  salary_type: 'Commission-based' | 'Fixed';\n  revenue_threshold?: number;\n  commission_rate?: number;\n  fixed_salary?: number;\n  assigned_models: string[];\n  created_at?: string;\n  updated_at?: string;\n}\n\n// Assistant Management Interfaces\nexport interface AssistantCreatePayload {\n  name: string;\n  telegram_username: string;\n  status?: 'Active' | 'Inactive';\n  salary_type: 'Fixed';\n  fixed_salary: number;\n  salary_period: 'Weekly' | 'Bi-weekly' | 'Monthly';\n}\n\nexport interface AssistantUpdatePayload {\n  name?: string;\n  telegram_username?: string;\n  status?: 'Active' | 'Inactive';\n  fixed_salary?: number;\n  salary_period?: 'Weekly' | 'Bi-weekly' | 'Monthly';\n}\n\nexport interface Assistant {\n  assistant_id: string;\n  name: string;\n  telegram_username: string;\n  status: 'Active' | 'Inactive';\n  salary_type: 'Fixed';\n  fixed_salary: number;\n  salary_period: 'Weekly' | 'Bi-weekly' | 'Monthly';\n  created_at?: string;\n  updated_at?: string;\n}\n\nexport interface TeamLeader {\n  manager_id: string;\n  name: string;\n  role: 'Team Leader';\n  telegram_username: string;\n  status: 'Active' | 'Inactive';\n  salary_type: 'Commission-based' | 'Fixed';\n  revenue_threshold: number;\n  commission_rate: number;\n  fixed_salary: number;\n  assigned_models: string[];\n  created_at?: string;\n  updated_at?: string;\n}\n\n// Model Management Interfaces\nexport interface ModelCreatePayload {\n  modelName: string;\n  clientAgencyName: string;\n  managerName: string;\n  teamLeader: string;\n  referencedModels?: string[];\n  status?: 'Active' | 'Inactive';\n  notes?: string;\n  earningsType: 'Type 1' | 'Type 2';\n  cutLogic: {\n    percentage1?: number;\n    threshold?: number;\n    fixedAmount?: number;\n    percentage2?: number;\n  };\n  commissionRules: {\n    baseCommission: number;\n    bonusEnabled: boolean;\n    bonusThreshold?: number;\n    bonusCommission?: number;\n  };\n  paymentStatus?: 'Paid' | 'Not Paid';\n}\n\nexport interface ModelUpdatePayload extends Partial<ModelCreatePayload> {}\n\nexport interface ModelRecord {\n  model_id: string;\n  modelName: string;\n  clientAgencyName: string;\n  managerName: string;\n  teamLeader: string;\n  referencedModels: string[];\n  status: 'Active' | 'Inactive';\n  notes?: string;\n  earningsType: 'Type 1' | 'Type 2';\n  cutLogic: {\n    percentage1?: number;\n    threshold?: number;\n    fixedAmount?: number;\n    percentage2?: number;\n  };\n  commissionRules: {\n    baseCommission: number;\n    bonusEnabled: boolean;\n    bonusThreshold?: number;\n    bonusCommission?: number;\n  };\n  paymentStatus: 'Paid' | 'Not Paid';\n  created_at?: string;\n  updated_at?: string;\n}\n\nexport interface ApiResponse<T = any> {\n  status: 'Success' | 'Failed';\n  message: string;\n  data?: T;\n  total_count?: number;\n}\n\nclass ApiService {\n  private baseUrl: string;\n\n  constructor() {\n    this.baseUrl = `${API_BASE_URL}${API_PREFIX}`;\n    console.log('API Service initialized with base URL:', this.baseUrl);\n  }\n\n  private async request<T>(\n    endpoint: string,\n    options: RequestInit = {}\n  ): Promise<ApiResponse<T>> {\n    const url = `${this.baseUrl}${endpoint}`;\n    \n    // Get token from cookies instead of localStorage\n    const getCookie = (name: string) => {\n      const value = `; ${document.cookie}`;\n      const parts = value.split(`; ${name}=`);\n      if (parts.length === 2) return parts.pop()?.split(';').shift();\n      return null;\n    };\n    \n    const token = getCookie('access_token');\n    \n    const defaultOptions: RequestInit = {\n      headers: {\n        'Content-Type': 'application/json',\n        ...(token && { 'Authorization': `Bearer ${token}` }), // Add token if available\n        ...options.headers,\n      },\n      credentials: 'include', // Include cookies for authentication\n    };\n\n    console.log(`Making API request to: ${url}`);\n    console.log('Request options:', { ...defaultOptions, ...options });\n    \n    // Debug cookies and token\n    console.log('Current cookies:', document.cookie);\n    console.log('Auth token:', token ? 'Present' : 'Missing');\n\n    try {\n      const response = await fetch(url, {\n        ...defaultOptions,\n        ...options,\n      });\n\n      console.log('Response status:', response.status);\n      console.log('Response headers:', Object.fromEntries(response.headers.entries()));\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('API Error Response:', errorText);\n        \n        // Handle authentication errors specifically\n        if (response.status === 403) {\n          throw new Error('Authentication failed. Please log in again.');\n        }\n        \n        throw new Error(`HTTP error! status: ${response.status}, message: ${errorText}`);\n      }\n\n      const data = await response.json();\n      console.log('API Response data:', data);\n      return data;\n    } catch (error) {\n      console.error('API request failed:', error);\n      throw error;\n    }\n  }\n\n  // Admin Management APIs\n  async registerAdmin(payload: AdminCreatePayload): Promise<ApiResponse> {\n    return this.request('/admin/register', {\n      method: 'POST',\n      body: JSON.stringify(payload),\n    });\n  }\n\n  async loginAdmin(payload: LoginPayload): Promise<ApiResponse> {\n    return this.request('/admin/login', {\n      method: 'POST',\n      body: JSON.stringify(payload),\n    });\n  }\n\n  async logoutAdmin(): Promise<ApiResponse> {\n    return this.request('/admin/logout', {\n      method: 'GET',\n    });\n  }\n\n  async getAdminDetails(identifier: string): Promise<ApiResponse> {\n    return this.request(`/admin/details?identifier=${encodeURIComponent(identifier)}`);\n  }\n\n  async getAllAdmins(params: {\n    limit?: number;\n    offset?: number;\n    query?: string;\n    sort?: string;\n    sort_by?: string;\n  } = {}): Promise<ApiResponse> {\n    const searchParams = new URLSearchParams();\n    Object.entries(params).forEach(([key, value]) => {\n      if (value !== undefined) {\n        searchParams.append(key, value.toString());\n      }\n    });\n\n    return this.request(`/admin/get_all_admin?${searchParams.toString()}`);\n  }\n\n  async updateAdmin(adminId: string, payload: AdminUpdatePayload): Promise<ApiResponse> {\n    return this.request(`/admin/update?admin_id=${encodeURIComponent(adminId)}`, {\n      method: 'PUT',\n      body: JSON.stringify(payload),\n    });\n  }\n\n  async deleteAdmin(adminId: string): Promise<ApiResponse> {\n    return this.request(`/admin/delete?admin_id=${encodeURIComponent(adminId)}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Chatter Management APIs\n  async createChatter(payload: ChatterCreatePayload): Promise<ApiResponse<Chatter>> {\n    return this.request('/chatter/register', {\n      method: 'POST',\n      body: JSON.stringify(payload),\n    });\n  }\n\n  async getAllChatters(params: {\n    limit?: number;\n    offset?: number;\n    query?: string;\n    sort?: string;\n    sort_by?: string;\n    status_filter?: string;\n  } = {}): Promise<ApiResponse<Chatter[]>> {\n    const searchParams = new URLSearchParams();\n    Object.entries(params).forEach(([key, value]) => {\n      if (value !== undefined) {\n        searchParams.append(key, value.toString());\n      }\n    });\n\n    return this.request(`/chatter/list?${searchParams.toString()}`);\n  }\n\n  async getChattersWithSalaryData(params: {\n    limit?: number;\n    offset?: number;\n    query?: string;\n    sort?: string;\n    sort_by?: string;\n  } = {}): Promise<ApiResponse<Chatter[]>> {\n    const searchParams = new URLSearchParams();\n    Object.entries(params).forEach(([key, value]) => {\n      if (value !== undefined) {\n        searchParams.append(key, value.toString());\n      }\n    });\n\n    return this.request(`/chatter/list-with-salary?${searchParams.toString()}`);\n  }\n\n  async getChatterDetails(chatterId: string): Promise<ApiResponse<Chatter>> {\n    return this.request(`/chatter/details?chatter_id=${encodeURIComponent(chatterId)}`);\n  }\n\n  async updateChatter(chatterId: string, payload: ChatterUpdatePayload): Promise<ApiResponse> {\n    return this.request(`/chatter/update?chatter_id=${encodeURIComponent(chatterId)}`, {\n      method: 'PUT',\n      body: JSON.stringify(payload),\n    });\n  }\n\n  async deleteChatter(chatterId: string): Promise<ApiResponse> {\n    return this.request(`/chatter/delete?chatter_id=${encodeURIComponent(chatterId)}`, {\n      method: 'DELETE',\n    });\n  }\n\n  async getChatterRates(chatterId: string): Promise<ApiResponse<ChatterRate[]>> {\n    return this.request(`/chatter/rates?chatter_id=${encodeURIComponent(chatterId)}`);\n  }\n\n  async addChatterRate(chatterId: string, payload: ChatterRatePayload): Promise<ApiResponse> {\n    return this.request(`/chatter/rate/add?chatter_id=${encodeURIComponent(chatterId)}`, {\n      method: 'POST',\n      body: JSON.stringify(payload),\n    });\n  }\n\n  async updateChatterRates(chatterId: string, payload: ChatterRateUpdatePayload): Promise<ApiResponse> {\n    return this.request(`/chatter/rate/update?chatter_id=${encodeURIComponent(chatterId)}`, {\n      method: 'PUT',\n      body: JSON.stringify(payload),\n    });\n  }\n\n  async deleteChatterRate(rateId: string): Promise<ApiResponse> {\n    return this.request(`/chatter/rate/delete?rate_id=${encodeURIComponent(rateId)}`, {\n      method: 'DELETE',\n    });\n  }\n\n  async updateChatterPayoutStatus(\n    chatterId: string, \n    period: string, \n    year?: number, \n    paymentStatus: string = 'Not Paid'\n  ): Promise<ApiResponse> {\n    const params = new URLSearchParams({\n      chatter_id: chatterId,\n      period: period,\n      payment_status: paymentStatus,\n      ...(year && { year: year.toString() })\n    });\n    return this.request(`/payouts/update?${params.toString()}`, {\n      method: 'PUT',\n    });\n  }\n\n  // Manager Management APIs\n  async createManager(payload: ManagerCreatePayload): Promise<ApiResponse<{ manager_id: string }>> {\n    return this.request('/manager/register', {\n      method: 'POST',\n      body: JSON.stringify(payload),\n    });\n  }\n\n  async getAllManagers(params: {\n    limit?: number;\n    offset?: number;\n    query?: string;\n    sort?: string;\n    sort_by?: string;\n  } = {}): Promise<ApiResponse<Manager[]>> {\n    const searchParams = new URLSearchParams();\n    Object.entries(params).forEach(([key, value]) => {\n      if (value !== undefined) {\n        searchParams.append(key, value.toString());\n      }\n    });\n\n    return this.request(`/manager/list?${searchParams.toString()}`);\n  }\n\n  async getManagersWithPeriodSalaries(periods: string[], year?: number): Promise<ApiResponse<{\n    managers: Manager[];\n    periods: string[];\n    year: number;\n  }>> {\n    const queryParams = new URLSearchParams();\n    queryParams.append('periods', periods.join(','));\n    if (year) queryParams.append('year', year.toString());\n\n    return this.request(`/managers/with-salaries?${queryParams.toString()}`);\n  }\n\n  async getManagerDetails(managerId: string): Promise<ApiResponse<Manager>> {\n    return this.request(`/manager/details?manager_id=${encodeURIComponent(managerId)}`);\n  }\n\n  async updateManager(managerId: string, payload: ManagerUpdatePayload): Promise<ApiResponse> {\n    return this.request(`/manager/update?manager_id=${encodeURIComponent(managerId)}`, {\n      method: 'PUT',\n      body: JSON.stringify(payload),\n    });\n  }\n\n  async deleteManager(managerId: string): Promise<ApiResponse> {\n    return this.request(`/manager/delete?manager_id=${encodeURIComponent(managerId)}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Team Leader APIs (separate table)\n  async getAllTeamLeaders(params: {\n    limit?: number;\n    offset?: number;\n    query?: string;\n    sort?: string;\n    sort_by?: string;\n  } = {}): Promise<ApiResponse<TeamLeader[]>> {\n    const searchParams = new URLSearchParams();\n    Object.entries(params).forEach(([key, value]) => {\n      if (value !== undefined) {\n        searchParams.append(key, value.toString());\n      }\n    });\n\n    return this.request(`/team-leader/list?${searchParams.toString()}`);\n  }\n\n  async createTeamLeader(payload: Partial<TeamLeader> & { name: string; telegram_username: string }): Promise<ApiResponse<{ team_leader_id: string }>> {\n    return this.request('/team-leader/register', {\n      method: 'POST',\n      body: JSON.stringify(payload),\n    });\n  }\n\n  async updateTeamLeader(teamLeaderId: string, payload: Partial<TeamLeader>): Promise<ApiResponse> {\n    return this.request(`/team-leader/update?team_leader_id=${encodeURIComponent(teamLeaderId)}`, {\n      method: 'PUT',\n      body: JSON.stringify(payload),\n    });\n  }\n\n  async deleteTeamLeader(teamLeaderId: string): Promise<ApiResponse> {\n    return this.request(`/team-leader/delete?team_leader_id=${encodeURIComponent(teamLeaderId)}`, {\n      method: 'DELETE',\n    });\n  }\n\n  async getTeamLeaderDetails(teamLeaderId: string): Promise<ApiResponse<TeamLeader>> {\n    return this.request(`/team-leader/details?team_leader_id=${encodeURIComponent(teamLeaderId)}`);\n  }\n\n  // Assistant Management APIs\n  async createAssistant(payload: AssistantCreatePayload): Promise<ApiResponse<Assistant>> {\n    return this.request('/assistant/register', {\n      method: 'POST',\n      body: JSON.stringify(payload),\n    });\n  }\n\n  async getAllAssistants(params: {\n    limit?: number;\n    offset?: number;\n    query?: string;\n    sort?: string;\n    sort_by?: string;\n  } = {}): Promise<ApiResponse<Assistant[]>> {\n    const searchParams = new URLSearchParams();\n    Object.entries(params).forEach(([key, value]) => {\n      if (value !== undefined) {\n        searchParams.append(key, value.toString());\n      }\n    });\n\n    return this.request(`/assistant/list?${searchParams.toString()}`);\n  }\n\n  async getAssistantDetails(assistantId: string): Promise<ApiResponse<Assistant>> {\n    return this.request(`/assistant/details?assistant_id=${encodeURIComponent(assistantId)}`);\n  }\n\n  async updateAssistant(assistantId: string, payload: AssistantUpdatePayload): Promise<ApiResponse> {\n    return this.request(`/assistant/update?assistant_id=${encodeURIComponent(assistantId)}`, {\n      method: 'PUT',\n      body: JSON.stringify(payload),\n    });\n  }\n\n  async deleteAssistant(assistantId: string): Promise<ApiResponse> {\n    return this.request(`/assistant/delete?assistant_id=${encodeURIComponent(assistantId)}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Reports Management APIs\n  async getReportsPeriods(year?: number): Promise<ApiResponse<{\n    periods: Array<{\n      label: string;\n      year: number;\n      start: string;\n      end: string;\n      week1_start: string;\n      week1_end: string;\n      week2_start: string;\n      week2_end: string;\n    }>;\n    current_period: string;\n    year: number;\n  }>> {\n    const params = year ? `?year=${year}` : '';\n    return this.request(`/reports/periods${params}`);\n  }\n\n  async getChatterWeeklyReport(\n    chatterId: string, \n    period: string, \n    year?: number, \n    week: number = 1\n  ): Promise<ApiResponse<Array<{\n    report_id: string;\n    work_date: string;\n    chatter_id: string;\n    model_id: string;\n    hours: number;\n    net_sales: number;\n    period: string;\n    year: number;\n    week: number;\n    row_total: number;\n  }>>> {\n    const params = new URLSearchParams({\n      chatter_id: chatterId,\n      period: period,\n      week: week.toString(),\n      ...(year && { year: year.toString() })\n    });\n    return this.request(`/reports/week/get?${params.toString()}`);\n  }\n\n  async saveChatterWeeklyReport(payload: {\n    chatter_id: string;\n    period: string;\n    year: number;\n    week: number;\n    date_rows: Array<{\n      date: string;\n      rows: Array<{\n        model_id: string;\n        hours: number;\n        net_sales: number;\n      }>;\n    }>;\n  }): Promise<ApiResponse<{\n    hours_total: number;\n    hourly_pay_total: number;\n    commission_total: number;\n    total_payout: number;\n  }>> {\n    return this.request('/reports/week/save', {\n      method: 'POST',\n      body: JSON.stringify(payload),\n    });\n  }\n\n  async getReportsSummary(\n    period: string, \n    year?: number, \n    week?: number\n  ): Promise<ApiResponse<{\n    total_payout: number;\n    items: Array<{\n      summary_id: string;\n      chatter_id: string;\n      period: string;\n      year: number;\n      week: number;\n      hours_total: number;\n      hourly_pay_total: number;\n      commission_total: number;\n      total_payout: number;\n    }>;\n  }>> {\n    const params = new URLSearchParams({\n      period: period,\n      ...(year && { year: year.toString() }),\n      ...(week && { week: week.toString() })\n    });\n    return this.request(`/reports/summary?${params.toString()}`);\n  }\n\n  async getChatterSalaryData(\n    chatterId: string,\n    period: string, \n    year?: number\n  ): Promise<ApiResponse<{\n    chatter_id: string;\n    period: string;\n    year: number;\n    week1_salary: number;\n    week2_salary: number;\n    total_salary: number;\n    week1_data: any;\n    week2_data: any;\n  }>> {\n    const params = new URLSearchParams({\n      chatter_id: chatterId,\n      period: period,\n      ...(year && { year: year.toString() })\n    });\n    return this.request(`/reports/chatter-salary?${params.toString()}`);\n  }\n\n  async getChatterPayouts(\n    period: string, \n    year?: number\n  ): Promise<ApiResponse<Array<{\n    payout_id: string;\n    chatter_id: string;\n    period: string;\n    year: number;\n    week1_amount: number;\n    week2_amount: number;\n    total_amount: number;\n    payment_status: string;\n  }>>> {\n    const params = new URLSearchParams({\n      period: period,\n      ...(year && { year: year.toString() })\n    });\n    return this.request(`/payouts/list?${params.toString()}`);\n  }\n\n  // Salary Management APIs\n  async getManagerSalaryPeriods(year?: number): Promise<ApiResponse> {\n    const params = year ? `?year=${year}` : '';\n    return this.request(`/manager/salary/periods${params}`);\n  }\n\n  async calculateManagerSalary(managerId: string, period: string, year?: number): Promise<ApiResponse> {\n    const params = new URLSearchParams({\n      manager_id: managerId,\n      period: period,\n      ...(year && { year: year.toString() })\n    });\n    return this.request(`/manager/salary/calculate?${params.toString()}`, {\n      method: 'POST',\n    });\n  }\n\n  async getAssistantSalaryPeriods(year?: number): Promise<ApiResponse> {\n    const params = year ? `?year=${year}` : '';\n    return this.request(`/assistant/salary/periods${params}`);\n  }\n\n  async calculateAssistantSalary(assistantId: string, period: string, year?: number): Promise<ApiResponse> {\n    const params = new URLSearchParams({\n      assistant_id: assistantId,\n      period: period,\n      ...(year && { year: year.toString() })\n    });\n    return this.request(`/assistant/salary/calculate?${params.toString()}`, {\n      method: 'POST',\n    });\n  }\n\n  async getAssistantsWithPeriodSalaries(periods: string[], year?: number): Promise<ApiResponse> {\n    const params = new URLSearchParams({\n      periods: periods.join(','),\n      ...(year && { year: year.toString() })\n    });\n    return this.request(`/assistants/with-salaries?${params.toString()}`);\n  }\n\n  // Health check\n  async healthCheck(): Promise<ApiResponse> {\n    return this.request('/');\n  }\n\n  // Model Management APIs\n  async createModel(payload: ModelCreatePayload): Promise<ApiResponse<{ model_id: string }>> {\n    return this.request('/model/register', {\n      method: 'POST',\n      body: JSON.stringify(payload),\n    });\n  }\n\n  async getAllModels(params: {\n    limit?: number;\n    offset?: number;\n    query?: string;\n    sort?: string;\n    sort_by?: string;\n    status_filter?: string;\n    client_agency_name?: string;\n    manager_name?: string;\n    team_leader?: string;\n  } = {}): Promise<ApiResponse<ModelRecord[]>> {\n    const searchParams = new URLSearchParams();\n    Object.entries(params).forEach(([key, value]) => {\n      if (value !== undefined) {\n        searchParams.append(key, value.toString());\n      }\n    });\n\n    return this.request(`/model/list?${searchParams.toString()}`);\n  }\n\n  async getModelDetails(modelId: string): Promise<ApiResponse<ModelRecord>> {\n    return this.request(`/model/details?model_id=${encodeURIComponent(modelId)}`);\n  }\n\n  async updateModel(modelId: string, payload: ModelUpdatePayload): Promise<ApiResponse> {\n    return this.request(`/model/update?model_id=${encodeURIComponent(modelId)}`, {\n      method: 'PUT',\n      body: JSON.stringify(payload),\n    });\n  }\n\n  async deleteModel(modelId: string): Promise<ApiResponse> {\n    return this.request(`/model/delete?model_id=${encodeURIComponent(modelId)}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Insights Management APIs\n  async getAgencyInsights(\n    period: string, \n    year?: number, \n    week?: number\n  ): Promise<ApiResponse<{\n    revenue: number;\n    real_revenue: number;\n    cost: number;\n    profit: number;\n    real_profit: number;\n    metadata?: {\n      scope_type: string;\n      month?: string;\n      period?: string;\n      periods_included?: string[];\n    };\n  }>> {\n    const params = new URLSearchParams({\n      period: period,\n      ...(year && { year: year.toString() }),\n      ...(week && { week: week.toString() })\n    });\n    return this.request(`/insights/agency?${params.toString()}`);\n  }\n\n  async getDashboardKPIs(\n    period: string, \n    year?: number, \n    week?: number\n  ): Promise<ApiResponse<{\n    total_chatters: number;\n    total_models: number;\n    total_clients: number;\n    snapshot: {\n      revenue: number;\n      real_revenue: number;\n      cost: number;\n      profit: number;\n      real_profit: number;\n      metadata?: {\n        scope_type: string;\n        month?: string;\n        period?: string;\n        periods_included?: string[];\n      };\n    };\n    month_kpis?: {\n      period_breakdown: {\n        period_1: {\n          revenue: number;\n          real_revenue: number;\n          cost: number;\n          profit: number;\n          real_profit: number;\n        };\n        period_2: {\n          revenue: number;\n          real_revenue: number;\n          cost: number;\n          profit: number;\n          real_profit: number;\n        };\n      };\n      growth_metrics: {\n        revenue_growth_pct: number;\n        profit_growth_pct: number;\n        revenue_growth_abs: number;\n        profit_growth_abs: number;\n      };\n      month: string;\n      year: number;\n    };\n  }>> {\n    const params = new URLSearchParams({\n      period: period,\n      ...(year && { year: year.toString() }),\n      ...(week && { week: week.toString() })\n    });\n    return this.request(`/dashboard/kpis?${params.toString()}`);\n  }\n\n  async getModelInsights(\n    modelId: string, \n    period: string, \n    year?: number, \n    week?: number\n  ): Promise<ApiResponse<{\n    revenue: number;\n    real_revenue: number;\n    cost: number;\n    profit: number;\n    real_profit: number;\n    metadata?: {\n      scope_type: string;\n      month?: string;\n      period?: string;\n      periods_included?: string[];\n    };\n  }>> {\n    const params = new URLSearchParams({\n      period: period,\n      ...(year && { year: year.toString() }),\n      ...(week && { week: week.toString() })\n    });\n    return this.request(`/insights/model/${modelId}?${params.toString()}`);\n  }\n\n  async getModelCostBreakdown(\n    modelId: string,\n    period: string,\n    year?: number,\n    week?: number\n  ): Promise<ApiResponse<{\n    model_id: string;\n    period: string;\n    year: number;\n    chatter_cost: number;\n    tl_cost: number;\n    manager_cost: number;\n    assistant_cost: number;\n    total_cost: number;\n  }>> {\n    const params = new URLSearchParams({\n      period: period,\n      ...(year && { year: year.toString() }),\n      ...(week && { week: week.toString() })\n    });\n    return this.request(`/insights/model/cost-breakdown/${modelId}?${params.toString()}`);\n  }\n\n  async getLeaderboards(\n    period: string, \n    year?: number, \n    week?: number\n  ): Promise<ApiResponse<{\n    top_model_by_revenue: Array<{ id: string; value: number }>;\n    top_model_by_profit: Array<{ id: string; value: number }>;\n    most_expensive_chatter: Array<{ id: string; value: number }>;\n    month_leaderboards?: {\n      period_1_top_model: Array<{ id: string; value: number }>;\n      period_2_top_model: Array<{ id: string; value: number }>;\n      period_1_top_profit: Array<{ id: string; value: number }>;\n      period_2_top_profit: Array<{ id: string; value: number }>;\n      month: string;\n      year: number;\n    };\n  }>> {\n    const params = new URLSearchParams({\n      period: period,\n      ...(year && { year: year.toString() }),\n      ...(week && { week: week.toString() })\n    });\n    return this.request(`/dashboard/leaderboards?${params.toString()}`);\n  }\n\n  async listInvoices(params: {\n    model_id?: string;\n    period?: string;\n    year?: number;\n    week?: number;\n  } = {}): Promise<ApiResponse<Array<{\n    invoice_id: string;\n    model_id: string;\n    period: string;\n    year: number;\n    week?: number;\n    net_amount: number;\n    invoice_amount: number;\n    status: string;\n    notes?: string;\n    created_at: string;\n    updated_at?: string;\n  }>>> {\n    const queryParams = new URLSearchParams();\n    Object.entries(params).forEach(([key, value]) => {\n      if (value !== undefined) {\n        queryParams.append(key, value.toString());\n      }\n    });\n    return this.request(`/invoices/list?${queryParams.toString()}`);\n  }\n\n  async createInvoice(payload: {\n    model_id: string;\n    period: string;\n    year: number;\n    week?: number;\n    net_amount: number;\n    invoice_amount?: number;\n    status?: string;\n    notes?: string;\n  }): Promise<ApiResponse> {\n    return this.request('/invoice/create', {\n      method: 'POST',\n      body: JSON.stringify(payload),\n    });\n  }\n\n  async updateInvoice(\n    invoiceId: string, \n    updates: {\n      net_amount?: number;\n      invoice_amount?: number;\n      status?: string;\n      notes?: string;\n    },\n    autoCalculate: boolean = false\n  ): Promise<ApiResponse> {\n    return this.request(`/invoice/update?invoice_id=${encodeURIComponent(invoiceId)}&auto_calculate=${autoCalculate}`, {\n      method: 'PUT',\n      body: JSON.stringify(updates),\n    });\n  }\n\n  async calculateInvoice(\n    invoiceData: {\n      model_id: string;\n      net_amount: number;\n      reference_children?: Array<{\n        model_id: string;\n        net_sales: number;\n      }>;\n    }\n  ): Promise<ApiResponse> {\n    return this.request('/invoice/calculate', {\n      method: 'POST',\n      body: JSON.stringify(invoiceData),\n    });\n  }\n\n  async recomputeStaffCosts(\n    period: string, \n    year?: number, \n    week?: number\n  ): Promise<ApiResponse> {\n    const params = new URLSearchParams({\n      period: period,\n      ...(year && { year: year.toString() }),\n      ...(week && { week: week.toString() })\n    });\n    return this.request(`/insights/recompute-costs?${params.toString()}`, {\n      method: 'POST',\n    });\n  }\n\n  async recomputeStaffCostsMonth(\n    month: string,\n    year: number\n  ): Promise<ApiResponse> {\n    const params = new URLSearchParams({\n      month: month,\n      year: year.toString()\n    });\n    return this.request(`/recompute-costs-month?${params.toString()}`, {\n      method: 'POST',\n    });\n  }\n\n  async saveAgencyInsights(data: {\n    period: string;\n    year: number;\n    week?: number;\n    revenue: number;\n    real_revenue: number;\n    cost: number;\n    profit: number;\n    real_profit: number;\n  }): Promise<ApiResponse> {\n    return this.request('/insights/agency/save', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  }\n\n  async saveModelInsights(data: {\n    model_id: string;\n    period: string;\n    year: number;\n    week?: number;\n    net_sales: number;\n    invoice_value: number;\n    invoice_status: string;\n    revenue: number;\n    profit: number;\n  }): Promise<ApiResponse> {\n    return this.request('/insights/model/save', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  }\n\n  async getSavedAgencyInsights(period: string, year: number, week?: number): Promise<ApiResponse> {\n    const params = new URLSearchParams({\n      period: period,\n      year: year.toString(),\n      ...(week && { week: week.toString() })\n    });\n    return this.request(`/insights/agency/saved?${params.toString()}`);\n  }\n\n  async getSavedModelInsights(modelId: string, period: string, year: number, week?: number): Promise<ApiResponse> {\n    const params = new URLSearchParams({\n      model_id: modelId,\n      period: period,\n      year: year.toString(),\n      ...(week && { week: week.toString() })\n    });\n    return this.request(`/insights/model/saved?${params.toString()}`);\n  }\n}\n\nexport const apiService = new ApiService();\n\n// Salary Calculation Interfaces\nexport interface ReferenceChild {\n  model_id: string;\n  hours: number;\n  net_sales: number;\n}\n\nexport interface WorkRow {\n  model_id: string;\n  hours: number;\n  net_sales: number;\n  reference_children?: ReferenceChild[];\n}\n\nexport interface DailySalaryCalculationRequest {\n  chatter_id: string;\n  work_date: string;\n  work_rows: WorkRow[];\n}\n\nexport interface WeeklySalaryCalculationRequest {\n  chatter_id: string;\n  period: string;\n  year: number;\n  week: number;\n}\n\nexport interface DailySalaryResult {\n  total_salary: number;\n  hourly_pay: number;\n  commission_total: number;\n  row_breakdown: Array<{\n    model_id: string;\n    model_name: string;\n    hours: number;\n    net_sales: number;\n    commission: number;\n    is_reference_model: boolean;\n  }>;\n  net_earnings: number;\n  model_count: number;\n  hourly_rate: number;\n  total_hours: number;\n  total_net_sales: number;\n}\n\nexport interface WeeklySalaryResult {\n  week_salary: number;\n  daily_breakdown: Array<{\n    date: string;\n    salary: number;\n    hourly_pay: number;\n    commission: number;\n    net_earnings: number;\n    model_count: number;\n    total_hours: number;\n  }>;\n  total_hours: number;\n  total_commission: number;\n  net_earnings: number;\n}\n\n// Salary Calculation API Functions\nexport const calculateDailySalary = async (\n  request: DailySalaryCalculationRequest\n): Promise<ApiResponse<DailySalaryResult>> => {\n  try {\n    // Backend expects chatter_id and work_date as query params and body as a list of work_rows\n    const params = new URLSearchParams({\n      chatter_id: request.chatter_id,\n      work_date: request.work_date,\n    });\n\n    return await apiService['request'](`/salary/calculate-daily?${params.toString()}`, {\n      method: 'POST',\n      body: JSON.stringify(request.work_rows),\n    });\n  } catch (error) {\n    console.error('Error calculating daily salary:', error);\n    return {\n      status: 'Failed',\n      message: error instanceof Error ? error.message : 'Failed to calculate daily salary',\n      data: null,\n    } as unknown as ApiResponse<DailySalaryResult>;\n  }\n};\n\nexport const calculateWeeklySalary = async (\n  request: WeeklySalaryCalculationRequest\n): Promise<ApiResponse<WeeklySalaryResult>> => {\n  try {\n    // Backend expects all params in the query string; POST with no body\n    const params = new URLSearchParams({\n      chatter_id: request.chatter_id,\n      period: request.period,\n      year: request.year.toString(),\n      week: request.week.toString(),\n    });\n    return await apiService['request'](`/salary/calculate-week?${params.toString()}`, { method: 'POST' });\n  } catch (error) {\n    console.error('Error calculating weekly salary:', error);\n    return {\n      status: 'Failed',\n      message: error instanceof Error ? error.message : 'Failed to calculate weekly salary',\n      data: null,\n    } as unknown as ApiResponse<WeeklySalaryResult>;\n  }\n};\n\n// Save Agency Insights Data\nexport const saveAgencyInsights = async (data: {\n  period: string;\n  year: number;\n  week?: number;\n  revenue: number;\n  real_revenue: number;\n  cost: number;\n  profit: number;\n  real_profit: number;\n}): Promise<ApiResponse<any>> => {\n  try {\n    return await apiService['request']('/insights/agency/save', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  } catch (error) {\n    console.error('Error saving agency insights:', error);\n    return {\n      status: 'Failed',\n      message: 'Failed to save agency insights',\n      data: null,\n    };\n  }\n};\n\n// Save Model Insights Data\nexport const saveModelInsights = async (data: {\n  model_id: string;\n  period: string;\n  year: number;\n  week?: number;\n  net_sales: number;\n  invoice_value: number;\n  invoice_status: string;\n  revenue: number;\n  profit: number;\n}): Promise<ApiResponse<any>> => {\n  try {\n    return await apiService['request']('/insights/model/save', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  } catch (error) {\n    console.error('Error saving model insights:', error);\n    return {\n      status: 'Failed',\n      message: 'Failed to save model insights',\n      data: null,\n    };\n  }\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1033, "column": 0}, "map": {"version":3,"sources":["file:///Users/skysha/Downloads/GoatFinance/frontend/src/lib/auth-context.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { apiService } from './api';\n\ninterface User {\n  admin_id: string;\n  email: string;\n  username: string;\n  first_name: string;\n  last_name: string;\n  role: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  login: (userData: User) => void;\n  logout: () => Promise<void>;\n  checkAuth: () => Promise<boolean>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function AuthProvider({ children }: { children: ReactNode }) {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const isAuthenticated = !!user;\n\n  const login = (userData: User) => {\n    setUser(userData);\n    // Store user data in localStorage for persistence\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n\n  const logout = async () => {\n    try {\n      // Call the logout API endpoint\n      await apiService.logoutAdmin();\n    } catch (error) {\n      console.error('Logout API call failed:', error);\n      // Continue with local logout even if API call fails\n    } finally {\n      // Clear local state and storage\n      setUser(null);\n      localStorage.removeItem('user');\n      // Clear the auth cookie\n      document.cookie = 'access_token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n    }\n  };\n\n  const checkAuth = async (): Promise<boolean> => {\n    try {\n      // Check if user data exists in localStorage\n      const storedUser = localStorage.getItem('user');\n      if (storedUser) {\n        const userData = JSON.parse(storedUser);\n        setUser(userData);\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    checkAuth();\n  }, []);\n\n  const value: AuthContextType = {\n    user,\n    isAuthenticated,\n    isLoading,\n    login,\n    logout,\n    checkAuth,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAHA;;;;AAuBA,MAAM,4BAAc,IAAA,8PAAa,EAA8B;AAExD,SAAS,aAAa,EAAE,QAAQ,EAA2B;IAChE,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,yPAAQ,EAAc;IAC9C,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,yPAAQ,EAAC;IAE3C,MAAM,kBAAkB,CAAC,CAAC;IAE1B,MAAM,QAAQ,CAAC;QACb,QAAQ;QACR,kDAAkD;QAClD,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;IAC9C;IAEA,MAAM,SAAS;QACb,IAAI;YACF,+BAA+B;YAC/B,MAAM,uKAAU,CAAC,WAAW;QAC9B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,oDAAoD;QACtD,SAAU;YACR,gCAAgC;YAChC,QAAQ;YACR,aAAa,UAAU,CAAC;YACxB,wBAAwB;YACxB,SAAS,MAAM,GAAG;QACpB;IACF;IAEA,MAAM,YAAY;QAChB,IAAI;YACF,4CAA4C;YAC5C,MAAM,aAAa,aAAa,OAAO,CAAC;YACxC,IAAI,YAAY;gBACd,MAAM,WAAW,KAAK,KAAK,CAAC;gBAC5B,QAAQ;gBACR,OAAO;YACT;YACA,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,sBAAsB;YACpC,OAAO;QACT,SAAU;YACR,aAAa;QACf;IACF;IAEA,IAAA,0PAAS,EAAC;QACR;IACF,GAAG,EAAE;IAEL,MAAM,QAAyB;QAC7B;QACA;QACA;QACA;QACA;QACA;IACF;IAEA,qBACE,sRAAC,YAAY,QAAQ;QAAC,OAAO;kBAC1B;;;;;;AAGP;AAEO,SAAS;IACd,MAAM,UAAU,IAAA,2PAAU,EAAC;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}}]
}